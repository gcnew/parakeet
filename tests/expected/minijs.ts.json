{
    "kind": "right",
    "value": [
        [
            {
                "kind": "block_statement",
                "statements": [
                    {
                        "kind": "block_statement",
                        "statements": [
                            {
                                "kind": "block_statement",
                                "statements": []
                            },
                            {
                                "kind": "function_decl",
                                "name": "innerFunction",
                                "params": [
                                    "arg"
                                ],
                                "body": {
                                    "kind": "block_statement",
                                    "statements": []
                                }
                            }
                        ]
                    }
                ]
            },
            {
                "kind": "if_statement",
                "cond": {
                    "kind": "bool_expr",
                    "value": true
                },
                "ifTrue": {
                    "kind": "block_statement",
                    "statements": [
                        {
                            "kind": "const_decl",
                            "name": "x",
                            "expr": {
                                "kind": "num_expr",
                                "value": 10
                            }
                        }
                    ]
                }
            },
            {
                "kind": "if_statement",
                "cond": {
                    "kind": "bool_expr",
                    "value": false
                },
                "ifTrue": {
                    "kind": "block_statement",
                    "statements": [
                        {
                            "kind": "const_decl",
                            "name": "y",
                            "expr": {
                                "kind": "num_expr",
                                "value": 1
                            }
                        }
                    ]
                },
                "ifFalse": {
                    "kind": "block_statement",
                    "statements": [
                        {
                            "kind": "const_decl",
                            "name": "y",
                            "expr": {
                                "kind": "num_expr",
                                "value": 2
                            }
                        }
                    ]
                }
            },
            {
                "kind": "const_decl",
                "name": "lambda1",
                "expr": {
                    "kind": "lambda_expr",
                    "params": [
                        "x"
                    ],
                    "body": {
                        "kind": "var_expr",
                        "name": "x"
                    }
                }
            },
            {
                "kind": "const_decl",
                "name": "flip1",
                "expr": {
                    "kind": "lambda_expr",
                    "params": [
                        "f"
                    ],
                    "body": {
                        "kind": "lambda_expr",
                        "params": [
                            "x",
                            "y"
                        ],
                        "body": {
                            "kind": "call_expr",
                            "fn": {
                                "kind": "var_expr",
                                "name": "f"
                            },
                            "args": [
                                {
                                    "kind": "var_expr",
                                    "name": "y"
                                },
                                {
                                    "kind": "var_expr",
                                    "name": "x"
                                }
                            ]
                        }
                    }
                }
            },
            {
                "kind": "function_decl",
                "name": "lambda2",
                "params": [
                    "x"
                ],
                "body": {
                    "kind": "block_statement",
                    "statements": [
                        {
                            "kind": "return_statement",
                            "expr": {
                                "kind": "var_expr",
                                "name": "x"
                            }
                        }
                    ]
                }
            },
            {
                "kind": "function_decl",
                "name": "flip2",
                "params": [
                    "f",
                    "x",
                    "y"
                ],
                "body": {
                    "kind": "block_statement",
                    "statements": [
                        {
                            "kind": "return_statement",
                            "expr": {
                                "kind": "call_expr",
                                "fn": {
                                    "kind": "var_expr",
                                    "name": "f"
                                },
                                "args": [
                                    {
                                        "kind": "var_expr",
                                        "name": "y"
                                    },
                                    {
                                        "kind": "var_expr",
                                        "name": "x"
                                    }
                                ]
                            }
                        }
                    ]
                }
            },
            {
                "kind": "function_decl",
                "name": "main",
                "params": [],
                "body": {
                    "kind": "block_statement",
                    "statements": [
                        {
                            "kind": "const_decl",
                            "name": "s",
                            "expr": {
                                "kind": "str_expr",
                                "value": "hello world'\n :D"
                            }
                        },
                        {
                            "kind": "const_decl",
                            "name": "n",
                            "expr": {
                                "kind": "num_expr",
                                "value": 42
                            }
                        },
                        {
                            "kind": "const_decl",
                            "name": "id",
                            "expr": {
                                "kind": "lambda_expr",
                                "params": [
                                    "x"
                                ],
                                "body": {
                                    "kind": "var_expr",
                                    "name": "x"
                                }
                            }
                        },
                        {
                            "kind": "const_decl",
                            "name": "toString",
                            "expr": {
                                "kind": "lambda_expr",
                                "params": [
                                    "x"
                                ],
                                "body": {
                                    "kind": "call_expr",
                                    "fn": {
                                        "kind": "member_expr",
                                        "obj": {
                                            "kind": "var_expr",
                                            "name": "x"
                                        },
                                        "prop": "toString"
                                    },
                                    "args": []
                                }
                            }
                        },
                        {
                            "kind": "const_decl",
                            "name": "const",
                            "expr": {
                                "kind": "lambda_expr",
                                "params": [
                                    "x"
                                ],
                                "body": {
                                    "kind": "lambda_expr",
                                    "params": [
                                        "y"
                                    ],
                                    "body": {
                                        "kind": "var_expr",
                                        "name": "x"
                                    }
                                }
                            }
                        },
                        {
                            "kind": "const_decl",
                            "name": "hard",
                            "expr": {
                                "kind": "call_expr",
                                "fn": {
                                    "kind": "call_expr",
                                    "fn": {
                                        "kind": "var_expr",
                                        "name": "f"
                                    },
                                    "args": [
                                        {
                                            "kind": "index_expr",
                                            "obj": {
                                                "kind": "member_expr",
                                                "obj": {
                                                    "kind": "var_expr",
                                                    "name": "res"
                                                },
                                                "prop": "value"
                                            },
                                            "index": {
                                                "kind": "num_expr",
                                                "value": 0
                                            }
                                        }
                                    ]
                                },
                                "args": [
                                    {
                                        "kind": "index_expr",
                                        "obj": {
                                            "kind": "member_expr",
                                            "obj": {
                                                "kind": "var_expr",
                                                "name": "res"
                                            },
                                            "prop": "value"
                                        },
                                        "index": {
                                            "kind": "num_expr",
                                            "value": 1
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "kind": "return_statement",
                            "expr": {
                                "kind": "num_expr",
                                "value": 3
                            }
                        }
                    ]
                }
            }
        ],
        {
            "source": "\n{{\n    {}\n    function innerFunction(arg) {\n    }\n}}\n\nif (true) {\n    const x = 10;\n}\n\nif (false) {\n    const y = 1;\n} else {\n    const y = 2;\n}\n\nconst lambda1 = (x) => x;\nconst flip1 = f => (x,y) => f(y,x);\n\nfunction lambda2(x){return x;}function flip2(f, x,y){return f(y,x)}\n\n\nfunction main() {\n    const s = 'hello world\\'\\n :D';\n    const n = 42\n    const id = x => x;\n    const toString = x => x.toString();\n    const const = x => y => x;\n    const hard  = f(res.value[0])(res.value[1])\n\n    return 3;\n}\n",
            "offset": 510,
            "data": {
                "lineOffsetTable": [
                    [
                        0,
                        ""
                    ],
                    [
                        1,
                        "{{"
                    ],
                    [
                        4,
                        "    {}"
                    ],
                    [
                        11,
                        "    function innerFunction(arg) {"
                    ],
                    [
                        45,
                        "    }"
                    ],
                    [
                        51,
                        "}}"
                    ],
                    [
                        54,
                        ""
                    ],
                    [
                        55,
                        "if (true) {"
                    ],
                    [
                        67,
                        "    const x = 10;"
                    ],
                    [
                        85,
                        "}"
                    ],
                    [
                        87,
                        ""
                    ],
                    [
                        88,
                        "if (false) {"
                    ],
                    [
                        101,
                        "    const y = 1;"
                    ],
                    [
                        118,
                        "} else {"
                    ],
                    [
                        127,
                        "    const y = 2;"
                    ],
                    [
                        144,
                        "}"
                    ],
                    [
                        146,
                        ""
                    ],
                    [
                        147,
                        "const lambda1 = (x) => x;"
                    ],
                    [
                        173,
                        "const flip1 = f => (x,y) => f(y,x);"
                    ],
                    [
                        209,
                        ""
                    ],
                    [
                        210,
                        "function lambda2(x){return x;}function flip2(f, x,y){return f(y,x)}"
                    ],
                    [
                        278,
                        ""
                    ],
                    [
                        279,
                        ""
                    ],
                    [
                        280,
                        "function main() {"
                    ],
                    [
                        298,
                        "    const s = 'hello world\\'\\n :D';"
                    ],
                    [
                        334,
                        "    const n = 42"
                    ],
                    [
                        351,
                        "    const id = x => x;"
                    ],
                    [
                        374,
                        "    const toString = x => x.toString();"
                    ],
                    [
                        414,
                        "    const const = x => y => x;"
                    ],
                    [
                        445,
                        "    const hard  = f(res.value[0])(res.value[1])"
                    ],
                    [
                        493,
                        ""
                    ],
                    [
                        494,
                        "    return 3;"
                    ],
                    [
                        508,
                        "}"
                    ],
                    [
                        510,
                        ""
                    ]
                ],
                "$cache": {
                    "1": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_punct",
                                    "value": "{",
                                    "start": 1,
                                    "end": 2
                                },
                                {
                                    "source": "\n{{\n    {}\n    function innerFunction(arg) {\n    }\n}}\n\nif (true) {\n    const x = 10;\n}\n\nif (false) {\n    const y = 1;\n} else {\n    const y = 2;\n}\n\nconst lambda1 = (x) => x;\nconst flip1 = f => (x,y) => f(y,x);\n\nfunction lambda2(x){return x;}function flip2(f, x,y){return f(y,x)}\n\n\nfunction main() {\n    const s = 'hello world\\'\\n :D';\n    const n = 42\n    const id = x => x;\n    const toString = x => x.toString();\n    const const = x => y => x;\n    const hard  = f(res.value[0])(res.value[1])\n\n    return 3;\n}\n",
                                    "offset": 2,
                                    "data": "Cycle(root.value[1].data.$cache[1].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "2": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_punct",
                                    "value": "{",
                                    "start": 2,
                                    "end": 3
                                },
                                {
                                    "source": "\n{{\n    {}\n    function innerFunction(arg) {\n    }\n}}\n\nif (true) {\n    const x = 10;\n}\n\nif (false) {\n    const y = 1;\n} else {\n    const y = 2;\n}\n\nconst lambda1 = (x) => x;\nconst flip1 = f => (x,y) => f(y,x);\n\nfunction lambda2(x){return x;}function flip2(f, x,y){return f(y,x)}\n\n\nfunction main() {\n    const s = 'hello world\\'\\n :D';\n    const n = 42\n    const id = x => x;\n    const toString = x => x.toString();\n    const const = x => y => x;\n    const hard  = f(res.value[0])(res.value[1])\n\n    return 3;\n}\n",
                                    "offset": 8,
                                    "data": "Cycle(root.value[1].data.$cache[2].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "8": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_punct",
                                    "value": "{",
                                    "start": 8,
                                    "end": 9
                                },
                                {
                                    "source": "\n{{\n    {}\n    function innerFunction(arg) {\n    }\n}}\n\nif (true) {\n    const x = 10;\n}\n\nif (false) {\n    const y = 1;\n} else {\n    const y = 2;\n}\n\nconst lambda1 = (x) => x;\nconst flip1 = f => (x,y) => f(y,x);\n\nfunction lambda2(x){return x;}function flip2(f, x,y){return f(y,x)}\n\n\nfunction main() {\n    const s = 'hello world\\'\\n :D';\n    const n = 42\n    const id = x => x;\n    const toString = x => x.toString();\n    const const = x => y => x;\n    const hard  = f(res.value[0])(res.value[1])\n\n    return 3;\n}\n",
                                    "offset": 9,
                                    "data": "Cycle(root.value[1].data.$cache[8].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "9": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_punct",
                                    "value": "}",
                                    "start": 9,
                                    "end": 10
                                },
                                {
                                    "source": "\n{{\n    {}\n    function innerFunction(arg) {\n    }\n}}\n\nif (true) {\n    const x = 10;\n}\n\nif (false) {\n    const y = 1;\n} else {\n    const y = 2;\n}\n\nconst lambda1 = (x) => x;\nconst flip1 = f => (x,y) => f(y,x);\n\nfunction lambda2(x){return x;}function flip2(f, x,y){return f(y,x)}\n\n\nfunction main() {\n    const s = 'hello world\\'\\n :D';\n    const n = 42\n    const id = x => x;\n    const toString = x => x.toString();\n    const const = x => y => x;\n    const hard  = f(res.value[0])(res.value[1])\n\n    return 3;\n}\n",
                                    "offset": 15,
                                    "data": "Cycle(root.value[1].data.$cache[9].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "15": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_id",
                                    "value": "function",
                                    "start": 15,
                                    "end": 23
                                },
                                {
                                    "source": "\n{{\n    {}\n    function innerFunction(arg) {\n    }\n}}\n\nif (true) {\n    const x = 10;\n}\n\nif (false) {\n    const y = 1;\n} else {\n    const y = 2;\n}\n\nconst lambda1 = (x) => x;\nconst flip1 = f => (x,y) => f(y,x);\n\nfunction lambda2(x){return x;}function flip2(f, x,y){return f(y,x)}\n\n\nfunction main() {\n    const s = 'hello world\\'\\n :D';\n    const n = 42\n    const id = x => x;\n    const toString = x => x.toString();\n    const const = x => y => x;\n    const hard  = f(res.value[0])(res.value[1])\n\n    return 3;\n}\n",
                                    "offset": 24,
                                    "data": "Cycle(root.value[1].data.$cache[15].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "24": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_id",
                                    "value": "innerFunction",
                                    "start": 24,
                                    "end": 37
                                },
                                {
                                    "source": "\n{{\n    {}\n    function innerFunction(arg) {\n    }\n}}\n\nif (true) {\n    const x = 10;\n}\n\nif (false) {\n    const y = 1;\n} else {\n    const y = 2;\n}\n\nconst lambda1 = (x) => x;\nconst flip1 = f => (x,y) => f(y,x);\n\nfunction lambda2(x){return x;}function flip2(f, x,y){return f(y,x)}\n\n\nfunction main() {\n    const s = 'hello world\\'\\n :D';\n    const n = 42\n    const id = x => x;\n    const toString = x => x.toString();\n    const const = x => y => x;\n    const hard  = f(res.value[0])(res.value[1])\n\n    return 3;\n}\n",
                                    "offset": 37,
                                    "data": "Cycle(root.value[1].data.$cache[24].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "37": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_punct",
                                    "value": "(",
                                    "start": 37,
                                    "end": 38
                                },
                                {
                                    "source": "\n{{\n    {}\n    function innerFunction(arg) {\n    }\n}}\n\nif (true) {\n    const x = 10;\n}\n\nif (false) {\n    const y = 1;\n} else {\n    const y = 2;\n}\n\nconst lambda1 = (x) => x;\nconst flip1 = f => (x,y) => f(y,x);\n\nfunction lambda2(x){return x;}function flip2(f, x,y){return f(y,x)}\n\n\nfunction main() {\n    const s = 'hello world\\'\\n :D';\n    const n = 42\n    const id = x => x;\n    const toString = x => x.toString();\n    const const = x => y => x;\n    const hard  = f(res.value[0])(res.value[1])\n\n    return 3;\n}\n",
                                    "offset": 38,
                                    "data": "Cycle(root.value[1].data.$cache[37].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "38": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_id",
                                    "value": "arg",
                                    "start": 38,
                                    "end": 41
                                },
                                {
                                    "source": "\n{{\n    {}\n    function innerFunction(arg) {\n    }\n}}\n\nif (true) {\n    const x = 10;\n}\n\nif (false) {\n    const y = 1;\n} else {\n    const y = 2;\n}\n\nconst lambda1 = (x) => x;\nconst flip1 = f => (x,y) => f(y,x);\n\nfunction lambda2(x){return x;}function flip2(f, x,y){return f(y,x)}\n\n\nfunction main() {\n    const s = 'hello world\\'\\n :D';\n    const n = 42\n    const id = x => x;\n    const toString = x => x.toString();\n    const const = x => y => x;\n    const hard  = f(res.value[0])(res.value[1])\n\n    return 3;\n}\n",
                                    "offset": 41,
                                    "data": "Cycle(root.value[1].data.$cache[38].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "41": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_punct",
                                    "value": ")",
                                    "start": 41,
                                    "end": 42
                                },
                                {
                                    "source": "\n{{\n    {}\n    function innerFunction(arg) {\n    }\n}}\n\nif (true) {\n    const x = 10;\n}\n\nif (false) {\n    const y = 1;\n} else {\n    const y = 2;\n}\n\nconst lambda1 = (x) => x;\nconst flip1 = f => (x,y) => f(y,x);\n\nfunction lambda2(x){return x;}function flip2(f, x,y){return f(y,x)}\n\n\nfunction main() {\n    const s = 'hello world\\'\\n :D';\n    const n = 42\n    const id = x => x;\n    const toString = x => x.toString();\n    const const = x => y => x;\n    const hard  = f(res.value[0])(res.value[1])\n\n    return 3;\n}\n",
                                    "offset": 43,
                                    "data": "Cycle(root.value[1].data.$cache[41].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "43": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_punct",
                                    "value": "{",
                                    "start": 43,
                                    "end": 44
                                },
                                {
                                    "source": "\n{{\n    {}\n    function innerFunction(arg) {\n    }\n}}\n\nif (true) {\n    const x = 10;\n}\n\nif (false) {\n    const y = 1;\n} else {\n    const y = 2;\n}\n\nconst lambda1 = (x) => x;\nconst flip1 = f => (x,y) => f(y,x);\n\nfunction lambda2(x){return x;}function flip2(f, x,y){return f(y,x)}\n\n\nfunction main() {\n    const s = 'hello world\\'\\n :D';\n    const n = 42\n    const id = x => x;\n    const toString = x => x.toString();\n    const const = x => y => x;\n    const hard  = f(res.value[0])(res.value[1])\n\n    return 3;\n}\n",
                                    "offset": 49,
                                    "data": "Cycle(root.value[1].data.$cache[43].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "49": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_punct",
                                    "value": "}",
                                    "start": 49,
                                    "end": 50
                                },
                                {
                                    "source": "\n{{\n    {}\n    function innerFunction(arg) {\n    }\n}}\n\nif (true) {\n    const x = 10;\n}\n\nif (false) {\n    const y = 1;\n} else {\n    const y = 2;\n}\n\nconst lambda1 = (x) => x;\nconst flip1 = f => (x,y) => f(y,x);\n\nfunction lambda2(x){return x;}function flip2(f, x,y){return f(y,x)}\n\n\nfunction main() {\n    const s = 'hello world\\'\\n :D';\n    const n = 42\n    const id = x => x;\n    const toString = x => x.toString();\n    const const = x => y => x;\n    const hard  = f(res.value[0])(res.value[1])\n\n    return 3;\n}\n",
                                    "offset": 51,
                                    "data": "Cycle(root.value[1].data.$cache[49].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "51": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_punct",
                                    "value": "}",
                                    "start": 51,
                                    "end": 52
                                },
                                {
                                    "source": "\n{{\n    {}\n    function innerFunction(arg) {\n    }\n}}\n\nif (true) {\n    const x = 10;\n}\n\nif (false) {\n    const y = 1;\n} else {\n    const y = 2;\n}\n\nconst lambda1 = (x) => x;\nconst flip1 = f => (x,y) => f(y,x);\n\nfunction lambda2(x){return x;}function flip2(f, x,y){return f(y,x)}\n\n\nfunction main() {\n    const s = 'hello world\\'\\n :D';\n    const n = 42\n    const id = x => x;\n    const toString = x => x.toString();\n    const const = x => y => x;\n    const hard  = f(res.value[0])(res.value[1])\n\n    return 3;\n}\n",
                                    "offset": 52,
                                    "data": "Cycle(root.value[1].data.$cache[51].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "52": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_punct",
                                    "value": "}",
                                    "start": 52,
                                    "end": 53
                                },
                                {
                                    "source": "\n{{\n    {}\n    function innerFunction(arg) {\n    }\n}}\n\nif (true) {\n    const x = 10;\n}\n\nif (false) {\n    const y = 1;\n} else {\n    const y = 2;\n}\n\nconst lambda1 = (x) => x;\nconst flip1 = f => (x,y) => f(y,x);\n\nfunction lambda2(x){return x;}function flip2(f, x,y){return f(y,x)}\n\n\nfunction main() {\n    const s = 'hello world\\'\\n :D';\n    const n = 42\n    const id = x => x;\n    const toString = x => x.toString();\n    const const = x => y => x;\n    const hard  = f(res.value[0])(res.value[1])\n\n    return 3;\n}\n",
                                    "offset": 55,
                                    "data": "Cycle(root.value[1].data.$cache[52].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "55": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_id",
                                    "value": "if",
                                    "start": 55,
                                    "end": 57
                                },
                                {
                                    "source": "\n{{\n    {}\n    function innerFunction(arg) {\n    }\n}}\n\nif (true) {\n    const x = 10;\n}\n\nif (false) {\n    const y = 1;\n} else {\n    const y = 2;\n}\n\nconst lambda1 = (x) => x;\nconst flip1 = f => (x,y) => f(y,x);\n\nfunction lambda2(x){return x;}function flip2(f, x,y){return f(y,x)}\n\n\nfunction main() {\n    const s = 'hello world\\'\\n :D';\n    const n = 42\n    const id = x => x;\n    const toString = x => x.toString();\n    const const = x => y => x;\n    const hard  = f(res.value[0])(res.value[1])\n\n    return 3;\n}\n",
                                    "offset": 58,
                                    "data": "Cycle(root.value[1].data.$cache[55].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "58": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_punct",
                                    "value": "(",
                                    "start": 58,
                                    "end": 59
                                },
                                {
                                    "source": "\n{{\n    {}\n    function innerFunction(arg) {\n    }\n}}\n\nif (true) {\n    const x = 10;\n}\n\nif (false) {\n    const y = 1;\n} else {\n    const y = 2;\n}\n\nconst lambda1 = (x) => x;\nconst flip1 = f => (x,y) => f(y,x);\n\nfunction lambda2(x){return x;}function flip2(f, x,y){return f(y,x)}\n\n\nfunction main() {\n    const s = 'hello world\\'\\n :D';\n    const n = 42\n    const id = x => x;\n    const toString = x => x.toString();\n    const const = x => y => x;\n    const hard  = f(res.value[0])(res.value[1])\n\n    return 3;\n}\n",
                                    "offset": 59,
                                    "data": "Cycle(root.value[1].data.$cache[58].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "59": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_id",
                                    "value": "true",
                                    "start": 59,
                                    "end": 63
                                },
                                {
                                    "source": "\n{{\n    {}\n    function innerFunction(arg) {\n    }\n}}\n\nif (true) {\n    const x = 10;\n}\n\nif (false) {\n    const y = 1;\n} else {\n    const y = 2;\n}\n\nconst lambda1 = (x) => x;\nconst flip1 = f => (x,y) => f(y,x);\n\nfunction lambda2(x){return x;}function flip2(f, x,y){return f(y,x)}\n\n\nfunction main() {\n    const s = 'hello world\\'\\n :D';\n    const n = 42\n    const id = x => x;\n    const toString = x => x.toString();\n    const const = x => y => x;\n    const hard  = f(res.value[0])(res.value[1])\n\n    return 3;\n}\n",
                                    "offset": 63,
                                    "data": "Cycle(root.value[1].data.$cache[59].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "63": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_punct",
                                    "value": ")",
                                    "start": 63,
                                    "end": 64
                                },
                                {
                                    "source": "\n{{\n    {}\n    function innerFunction(arg) {\n    }\n}}\n\nif (true) {\n    const x = 10;\n}\n\nif (false) {\n    const y = 1;\n} else {\n    const y = 2;\n}\n\nconst lambda1 = (x) => x;\nconst flip1 = f => (x,y) => f(y,x);\n\nfunction lambda2(x){return x;}function flip2(f, x,y){return f(y,x)}\n\n\nfunction main() {\n    const s = 'hello world\\'\\n :D';\n    const n = 42\n    const id = x => x;\n    const toString = x => x.toString();\n    const const = x => y => x;\n    const hard  = f(res.value[0])(res.value[1])\n\n    return 3;\n}\n",
                                    "offset": 65,
                                    "data": "Cycle(root.value[1].data.$cache[63].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "65": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_punct",
                                    "value": "{",
                                    "start": 65,
                                    "end": 66
                                },
                                {
                                    "source": "\n{{\n    {}\n    function innerFunction(arg) {\n    }\n}}\n\nif (true) {\n    const x = 10;\n}\n\nif (false) {\n    const y = 1;\n} else {\n    const y = 2;\n}\n\nconst lambda1 = (x) => x;\nconst flip1 = f => (x,y) => f(y,x);\n\nfunction lambda2(x){return x;}function flip2(f, x,y){return f(y,x)}\n\n\nfunction main() {\n    const s = 'hello world\\'\\n :D';\n    const n = 42\n    const id = x => x;\n    const toString = x => x.toString();\n    const const = x => y => x;\n    const hard  = f(res.value[0])(res.value[1])\n\n    return 3;\n}\n",
                                    "offset": 71,
                                    "data": "Cycle(root.value[1].data.$cache[65].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "71": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_id",
                                    "value": "const",
                                    "start": 71,
                                    "end": 76
                                },
                                {
                                    "source": "\n{{\n    {}\n    function innerFunction(arg) {\n    }\n}}\n\nif (true) {\n    const x = 10;\n}\n\nif (false) {\n    const y = 1;\n} else {\n    const y = 2;\n}\n\nconst lambda1 = (x) => x;\nconst flip1 = f => (x,y) => f(y,x);\n\nfunction lambda2(x){return x;}function flip2(f, x,y){return f(y,x)}\n\n\nfunction main() {\n    const s = 'hello world\\'\\n :D';\n    const n = 42\n    const id = x => x;\n    const toString = x => x.toString();\n    const const = x => y => x;\n    const hard  = f(res.value[0])(res.value[1])\n\n    return 3;\n}\n",
                                    "offset": 77,
                                    "data": "Cycle(root.value[1].data.$cache[71].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "77": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_id",
                                    "value": "x",
                                    "start": 77,
                                    "end": 78
                                },
                                {
                                    "source": "\n{{\n    {}\n    function innerFunction(arg) {\n    }\n}}\n\nif (true) {\n    const x = 10;\n}\n\nif (false) {\n    const y = 1;\n} else {\n    const y = 2;\n}\n\nconst lambda1 = (x) => x;\nconst flip1 = f => (x,y) => f(y,x);\n\nfunction lambda2(x){return x;}function flip2(f, x,y){return f(y,x)}\n\n\nfunction main() {\n    const s = 'hello world\\'\\n :D';\n    const n = 42\n    const id = x => x;\n    const toString = x => x.toString();\n    const const = x => y => x;\n    const hard  = f(res.value[0])(res.value[1])\n\n    return 3;\n}\n",
                                    "offset": 79,
                                    "data": "Cycle(root.value[1].data.$cache[77].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "79": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_operator",
                                    "value": "=",
                                    "start": 79,
                                    "end": 80
                                },
                                {
                                    "source": "\n{{\n    {}\n    function innerFunction(arg) {\n    }\n}}\n\nif (true) {\n    const x = 10;\n}\n\nif (false) {\n    const y = 1;\n} else {\n    const y = 2;\n}\n\nconst lambda1 = (x) => x;\nconst flip1 = f => (x,y) => f(y,x);\n\nfunction lambda2(x){return x;}function flip2(f, x,y){return f(y,x)}\n\n\nfunction main() {\n    const s = 'hello world\\'\\n :D';\n    const n = 42\n    const id = x => x;\n    const toString = x => x.toString();\n    const const = x => y => x;\n    const hard  = f(res.value[0])(res.value[1])\n\n    return 3;\n}\n",
                                    "offset": 81,
                                    "data": "Cycle(root.value[1].data.$cache[79].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "81": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_number",
                                    "value": "10",
                                    "start": 81,
                                    "end": 83
                                },
                                {
                                    "source": "\n{{\n    {}\n    function innerFunction(arg) {\n    }\n}}\n\nif (true) {\n    const x = 10;\n}\n\nif (false) {\n    const y = 1;\n} else {\n    const y = 2;\n}\n\nconst lambda1 = (x) => x;\nconst flip1 = f => (x,y) => f(y,x);\n\nfunction lambda2(x){return x;}function flip2(f, x,y){return f(y,x)}\n\n\nfunction main() {\n    const s = 'hello world\\'\\n :D';\n    const n = 42\n    const id = x => x;\n    const toString = x => x.toString();\n    const const = x => y => x;\n    const hard  = f(res.value[0])(res.value[1])\n\n    return 3;\n}\n",
                                    "offset": 83,
                                    "data": "Cycle(root.value[1].data.$cache[81].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "83": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_punct",
                                    "value": ";",
                                    "start": 83,
                                    "end": 84
                                },
                                {
                                    "source": "\n{{\n    {}\n    function innerFunction(arg) {\n    }\n}}\n\nif (true) {\n    const x = 10;\n}\n\nif (false) {\n    const y = 1;\n} else {\n    const y = 2;\n}\n\nconst lambda1 = (x) => x;\nconst flip1 = f => (x,y) => f(y,x);\n\nfunction lambda2(x){return x;}function flip2(f, x,y){return f(y,x)}\n\n\nfunction main() {\n    const s = 'hello world\\'\\n :D';\n    const n = 42\n    const id = x => x;\n    const toString = x => x.toString();\n    const const = x => y => x;\n    const hard  = f(res.value[0])(res.value[1])\n\n    return 3;\n}\n",
                                    "offset": 85,
                                    "data": "Cycle(root.value[1].data.$cache[83].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "85": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_punct",
                                    "value": "}",
                                    "start": 85,
                                    "end": 86
                                },
                                {
                                    "source": "\n{{\n    {}\n    function innerFunction(arg) {\n    }\n}}\n\nif (true) {\n    const x = 10;\n}\n\nif (false) {\n    const y = 1;\n} else {\n    const y = 2;\n}\n\nconst lambda1 = (x) => x;\nconst flip1 = f => (x,y) => f(y,x);\n\nfunction lambda2(x){return x;}function flip2(f, x,y){return f(y,x)}\n\n\nfunction main() {\n    const s = 'hello world\\'\\n :D';\n    const n = 42\n    const id = x => x;\n    const toString = x => x.toString();\n    const const = x => y => x;\n    const hard  = f(res.value[0])(res.value[1])\n\n    return 3;\n}\n",
                                    "offset": 88,
                                    "data": "Cycle(root.value[1].data.$cache[85].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "88": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_id",
                                    "value": "if",
                                    "start": 88,
                                    "end": 90
                                },
                                {
                                    "source": "\n{{\n    {}\n    function innerFunction(arg) {\n    }\n}}\n\nif (true) {\n    const x = 10;\n}\n\nif (false) {\n    const y = 1;\n} else {\n    const y = 2;\n}\n\nconst lambda1 = (x) => x;\nconst flip1 = f => (x,y) => f(y,x);\n\nfunction lambda2(x){return x;}function flip2(f, x,y){return f(y,x)}\n\n\nfunction main() {\n    const s = 'hello world\\'\\n :D';\n    const n = 42\n    const id = x => x;\n    const toString = x => x.toString();\n    const const = x => y => x;\n    const hard  = f(res.value[0])(res.value[1])\n\n    return 3;\n}\n",
                                    "offset": 91,
                                    "data": "Cycle(root.value[1].data.$cache[88].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "91": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_punct",
                                    "value": "(",
                                    "start": 91,
                                    "end": 92
                                },
                                {
                                    "source": "\n{{\n    {}\n    function innerFunction(arg) {\n    }\n}}\n\nif (true) {\n    const x = 10;\n}\n\nif (false) {\n    const y = 1;\n} else {\n    const y = 2;\n}\n\nconst lambda1 = (x) => x;\nconst flip1 = f => (x,y) => f(y,x);\n\nfunction lambda2(x){return x;}function flip2(f, x,y){return f(y,x)}\n\n\nfunction main() {\n    const s = 'hello world\\'\\n :D';\n    const n = 42\n    const id = x => x;\n    const toString = x => x.toString();\n    const const = x => y => x;\n    const hard  = f(res.value[0])(res.value[1])\n\n    return 3;\n}\n",
                                    "offset": 92,
                                    "data": "Cycle(root.value[1].data.$cache[91].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "92": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_id",
                                    "value": "false",
                                    "start": 92,
                                    "end": 97
                                },
                                {
                                    "source": "\n{{\n    {}\n    function innerFunction(arg) {\n    }\n}}\n\nif (true) {\n    const x = 10;\n}\n\nif (false) {\n    const y = 1;\n} else {\n    const y = 2;\n}\n\nconst lambda1 = (x) => x;\nconst flip1 = f => (x,y) => f(y,x);\n\nfunction lambda2(x){return x;}function flip2(f, x,y){return f(y,x)}\n\n\nfunction main() {\n    const s = 'hello world\\'\\n :D';\n    const n = 42\n    const id = x => x;\n    const toString = x => x.toString();\n    const const = x => y => x;\n    const hard  = f(res.value[0])(res.value[1])\n\n    return 3;\n}\n",
                                    "offset": 97,
                                    "data": "Cycle(root.value[1].data.$cache[92].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "97": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_punct",
                                    "value": ")",
                                    "start": 97,
                                    "end": 98
                                },
                                {
                                    "source": "\n{{\n    {}\n    function innerFunction(arg) {\n    }\n}}\n\nif (true) {\n    const x = 10;\n}\n\nif (false) {\n    const y = 1;\n} else {\n    const y = 2;\n}\n\nconst lambda1 = (x) => x;\nconst flip1 = f => (x,y) => f(y,x);\n\nfunction lambda2(x){return x;}function flip2(f, x,y){return f(y,x)}\n\n\nfunction main() {\n    const s = 'hello world\\'\\n :D';\n    const n = 42\n    const id = x => x;\n    const toString = x => x.toString();\n    const const = x => y => x;\n    const hard  = f(res.value[0])(res.value[1])\n\n    return 3;\n}\n",
                                    "offset": 99,
                                    "data": "Cycle(root.value[1].data.$cache[97].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "99": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_punct",
                                    "value": "{",
                                    "start": 99,
                                    "end": 100
                                },
                                {
                                    "source": "\n{{\n    {}\n    function innerFunction(arg) {\n    }\n}}\n\nif (true) {\n    const x = 10;\n}\n\nif (false) {\n    const y = 1;\n} else {\n    const y = 2;\n}\n\nconst lambda1 = (x) => x;\nconst flip1 = f => (x,y) => f(y,x);\n\nfunction lambda2(x){return x;}function flip2(f, x,y){return f(y,x)}\n\n\nfunction main() {\n    const s = 'hello world\\'\\n :D';\n    const n = 42\n    const id = x => x;\n    const toString = x => x.toString();\n    const const = x => y => x;\n    const hard  = f(res.value[0])(res.value[1])\n\n    return 3;\n}\n",
                                    "offset": 105,
                                    "data": "Cycle(root.value[1].data.$cache[99].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "105": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_id",
                                    "value": "const",
                                    "start": 105,
                                    "end": 110
                                },
                                {
                                    "source": "\n{{\n    {}\n    function innerFunction(arg) {\n    }\n}}\n\nif (true) {\n    const x = 10;\n}\n\nif (false) {\n    const y = 1;\n} else {\n    const y = 2;\n}\n\nconst lambda1 = (x) => x;\nconst flip1 = f => (x,y) => f(y,x);\n\nfunction lambda2(x){return x;}function flip2(f, x,y){return f(y,x)}\n\n\nfunction main() {\n    const s = 'hello world\\'\\n :D';\n    const n = 42\n    const id = x => x;\n    const toString = x => x.toString();\n    const const = x => y => x;\n    const hard  = f(res.value[0])(res.value[1])\n\n    return 3;\n}\n",
                                    "offset": 111,
                                    "data": "Cycle(root.value[1].data.$cache[105].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "111": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_id",
                                    "value": "y",
                                    "start": 111,
                                    "end": 112
                                },
                                {
                                    "source": "\n{{\n    {}\n    function innerFunction(arg) {\n    }\n}}\n\nif (true) {\n    const x = 10;\n}\n\nif (false) {\n    const y = 1;\n} else {\n    const y = 2;\n}\n\nconst lambda1 = (x) => x;\nconst flip1 = f => (x,y) => f(y,x);\n\nfunction lambda2(x){return x;}function flip2(f, x,y){return f(y,x)}\n\n\nfunction main() {\n    const s = 'hello world\\'\\n :D';\n    const n = 42\n    const id = x => x;\n    const toString = x => x.toString();\n    const const = x => y => x;\n    const hard  = f(res.value[0])(res.value[1])\n\n    return 3;\n}\n",
                                    "offset": 113,
                                    "data": "Cycle(root.value[1].data.$cache[111].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "113": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_operator",
                                    "value": "=",
                                    "start": 113,
                                    "end": 114
                                },
                                {
                                    "source": "\n{{\n    {}\n    function innerFunction(arg) {\n    }\n}}\n\nif (true) {\n    const x = 10;\n}\n\nif (false) {\n    const y = 1;\n} else {\n    const y = 2;\n}\n\nconst lambda1 = (x) => x;\nconst flip1 = f => (x,y) => f(y,x);\n\nfunction lambda2(x){return x;}function flip2(f, x,y){return f(y,x)}\n\n\nfunction main() {\n    const s = 'hello world\\'\\n :D';\n    const n = 42\n    const id = x => x;\n    const toString = x => x.toString();\n    const const = x => y => x;\n    const hard  = f(res.value[0])(res.value[1])\n\n    return 3;\n}\n",
                                    "offset": 115,
                                    "data": "Cycle(root.value[1].data.$cache[113].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "115": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_number",
                                    "value": "1",
                                    "start": 115,
                                    "end": 116
                                },
                                {
                                    "source": "\n{{\n    {}\n    function innerFunction(arg) {\n    }\n}}\n\nif (true) {\n    const x = 10;\n}\n\nif (false) {\n    const y = 1;\n} else {\n    const y = 2;\n}\n\nconst lambda1 = (x) => x;\nconst flip1 = f => (x,y) => f(y,x);\n\nfunction lambda2(x){return x;}function flip2(f, x,y){return f(y,x)}\n\n\nfunction main() {\n    const s = 'hello world\\'\\n :D';\n    const n = 42\n    const id = x => x;\n    const toString = x => x.toString();\n    const const = x => y => x;\n    const hard  = f(res.value[0])(res.value[1])\n\n    return 3;\n}\n",
                                    "offset": 116,
                                    "data": "Cycle(root.value[1].data.$cache[115].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "116": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_punct",
                                    "value": ";",
                                    "start": 116,
                                    "end": 117
                                },
                                {
                                    "source": "\n{{\n    {}\n    function innerFunction(arg) {\n    }\n}}\n\nif (true) {\n    const x = 10;\n}\n\nif (false) {\n    const y = 1;\n} else {\n    const y = 2;\n}\n\nconst lambda1 = (x) => x;\nconst flip1 = f => (x,y) => f(y,x);\n\nfunction lambda2(x){return x;}function flip2(f, x,y){return f(y,x)}\n\n\nfunction main() {\n    const s = 'hello world\\'\\n :D';\n    const n = 42\n    const id = x => x;\n    const toString = x => x.toString();\n    const const = x => y => x;\n    const hard  = f(res.value[0])(res.value[1])\n\n    return 3;\n}\n",
                                    "offset": 118,
                                    "data": "Cycle(root.value[1].data.$cache[116].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "118": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_punct",
                                    "value": "}",
                                    "start": 118,
                                    "end": 119
                                },
                                {
                                    "source": "\n{{\n    {}\n    function innerFunction(arg) {\n    }\n}}\n\nif (true) {\n    const x = 10;\n}\n\nif (false) {\n    const y = 1;\n} else {\n    const y = 2;\n}\n\nconst lambda1 = (x) => x;\nconst flip1 = f => (x,y) => f(y,x);\n\nfunction lambda2(x){return x;}function flip2(f, x,y){return f(y,x)}\n\n\nfunction main() {\n    const s = 'hello world\\'\\n :D';\n    const n = 42\n    const id = x => x;\n    const toString = x => x.toString();\n    const const = x => y => x;\n    const hard  = f(res.value[0])(res.value[1])\n\n    return 3;\n}\n",
                                    "offset": 120,
                                    "data": "Cycle(root.value[1].data.$cache[118].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "120": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_id",
                                    "value": "else",
                                    "start": 120,
                                    "end": 124
                                },
                                {
                                    "source": "\n{{\n    {}\n    function innerFunction(arg) {\n    }\n}}\n\nif (true) {\n    const x = 10;\n}\n\nif (false) {\n    const y = 1;\n} else {\n    const y = 2;\n}\n\nconst lambda1 = (x) => x;\nconst flip1 = f => (x,y) => f(y,x);\n\nfunction lambda2(x){return x;}function flip2(f, x,y){return f(y,x)}\n\n\nfunction main() {\n    const s = 'hello world\\'\\n :D';\n    const n = 42\n    const id = x => x;\n    const toString = x => x.toString();\n    const const = x => y => x;\n    const hard  = f(res.value[0])(res.value[1])\n\n    return 3;\n}\n",
                                    "offset": 125,
                                    "data": "Cycle(root.value[1].data.$cache[120].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "125": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_punct",
                                    "value": "{",
                                    "start": 125,
                                    "end": 126
                                },
                                {
                                    "source": "\n{{\n    {}\n    function innerFunction(arg) {\n    }\n}}\n\nif (true) {\n    const x = 10;\n}\n\nif (false) {\n    const y = 1;\n} else {\n    const y = 2;\n}\n\nconst lambda1 = (x) => x;\nconst flip1 = f => (x,y) => f(y,x);\n\nfunction lambda2(x){return x;}function flip2(f, x,y){return f(y,x)}\n\n\nfunction main() {\n    const s = 'hello world\\'\\n :D';\n    const n = 42\n    const id = x => x;\n    const toString = x => x.toString();\n    const const = x => y => x;\n    const hard  = f(res.value[0])(res.value[1])\n\n    return 3;\n}\n",
                                    "offset": 131,
                                    "data": "Cycle(root.value[1].data.$cache[125].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "131": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_id",
                                    "value": "const",
                                    "start": 131,
                                    "end": 136
                                },
                                {
                                    "source": "\n{{\n    {}\n    function innerFunction(arg) {\n    }\n}}\n\nif (true) {\n    const x = 10;\n}\n\nif (false) {\n    const y = 1;\n} else {\n    const y = 2;\n}\n\nconst lambda1 = (x) => x;\nconst flip1 = f => (x,y) => f(y,x);\n\nfunction lambda2(x){return x;}function flip2(f, x,y){return f(y,x)}\n\n\nfunction main() {\n    const s = 'hello world\\'\\n :D';\n    const n = 42\n    const id = x => x;\n    const toString = x => x.toString();\n    const const = x => y => x;\n    const hard  = f(res.value[0])(res.value[1])\n\n    return 3;\n}\n",
                                    "offset": 137,
                                    "data": "Cycle(root.value[1].data.$cache[131].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "137": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_id",
                                    "value": "y",
                                    "start": 137,
                                    "end": 138
                                },
                                {
                                    "source": "\n{{\n    {}\n    function innerFunction(arg) {\n    }\n}}\n\nif (true) {\n    const x = 10;\n}\n\nif (false) {\n    const y = 1;\n} else {\n    const y = 2;\n}\n\nconst lambda1 = (x) => x;\nconst flip1 = f => (x,y) => f(y,x);\n\nfunction lambda2(x){return x;}function flip2(f, x,y){return f(y,x)}\n\n\nfunction main() {\n    const s = 'hello world\\'\\n :D';\n    const n = 42\n    const id = x => x;\n    const toString = x => x.toString();\n    const const = x => y => x;\n    const hard  = f(res.value[0])(res.value[1])\n\n    return 3;\n}\n",
                                    "offset": 139,
                                    "data": "Cycle(root.value[1].data.$cache[137].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "139": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_operator",
                                    "value": "=",
                                    "start": 139,
                                    "end": 140
                                },
                                {
                                    "source": "\n{{\n    {}\n    function innerFunction(arg) {\n    }\n}}\n\nif (true) {\n    const x = 10;\n}\n\nif (false) {\n    const y = 1;\n} else {\n    const y = 2;\n}\n\nconst lambda1 = (x) => x;\nconst flip1 = f => (x,y) => f(y,x);\n\nfunction lambda2(x){return x;}function flip2(f, x,y){return f(y,x)}\n\n\nfunction main() {\n    const s = 'hello world\\'\\n :D';\n    const n = 42\n    const id = x => x;\n    const toString = x => x.toString();\n    const const = x => y => x;\n    const hard  = f(res.value[0])(res.value[1])\n\n    return 3;\n}\n",
                                    "offset": 141,
                                    "data": "Cycle(root.value[1].data.$cache[139].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "141": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_number",
                                    "value": "2",
                                    "start": 141,
                                    "end": 142
                                },
                                {
                                    "source": "\n{{\n    {}\n    function innerFunction(arg) {\n    }\n}}\n\nif (true) {\n    const x = 10;\n}\n\nif (false) {\n    const y = 1;\n} else {\n    const y = 2;\n}\n\nconst lambda1 = (x) => x;\nconst flip1 = f => (x,y) => f(y,x);\n\nfunction lambda2(x){return x;}function flip2(f, x,y){return f(y,x)}\n\n\nfunction main() {\n    const s = 'hello world\\'\\n :D';\n    const n = 42\n    const id = x => x;\n    const toString = x => x.toString();\n    const const = x => y => x;\n    const hard  = f(res.value[0])(res.value[1])\n\n    return 3;\n}\n",
                                    "offset": 142,
                                    "data": "Cycle(root.value[1].data.$cache[141].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "142": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_punct",
                                    "value": ";",
                                    "start": 142,
                                    "end": 143
                                },
                                {
                                    "source": "\n{{\n    {}\n    function innerFunction(arg) {\n    }\n}}\n\nif (true) {\n    const x = 10;\n}\n\nif (false) {\n    const y = 1;\n} else {\n    const y = 2;\n}\n\nconst lambda1 = (x) => x;\nconst flip1 = f => (x,y) => f(y,x);\n\nfunction lambda2(x){return x;}function flip2(f, x,y){return f(y,x)}\n\n\nfunction main() {\n    const s = 'hello world\\'\\n :D';\n    const n = 42\n    const id = x => x;\n    const toString = x => x.toString();\n    const const = x => y => x;\n    const hard  = f(res.value[0])(res.value[1])\n\n    return 3;\n}\n",
                                    "offset": 144,
                                    "data": "Cycle(root.value[1].data.$cache[142].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "144": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_punct",
                                    "value": "}",
                                    "start": 144,
                                    "end": 145
                                },
                                {
                                    "source": "\n{{\n    {}\n    function innerFunction(arg) {\n    }\n}}\n\nif (true) {\n    const x = 10;\n}\n\nif (false) {\n    const y = 1;\n} else {\n    const y = 2;\n}\n\nconst lambda1 = (x) => x;\nconst flip1 = f => (x,y) => f(y,x);\n\nfunction lambda2(x){return x;}function flip2(f, x,y){return f(y,x)}\n\n\nfunction main() {\n    const s = 'hello world\\'\\n :D';\n    const n = 42\n    const id = x => x;\n    const toString = x => x.toString();\n    const const = x => y => x;\n    const hard  = f(res.value[0])(res.value[1])\n\n    return 3;\n}\n",
                                    "offset": 147,
                                    "data": "Cycle(root.value[1].data.$cache[144].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "147": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_id",
                                    "value": "const",
                                    "start": 147,
                                    "end": 152
                                },
                                {
                                    "source": "\n{{\n    {}\n    function innerFunction(arg) {\n    }\n}}\n\nif (true) {\n    const x = 10;\n}\n\nif (false) {\n    const y = 1;\n} else {\n    const y = 2;\n}\n\nconst lambda1 = (x) => x;\nconst flip1 = f => (x,y) => f(y,x);\n\nfunction lambda2(x){return x;}function flip2(f, x,y){return f(y,x)}\n\n\nfunction main() {\n    const s = 'hello world\\'\\n :D';\n    const n = 42\n    const id = x => x;\n    const toString = x => x.toString();\n    const const = x => y => x;\n    const hard  = f(res.value[0])(res.value[1])\n\n    return 3;\n}\n",
                                    "offset": 153,
                                    "data": "Cycle(root.value[1].data.$cache[147].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "153": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_id",
                                    "value": "lambda1",
                                    "start": 153,
                                    "end": 160
                                },
                                {
                                    "source": "\n{{\n    {}\n    function innerFunction(arg) {\n    }\n}}\n\nif (true) {\n    const x = 10;\n}\n\nif (false) {\n    const y = 1;\n} else {\n    const y = 2;\n}\n\nconst lambda1 = (x) => x;\nconst flip1 = f => (x,y) => f(y,x);\n\nfunction lambda2(x){return x;}function flip2(f, x,y){return f(y,x)}\n\n\nfunction main() {\n    const s = 'hello world\\'\\n :D';\n    const n = 42\n    const id = x => x;\n    const toString = x => x.toString();\n    const const = x => y => x;\n    const hard  = f(res.value[0])(res.value[1])\n\n    return 3;\n}\n",
                                    "offset": 161,
                                    "data": "Cycle(root.value[1].data.$cache[153].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "161": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_operator",
                                    "value": "=",
                                    "start": 161,
                                    "end": 162
                                },
                                {
                                    "source": "\n{{\n    {}\n    function innerFunction(arg) {\n    }\n}}\n\nif (true) {\n    const x = 10;\n}\n\nif (false) {\n    const y = 1;\n} else {\n    const y = 2;\n}\n\nconst lambda1 = (x) => x;\nconst flip1 = f => (x,y) => f(y,x);\n\nfunction lambda2(x){return x;}function flip2(f, x,y){return f(y,x)}\n\n\nfunction main() {\n    const s = 'hello world\\'\\n :D';\n    const n = 42\n    const id = x => x;\n    const toString = x => x.toString();\n    const const = x => y => x;\n    const hard  = f(res.value[0])(res.value[1])\n\n    return 3;\n}\n",
                                    "offset": 163,
                                    "data": "Cycle(root.value[1].data.$cache[161].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "163": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_punct",
                                    "value": "(",
                                    "start": 163,
                                    "end": 164
                                },
                                {
                                    "source": "\n{{\n    {}\n    function innerFunction(arg) {\n    }\n}}\n\nif (true) {\n    const x = 10;\n}\n\nif (false) {\n    const y = 1;\n} else {\n    const y = 2;\n}\n\nconst lambda1 = (x) => x;\nconst flip1 = f => (x,y) => f(y,x);\n\nfunction lambda2(x){return x;}function flip2(f, x,y){return f(y,x)}\n\n\nfunction main() {\n    const s = 'hello world\\'\\n :D';\n    const n = 42\n    const id = x => x;\n    const toString = x => x.toString();\n    const const = x => y => x;\n    const hard  = f(res.value[0])(res.value[1])\n\n    return 3;\n}\n",
                                    "offset": 164,
                                    "data": "Cycle(root.value[1].data.$cache[163].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "164": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_id",
                                    "value": "x",
                                    "start": 164,
                                    "end": 165
                                },
                                {
                                    "source": "\n{{\n    {}\n    function innerFunction(arg) {\n    }\n}}\n\nif (true) {\n    const x = 10;\n}\n\nif (false) {\n    const y = 1;\n} else {\n    const y = 2;\n}\n\nconst lambda1 = (x) => x;\nconst flip1 = f => (x,y) => f(y,x);\n\nfunction lambda2(x){return x;}function flip2(f, x,y){return f(y,x)}\n\n\nfunction main() {\n    const s = 'hello world\\'\\n :D';\n    const n = 42\n    const id = x => x;\n    const toString = x => x.toString();\n    const const = x => y => x;\n    const hard  = f(res.value[0])(res.value[1])\n\n    return 3;\n}\n",
                                    "offset": 165,
                                    "data": "Cycle(root.value[1].data.$cache[164].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "165": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_punct",
                                    "value": ")",
                                    "start": 165,
                                    "end": 166
                                },
                                {
                                    "source": "\n{{\n    {}\n    function innerFunction(arg) {\n    }\n}}\n\nif (true) {\n    const x = 10;\n}\n\nif (false) {\n    const y = 1;\n} else {\n    const y = 2;\n}\n\nconst lambda1 = (x) => x;\nconst flip1 = f => (x,y) => f(y,x);\n\nfunction lambda2(x){return x;}function flip2(f, x,y){return f(y,x)}\n\n\nfunction main() {\n    const s = 'hello world\\'\\n :D';\n    const n = 42\n    const id = x => x;\n    const toString = x => x.toString();\n    const const = x => y => x;\n    const hard  = f(res.value[0])(res.value[1])\n\n    return 3;\n}\n",
                                    "offset": 167,
                                    "data": "Cycle(root.value[1].data.$cache[165].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "167": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_operator",
                                    "value": "=>",
                                    "start": 167,
                                    "end": 169
                                },
                                {
                                    "source": "\n{{\n    {}\n    function innerFunction(arg) {\n    }\n}}\n\nif (true) {\n    const x = 10;\n}\n\nif (false) {\n    const y = 1;\n} else {\n    const y = 2;\n}\n\nconst lambda1 = (x) => x;\nconst flip1 = f => (x,y) => f(y,x);\n\nfunction lambda2(x){return x;}function flip2(f, x,y){return f(y,x)}\n\n\nfunction main() {\n    const s = 'hello world\\'\\n :D';\n    const n = 42\n    const id = x => x;\n    const toString = x => x.toString();\n    const const = x => y => x;\n    const hard  = f(res.value[0])(res.value[1])\n\n    return 3;\n}\n",
                                    "offset": 170,
                                    "data": "Cycle(root.value[1].data.$cache[167].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "170": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_id",
                                    "value": "x",
                                    "start": 170,
                                    "end": 171
                                },
                                {
                                    "source": "\n{{\n    {}\n    function innerFunction(arg) {\n    }\n}}\n\nif (true) {\n    const x = 10;\n}\n\nif (false) {\n    const y = 1;\n} else {\n    const y = 2;\n}\n\nconst lambda1 = (x) => x;\nconst flip1 = f => (x,y) => f(y,x);\n\nfunction lambda2(x){return x;}function flip2(f, x,y){return f(y,x)}\n\n\nfunction main() {\n    const s = 'hello world\\'\\n :D';\n    const n = 42\n    const id = x => x;\n    const toString = x => x.toString();\n    const const = x => y => x;\n    const hard  = f(res.value[0])(res.value[1])\n\n    return 3;\n}\n",
                                    "offset": 171,
                                    "data": "Cycle(root.value[1].data.$cache[170].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "171": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_punct",
                                    "value": ";",
                                    "start": 171,
                                    "end": 172
                                },
                                {
                                    "source": "\n{{\n    {}\n    function innerFunction(arg) {\n    }\n}}\n\nif (true) {\n    const x = 10;\n}\n\nif (false) {\n    const y = 1;\n} else {\n    const y = 2;\n}\n\nconst lambda1 = (x) => x;\nconst flip1 = f => (x,y) => f(y,x);\n\nfunction lambda2(x){return x;}function flip2(f, x,y){return f(y,x)}\n\n\nfunction main() {\n    const s = 'hello world\\'\\n :D';\n    const n = 42\n    const id = x => x;\n    const toString = x => x.toString();\n    const const = x => y => x;\n    const hard  = f(res.value[0])(res.value[1])\n\n    return 3;\n}\n",
                                    "offset": 173,
                                    "data": "Cycle(root.value[1].data.$cache[171].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "173": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_id",
                                    "value": "const",
                                    "start": 173,
                                    "end": 178
                                },
                                {
                                    "source": "\n{{\n    {}\n    function innerFunction(arg) {\n    }\n}}\n\nif (true) {\n    const x = 10;\n}\n\nif (false) {\n    const y = 1;\n} else {\n    const y = 2;\n}\n\nconst lambda1 = (x) => x;\nconst flip1 = f => (x,y) => f(y,x);\n\nfunction lambda2(x){return x;}function flip2(f, x,y){return f(y,x)}\n\n\nfunction main() {\n    const s = 'hello world\\'\\n :D';\n    const n = 42\n    const id = x => x;\n    const toString = x => x.toString();\n    const const = x => y => x;\n    const hard  = f(res.value[0])(res.value[1])\n\n    return 3;\n}\n",
                                    "offset": 179,
                                    "data": "Cycle(root.value[1].data.$cache[173].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "179": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_id",
                                    "value": "flip1",
                                    "start": 179,
                                    "end": 184
                                },
                                {
                                    "source": "\n{{\n    {}\n    function innerFunction(arg) {\n    }\n}}\n\nif (true) {\n    const x = 10;\n}\n\nif (false) {\n    const y = 1;\n} else {\n    const y = 2;\n}\n\nconst lambda1 = (x) => x;\nconst flip1 = f => (x,y) => f(y,x);\n\nfunction lambda2(x){return x;}function flip2(f, x,y){return f(y,x)}\n\n\nfunction main() {\n    const s = 'hello world\\'\\n :D';\n    const n = 42\n    const id = x => x;\n    const toString = x => x.toString();\n    const const = x => y => x;\n    const hard  = f(res.value[0])(res.value[1])\n\n    return 3;\n}\n",
                                    "offset": 185,
                                    "data": "Cycle(root.value[1].data.$cache[179].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "185": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_operator",
                                    "value": "=",
                                    "start": 185,
                                    "end": 186
                                },
                                {
                                    "source": "\n{{\n    {}\n    function innerFunction(arg) {\n    }\n}}\n\nif (true) {\n    const x = 10;\n}\n\nif (false) {\n    const y = 1;\n} else {\n    const y = 2;\n}\n\nconst lambda1 = (x) => x;\nconst flip1 = f => (x,y) => f(y,x);\n\nfunction lambda2(x){return x;}function flip2(f, x,y){return f(y,x)}\n\n\nfunction main() {\n    const s = 'hello world\\'\\n :D';\n    const n = 42\n    const id = x => x;\n    const toString = x => x.toString();\n    const const = x => y => x;\n    const hard  = f(res.value[0])(res.value[1])\n\n    return 3;\n}\n",
                                    "offset": 187,
                                    "data": "Cycle(root.value[1].data.$cache[185].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "187": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_id",
                                    "value": "f",
                                    "start": 187,
                                    "end": 188
                                },
                                {
                                    "source": "\n{{\n    {}\n    function innerFunction(arg) {\n    }\n}}\n\nif (true) {\n    const x = 10;\n}\n\nif (false) {\n    const y = 1;\n} else {\n    const y = 2;\n}\n\nconst lambda1 = (x) => x;\nconst flip1 = f => (x,y) => f(y,x);\n\nfunction lambda2(x){return x;}function flip2(f, x,y){return f(y,x)}\n\n\nfunction main() {\n    const s = 'hello world\\'\\n :D';\n    const n = 42\n    const id = x => x;\n    const toString = x => x.toString();\n    const const = x => y => x;\n    const hard  = f(res.value[0])(res.value[1])\n\n    return 3;\n}\n",
                                    "offset": 189,
                                    "data": "Cycle(root.value[1].data.$cache[187].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "189": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_operator",
                                    "value": "=>",
                                    "start": 189,
                                    "end": 191
                                },
                                {
                                    "source": "\n{{\n    {}\n    function innerFunction(arg) {\n    }\n}}\n\nif (true) {\n    const x = 10;\n}\n\nif (false) {\n    const y = 1;\n} else {\n    const y = 2;\n}\n\nconst lambda1 = (x) => x;\nconst flip1 = f => (x,y) => f(y,x);\n\nfunction lambda2(x){return x;}function flip2(f, x,y){return f(y,x)}\n\n\nfunction main() {\n    const s = 'hello world\\'\\n :D';\n    const n = 42\n    const id = x => x;\n    const toString = x => x.toString();\n    const const = x => y => x;\n    const hard  = f(res.value[0])(res.value[1])\n\n    return 3;\n}\n",
                                    "offset": 192,
                                    "data": "Cycle(root.value[1].data.$cache[189].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "192": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_punct",
                                    "value": "(",
                                    "start": 192,
                                    "end": 193
                                },
                                {
                                    "source": "\n{{\n    {}\n    function innerFunction(arg) {\n    }\n}}\n\nif (true) {\n    const x = 10;\n}\n\nif (false) {\n    const y = 1;\n} else {\n    const y = 2;\n}\n\nconst lambda1 = (x) => x;\nconst flip1 = f => (x,y) => f(y,x);\n\nfunction lambda2(x){return x;}function flip2(f, x,y){return f(y,x)}\n\n\nfunction main() {\n    const s = 'hello world\\'\\n :D';\n    const n = 42\n    const id = x => x;\n    const toString = x => x.toString();\n    const const = x => y => x;\n    const hard  = f(res.value[0])(res.value[1])\n\n    return 3;\n}\n",
                                    "offset": 193,
                                    "data": "Cycle(root.value[1].data.$cache[192].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "193": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_id",
                                    "value": "x",
                                    "start": 193,
                                    "end": 194
                                },
                                {
                                    "source": "\n{{\n    {}\n    function innerFunction(arg) {\n    }\n}}\n\nif (true) {\n    const x = 10;\n}\n\nif (false) {\n    const y = 1;\n} else {\n    const y = 2;\n}\n\nconst lambda1 = (x) => x;\nconst flip1 = f => (x,y) => f(y,x);\n\nfunction lambda2(x){return x;}function flip2(f, x,y){return f(y,x)}\n\n\nfunction main() {\n    const s = 'hello world\\'\\n :D';\n    const n = 42\n    const id = x => x;\n    const toString = x => x.toString();\n    const const = x => y => x;\n    const hard  = f(res.value[0])(res.value[1])\n\n    return 3;\n}\n",
                                    "offset": 194,
                                    "data": "Cycle(root.value[1].data.$cache[193].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "194": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_punct",
                                    "value": ",",
                                    "start": 194,
                                    "end": 195
                                },
                                {
                                    "source": "\n{{\n    {}\n    function innerFunction(arg) {\n    }\n}}\n\nif (true) {\n    const x = 10;\n}\n\nif (false) {\n    const y = 1;\n} else {\n    const y = 2;\n}\n\nconst lambda1 = (x) => x;\nconst flip1 = f => (x,y) => f(y,x);\n\nfunction lambda2(x){return x;}function flip2(f, x,y){return f(y,x)}\n\n\nfunction main() {\n    const s = 'hello world\\'\\n :D';\n    const n = 42\n    const id = x => x;\n    const toString = x => x.toString();\n    const const = x => y => x;\n    const hard  = f(res.value[0])(res.value[1])\n\n    return 3;\n}\n",
                                    "offset": 195,
                                    "data": "Cycle(root.value[1].data.$cache[194].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "195": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_id",
                                    "value": "y",
                                    "start": 195,
                                    "end": 196
                                },
                                {
                                    "source": "\n{{\n    {}\n    function innerFunction(arg) {\n    }\n}}\n\nif (true) {\n    const x = 10;\n}\n\nif (false) {\n    const y = 1;\n} else {\n    const y = 2;\n}\n\nconst lambda1 = (x) => x;\nconst flip1 = f => (x,y) => f(y,x);\n\nfunction lambda2(x){return x;}function flip2(f, x,y){return f(y,x)}\n\n\nfunction main() {\n    const s = 'hello world\\'\\n :D';\n    const n = 42\n    const id = x => x;\n    const toString = x => x.toString();\n    const const = x => y => x;\n    const hard  = f(res.value[0])(res.value[1])\n\n    return 3;\n}\n",
                                    "offset": 196,
                                    "data": "Cycle(root.value[1].data.$cache[195].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "196": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_punct",
                                    "value": ")",
                                    "start": 196,
                                    "end": 197
                                },
                                {
                                    "source": "\n{{\n    {}\n    function innerFunction(arg) {\n    }\n}}\n\nif (true) {\n    const x = 10;\n}\n\nif (false) {\n    const y = 1;\n} else {\n    const y = 2;\n}\n\nconst lambda1 = (x) => x;\nconst flip1 = f => (x,y) => f(y,x);\n\nfunction lambda2(x){return x;}function flip2(f, x,y){return f(y,x)}\n\n\nfunction main() {\n    const s = 'hello world\\'\\n :D';\n    const n = 42\n    const id = x => x;\n    const toString = x => x.toString();\n    const const = x => y => x;\n    const hard  = f(res.value[0])(res.value[1])\n\n    return 3;\n}\n",
                                    "offset": 198,
                                    "data": "Cycle(root.value[1].data.$cache[196].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "198": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_operator",
                                    "value": "=>",
                                    "start": 198,
                                    "end": 200
                                },
                                {
                                    "source": "\n{{\n    {}\n    function innerFunction(arg) {\n    }\n}}\n\nif (true) {\n    const x = 10;\n}\n\nif (false) {\n    const y = 1;\n} else {\n    const y = 2;\n}\n\nconst lambda1 = (x) => x;\nconst flip1 = f => (x,y) => f(y,x);\n\nfunction lambda2(x){return x;}function flip2(f, x,y){return f(y,x)}\n\n\nfunction main() {\n    const s = 'hello world\\'\\n :D';\n    const n = 42\n    const id = x => x;\n    const toString = x => x.toString();\n    const const = x => y => x;\n    const hard  = f(res.value[0])(res.value[1])\n\n    return 3;\n}\n",
                                    "offset": 201,
                                    "data": "Cycle(root.value[1].data.$cache[198].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "201": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_id",
                                    "value": "f",
                                    "start": 201,
                                    "end": 202
                                },
                                {
                                    "source": "\n{{\n    {}\n    function innerFunction(arg) {\n    }\n}}\n\nif (true) {\n    const x = 10;\n}\n\nif (false) {\n    const y = 1;\n} else {\n    const y = 2;\n}\n\nconst lambda1 = (x) => x;\nconst flip1 = f => (x,y) => f(y,x);\n\nfunction lambda2(x){return x;}function flip2(f, x,y){return f(y,x)}\n\n\nfunction main() {\n    const s = 'hello world\\'\\n :D';\n    const n = 42\n    const id = x => x;\n    const toString = x => x.toString();\n    const const = x => y => x;\n    const hard  = f(res.value[0])(res.value[1])\n\n    return 3;\n}\n",
                                    "offset": 202,
                                    "data": "Cycle(root.value[1].data.$cache[201].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "202": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_punct",
                                    "value": "(",
                                    "start": 202,
                                    "end": 203
                                },
                                {
                                    "source": "\n{{\n    {}\n    function innerFunction(arg) {\n    }\n}}\n\nif (true) {\n    const x = 10;\n}\n\nif (false) {\n    const y = 1;\n} else {\n    const y = 2;\n}\n\nconst lambda1 = (x) => x;\nconst flip1 = f => (x,y) => f(y,x);\n\nfunction lambda2(x){return x;}function flip2(f, x,y){return f(y,x)}\n\n\nfunction main() {\n    const s = 'hello world\\'\\n :D';\n    const n = 42\n    const id = x => x;\n    const toString = x => x.toString();\n    const const = x => y => x;\n    const hard  = f(res.value[0])(res.value[1])\n\n    return 3;\n}\n",
                                    "offset": 203,
                                    "data": "Cycle(root.value[1].data.$cache[202].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "203": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_id",
                                    "value": "y",
                                    "start": 203,
                                    "end": 204
                                },
                                {
                                    "source": "\n{{\n    {}\n    function innerFunction(arg) {\n    }\n}}\n\nif (true) {\n    const x = 10;\n}\n\nif (false) {\n    const y = 1;\n} else {\n    const y = 2;\n}\n\nconst lambda1 = (x) => x;\nconst flip1 = f => (x,y) => f(y,x);\n\nfunction lambda2(x){return x;}function flip2(f, x,y){return f(y,x)}\n\n\nfunction main() {\n    const s = 'hello world\\'\\n :D';\n    const n = 42\n    const id = x => x;\n    const toString = x => x.toString();\n    const const = x => y => x;\n    const hard  = f(res.value[0])(res.value[1])\n\n    return 3;\n}\n",
                                    "offset": 204,
                                    "data": "Cycle(root.value[1].data.$cache[203].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "204": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_punct",
                                    "value": ",",
                                    "start": 204,
                                    "end": 205
                                },
                                {
                                    "source": "\n{{\n    {}\n    function innerFunction(arg) {\n    }\n}}\n\nif (true) {\n    const x = 10;\n}\n\nif (false) {\n    const y = 1;\n} else {\n    const y = 2;\n}\n\nconst lambda1 = (x) => x;\nconst flip1 = f => (x,y) => f(y,x);\n\nfunction lambda2(x){return x;}function flip2(f, x,y){return f(y,x)}\n\n\nfunction main() {\n    const s = 'hello world\\'\\n :D';\n    const n = 42\n    const id = x => x;\n    const toString = x => x.toString();\n    const const = x => y => x;\n    const hard  = f(res.value[0])(res.value[1])\n\n    return 3;\n}\n",
                                    "offset": 205,
                                    "data": "Cycle(root.value[1].data.$cache[204].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "205": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_id",
                                    "value": "x",
                                    "start": 205,
                                    "end": 206
                                },
                                {
                                    "source": "\n{{\n    {}\n    function innerFunction(arg) {\n    }\n}}\n\nif (true) {\n    const x = 10;\n}\n\nif (false) {\n    const y = 1;\n} else {\n    const y = 2;\n}\n\nconst lambda1 = (x) => x;\nconst flip1 = f => (x,y) => f(y,x);\n\nfunction lambda2(x){return x;}function flip2(f, x,y){return f(y,x)}\n\n\nfunction main() {\n    const s = 'hello world\\'\\n :D';\n    const n = 42\n    const id = x => x;\n    const toString = x => x.toString();\n    const const = x => y => x;\n    const hard  = f(res.value[0])(res.value[1])\n\n    return 3;\n}\n",
                                    "offset": 206,
                                    "data": "Cycle(root.value[1].data.$cache[205].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "206": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_punct",
                                    "value": ")",
                                    "start": 206,
                                    "end": 207
                                },
                                {
                                    "source": "\n{{\n    {}\n    function innerFunction(arg) {\n    }\n}}\n\nif (true) {\n    const x = 10;\n}\n\nif (false) {\n    const y = 1;\n} else {\n    const y = 2;\n}\n\nconst lambda1 = (x) => x;\nconst flip1 = f => (x,y) => f(y,x);\n\nfunction lambda2(x){return x;}function flip2(f, x,y){return f(y,x)}\n\n\nfunction main() {\n    const s = 'hello world\\'\\n :D';\n    const n = 42\n    const id = x => x;\n    const toString = x => x.toString();\n    const const = x => y => x;\n    const hard  = f(res.value[0])(res.value[1])\n\n    return 3;\n}\n",
                                    "offset": 207,
                                    "data": "Cycle(root.value[1].data.$cache[206].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "207": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_punct",
                                    "value": ";",
                                    "start": 207,
                                    "end": 208
                                },
                                {
                                    "source": "\n{{\n    {}\n    function innerFunction(arg) {\n    }\n}}\n\nif (true) {\n    const x = 10;\n}\n\nif (false) {\n    const y = 1;\n} else {\n    const y = 2;\n}\n\nconst lambda1 = (x) => x;\nconst flip1 = f => (x,y) => f(y,x);\n\nfunction lambda2(x){return x;}function flip2(f, x,y){return f(y,x)}\n\n\nfunction main() {\n    const s = 'hello world\\'\\n :D';\n    const n = 42\n    const id = x => x;\n    const toString = x => x.toString();\n    const const = x => y => x;\n    const hard  = f(res.value[0])(res.value[1])\n\n    return 3;\n}\n",
                                    "offset": 210,
                                    "data": "Cycle(root.value[1].data.$cache[207].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "210": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_id",
                                    "value": "function",
                                    "start": 210,
                                    "end": 218
                                },
                                {
                                    "source": "\n{{\n    {}\n    function innerFunction(arg) {\n    }\n}}\n\nif (true) {\n    const x = 10;\n}\n\nif (false) {\n    const y = 1;\n} else {\n    const y = 2;\n}\n\nconst lambda1 = (x) => x;\nconst flip1 = f => (x,y) => f(y,x);\n\nfunction lambda2(x){return x;}function flip2(f, x,y){return f(y,x)}\n\n\nfunction main() {\n    const s = 'hello world\\'\\n :D';\n    const n = 42\n    const id = x => x;\n    const toString = x => x.toString();\n    const const = x => y => x;\n    const hard  = f(res.value[0])(res.value[1])\n\n    return 3;\n}\n",
                                    "offset": 219,
                                    "data": "Cycle(root.value[1].data.$cache[210].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "219": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_id",
                                    "value": "lambda2",
                                    "start": 219,
                                    "end": 226
                                },
                                {
                                    "source": "\n{{\n    {}\n    function innerFunction(arg) {\n    }\n}}\n\nif (true) {\n    const x = 10;\n}\n\nif (false) {\n    const y = 1;\n} else {\n    const y = 2;\n}\n\nconst lambda1 = (x) => x;\nconst flip1 = f => (x,y) => f(y,x);\n\nfunction lambda2(x){return x;}function flip2(f, x,y){return f(y,x)}\n\n\nfunction main() {\n    const s = 'hello world\\'\\n :D';\n    const n = 42\n    const id = x => x;\n    const toString = x => x.toString();\n    const const = x => y => x;\n    const hard  = f(res.value[0])(res.value[1])\n\n    return 3;\n}\n",
                                    "offset": 226,
                                    "data": "Cycle(root.value[1].data.$cache[219].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "226": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_punct",
                                    "value": "(",
                                    "start": 226,
                                    "end": 227
                                },
                                {
                                    "source": "\n{{\n    {}\n    function innerFunction(arg) {\n    }\n}}\n\nif (true) {\n    const x = 10;\n}\n\nif (false) {\n    const y = 1;\n} else {\n    const y = 2;\n}\n\nconst lambda1 = (x) => x;\nconst flip1 = f => (x,y) => f(y,x);\n\nfunction lambda2(x){return x;}function flip2(f, x,y){return f(y,x)}\n\n\nfunction main() {\n    const s = 'hello world\\'\\n :D';\n    const n = 42\n    const id = x => x;\n    const toString = x => x.toString();\n    const const = x => y => x;\n    const hard  = f(res.value[0])(res.value[1])\n\n    return 3;\n}\n",
                                    "offset": 227,
                                    "data": "Cycle(root.value[1].data.$cache[226].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "227": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_id",
                                    "value": "x",
                                    "start": 227,
                                    "end": 228
                                },
                                {
                                    "source": "\n{{\n    {}\n    function innerFunction(arg) {\n    }\n}}\n\nif (true) {\n    const x = 10;\n}\n\nif (false) {\n    const y = 1;\n} else {\n    const y = 2;\n}\n\nconst lambda1 = (x) => x;\nconst flip1 = f => (x,y) => f(y,x);\n\nfunction lambda2(x){return x;}function flip2(f, x,y){return f(y,x)}\n\n\nfunction main() {\n    const s = 'hello world\\'\\n :D';\n    const n = 42\n    const id = x => x;\n    const toString = x => x.toString();\n    const const = x => y => x;\n    const hard  = f(res.value[0])(res.value[1])\n\n    return 3;\n}\n",
                                    "offset": 228,
                                    "data": "Cycle(root.value[1].data.$cache[227].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "228": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_punct",
                                    "value": ")",
                                    "start": 228,
                                    "end": 229
                                },
                                {
                                    "source": "\n{{\n    {}\n    function innerFunction(arg) {\n    }\n}}\n\nif (true) {\n    const x = 10;\n}\n\nif (false) {\n    const y = 1;\n} else {\n    const y = 2;\n}\n\nconst lambda1 = (x) => x;\nconst flip1 = f => (x,y) => f(y,x);\n\nfunction lambda2(x){return x;}function flip2(f, x,y){return f(y,x)}\n\n\nfunction main() {\n    const s = 'hello world\\'\\n :D';\n    const n = 42\n    const id = x => x;\n    const toString = x => x.toString();\n    const const = x => y => x;\n    const hard  = f(res.value[0])(res.value[1])\n\n    return 3;\n}\n",
                                    "offset": 229,
                                    "data": "Cycle(root.value[1].data.$cache[228].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "229": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_punct",
                                    "value": "{",
                                    "start": 229,
                                    "end": 230
                                },
                                {
                                    "source": "\n{{\n    {}\n    function innerFunction(arg) {\n    }\n}}\n\nif (true) {\n    const x = 10;\n}\n\nif (false) {\n    const y = 1;\n} else {\n    const y = 2;\n}\n\nconst lambda1 = (x) => x;\nconst flip1 = f => (x,y) => f(y,x);\n\nfunction lambda2(x){return x;}function flip2(f, x,y){return f(y,x)}\n\n\nfunction main() {\n    const s = 'hello world\\'\\n :D';\n    const n = 42\n    const id = x => x;\n    const toString = x => x.toString();\n    const const = x => y => x;\n    const hard  = f(res.value[0])(res.value[1])\n\n    return 3;\n}\n",
                                    "offset": 230,
                                    "data": "Cycle(root.value[1].data.$cache[229].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "230": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_id",
                                    "value": "return",
                                    "start": 230,
                                    "end": 236
                                },
                                {
                                    "source": "\n{{\n    {}\n    function innerFunction(arg) {\n    }\n}}\n\nif (true) {\n    const x = 10;\n}\n\nif (false) {\n    const y = 1;\n} else {\n    const y = 2;\n}\n\nconst lambda1 = (x) => x;\nconst flip1 = f => (x,y) => f(y,x);\n\nfunction lambda2(x){return x;}function flip2(f, x,y){return f(y,x)}\n\n\nfunction main() {\n    const s = 'hello world\\'\\n :D';\n    const n = 42\n    const id = x => x;\n    const toString = x => x.toString();\n    const const = x => y => x;\n    const hard  = f(res.value[0])(res.value[1])\n\n    return 3;\n}\n",
                                    "offset": 237,
                                    "data": "Cycle(root.value[1].data.$cache[230].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "237": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_id",
                                    "value": "x",
                                    "start": 237,
                                    "end": 238
                                },
                                {
                                    "source": "\n{{\n    {}\n    function innerFunction(arg) {\n    }\n}}\n\nif (true) {\n    const x = 10;\n}\n\nif (false) {\n    const y = 1;\n} else {\n    const y = 2;\n}\n\nconst lambda1 = (x) => x;\nconst flip1 = f => (x,y) => f(y,x);\n\nfunction lambda2(x){return x;}function flip2(f, x,y){return f(y,x)}\n\n\nfunction main() {\n    const s = 'hello world\\'\\n :D';\n    const n = 42\n    const id = x => x;\n    const toString = x => x.toString();\n    const const = x => y => x;\n    const hard  = f(res.value[0])(res.value[1])\n\n    return 3;\n}\n",
                                    "offset": 238,
                                    "data": "Cycle(root.value[1].data.$cache[237].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "238": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_punct",
                                    "value": ";",
                                    "start": 238,
                                    "end": 239
                                },
                                {
                                    "source": "\n{{\n    {}\n    function innerFunction(arg) {\n    }\n}}\n\nif (true) {\n    const x = 10;\n}\n\nif (false) {\n    const y = 1;\n} else {\n    const y = 2;\n}\n\nconst lambda1 = (x) => x;\nconst flip1 = f => (x,y) => f(y,x);\n\nfunction lambda2(x){return x;}function flip2(f, x,y){return f(y,x)}\n\n\nfunction main() {\n    const s = 'hello world\\'\\n :D';\n    const n = 42\n    const id = x => x;\n    const toString = x => x.toString();\n    const const = x => y => x;\n    const hard  = f(res.value[0])(res.value[1])\n\n    return 3;\n}\n",
                                    "offset": 239,
                                    "data": "Cycle(root.value[1].data.$cache[238].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "239": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_punct",
                                    "value": "}",
                                    "start": 239,
                                    "end": 240
                                },
                                {
                                    "source": "\n{{\n    {}\n    function innerFunction(arg) {\n    }\n}}\n\nif (true) {\n    const x = 10;\n}\n\nif (false) {\n    const y = 1;\n} else {\n    const y = 2;\n}\n\nconst lambda1 = (x) => x;\nconst flip1 = f => (x,y) => f(y,x);\n\nfunction lambda2(x){return x;}function flip2(f, x,y){return f(y,x)}\n\n\nfunction main() {\n    const s = 'hello world\\'\\n :D';\n    const n = 42\n    const id = x => x;\n    const toString = x => x.toString();\n    const const = x => y => x;\n    const hard  = f(res.value[0])(res.value[1])\n\n    return 3;\n}\n",
                                    "offset": 240,
                                    "data": "Cycle(root.value[1].data.$cache[239].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "240": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_id",
                                    "value": "function",
                                    "start": 240,
                                    "end": 248
                                },
                                {
                                    "source": "\n{{\n    {}\n    function innerFunction(arg) {\n    }\n}}\n\nif (true) {\n    const x = 10;\n}\n\nif (false) {\n    const y = 1;\n} else {\n    const y = 2;\n}\n\nconst lambda1 = (x) => x;\nconst flip1 = f => (x,y) => f(y,x);\n\nfunction lambda2(x){return x;}function flip2(f, x,y){return f(y,x)}\n\n\nfunction main() {\n    const s = 'hello world\\'\\n :D';\n    const n = 42\n    const id = x => x;\n    const toString = x => x.toString();\n    const const = x => y => x;\n    const hard  = f(res.value[0])(res.value[1])\n\n    return 3;\n}\n",
                                    "offset": 249,
                                    "data": "Cycle(root.value[1].data.$cache[240].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "249": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_id",
                                    "value": "flip2",
                                    "start": 249,
                                    "end": 254
                                },
                                {
                                    "source": "\n{{\n    {}\n    function innerFunction(arg) {\n    }\n}}\n\nif (true) {\n    const x = 10;\n}\n\nif (false) {\n    const y = 1;\n} else {\n    const y = 2;\n}\n\nconst lambda1 = (x) => x;\nconst flip1 = f => (x,y) => f(y,x);\n\nfunction lambda2(x){return x;}function flip2(f, x,y){return f(y,x)}\n\n\nfunction main() {\n    const s = 'hello world\\'\\n :D';\n    const n = 42\n    const id = x => x;\n    const toString = x => x.toString();\n    const const = x => y => x;\n    const hard  = f(res.value[0])(res.value[1])\n\n    return 3;\n}\n",
                                    "offset": 254,
                                    "data": "Cycle(root.value[1].data.$cache[249].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "254": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_punct",
                                    "value": "(",
                                    "start": 254,
                                    "end": 255
                                },
                                {
                                    "source": "\n{{\n    {}\n    function innerFunction(arg) {\n    }\n}}\n\nif (true) {\n    const x = 10;\n}\n\nif (false) {\n    const y = 1;\n} else {\n    const y = 2;\n}\n\nconst lambda1 = (x) => x;\nconst flip1 = f => (x,y) => f(y,x);\n\nfunction lambda2(x){return x;}function flip2(f, x,y){return f(y,x)}\n\n\nfunction main() {\n    const s = 'hello world\\'\\n :D';\n    const n = 42\n    const id = x => x;\n    const toString = x => x.toString();\n    const const = x => y => x;\n    const hard  = f(res.value[0])(res.value[1])\n\n    return 3;\n}\n",
                                    "offset": 255,
                                    "data": "Cycle(root.value[1].data.$cache[254].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "255": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_id",
                                    "value": "f",
                                    "start": 255,
                                    "end": 256
                                },
                                {
                                    "source": "\n{{\n    {}\n    function innerFunction(arg) {\n    }\n}}\n\nif (true) {\n    const x = 10;\n}\n\nif (false) {\n    const y = 1;\n} else {\n    const y = 2;\n}\n\nconst lambda1 = (x) => x;\nconst flip1 = f => (x,y) => f(y,x);\n\nfunction lambda2(x){return x;}function flip2(f, x,y){return f(y,x)}\n\n\nfunction main() {\n    const s = 'hello world\\'\\n :D';\n    const n = 42\n    const id = x => x;\n    const toString = x => x.toString();\n    const const = x => y => x;\n    const hard  = f(res.value[0])(res.value[1])\n\n    return 3;\n}\n",
                                    "offset": 256,
                                    "data": "Cycle(root.value[1].data.$cache[255].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "256": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_punct",
                                    "value": ",",
                                    "start": 256,
                                    "end": 257
                                },
                                {
                                    "source": "\n{{\n    {}\n    function innerFunction(arg) {\n    }\n}}\n\nif (true) {\n    const x = 10;\n}\n\nif (false) {\n    const y = 1;\n} else {\n    const y = 2;\n}\n\nconst lambda1 = (x) => x;\nconst flip1 = f => (x,y) => f(y,x);\n\nfunction lambda2(x){return x;}function flip2(f, x,y){return f(y,x)}\n\n\nfunction main() {\n    const s = 'hello world\\'\\n :D';\n    const n = 42\n    const id = x => x;\n    const toString = x => x.toString();\n    const const = x => y => x;\n    const hard  = f(res.value[0])(res.value[1])\n\n    return 3;\n}\n",
                                    "offset": 258,
                                    "data": "Cycle(root.value[1].data.$cache[256].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "258": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_id",
                                    "value": "x",
                                    "start": 258,
                                    "end": 259
                                },
                                {
                                    "source": "\n{{\n    {}\n    function innerFunction(arg) {\n    }\n}}\n\nif (true) {\n    const x = 10;\n}\n\nif (false) {\n    const y = 1;\n} else {\n    const y = 2;\n}\n\nconst lambda1 = (x) => x;\nconst flip1 = f => (x,y) => f(y,x);\n\nfunction lambda2(x){return x;}function flip2(f, x,y){return f(y,x)}\n\n\nfunction main() {\n    const s = 'hello world\\'\\n :D';\n    const n = 42\n    const id = x => x;\n    const toString = x => x.toString();\n    const const = x => y => x;\n    const hard  = f(res.value[0])(res.value[1])\n\n    return 3;\n}\n",
                                    "offset": 259,
                                    "data": "Cycle(root.value[1].data.$cache[258].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "259": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_punct",
                                    "value": ",",
                                    "start": 259,
                                    "end": 260
                                },
                                {
                                    "source": "\n{{\n    {}\n    function innerFunction(arg) {\n    }\n}}\n\nif (true) {\n    const x = 10;\n}\n\nif (false) {\n    const y = 1;\n} else {\n    const y = 2;\n}\n\nconst lambda1 = (x) => x;\nconst flip1 = f => (x,y) => f(y,x);\n\nfunction lambda2(x){return x;}function flip2(f, x,y){return f(y,x)}\n\n\nfunction main() {\n    const s = 'hello world\\'\\n :D';\n    const n = 42\n    const id = x => x;\n    const toString = x => x.toString();\n    const const = x => y => x;\n    const hard  = f(res.value[0])(res.value[1])\n\n    return 3;\n}\n",
                                    "offset": 260,
                                    "data": "Cycle(root.value[1].data.$cache[259].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "260": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_id",
                                    "value": "y",
                                    "start": 260,
                                    "end": 261
                                },
                                {
                                    "source": "\n{{\n    {}\n    function innerFunction(arg) {\n    }\n}}\n\nif (true) {\n    const x = 10;\n}\n\nif (false) {\n    const y = 1;\n} else {\n    const y = 2;\n}\n\nconst lambda1 = (x) => x;\nconst flip1 = f => (x,y) => f(y,x);\n\nfunction lambda2(x){return x;}function flip2(f, x,y){return f(y,x)}\n\n\nfunction main() {\n    const s = 'hello world\\'\\n :D';\n    const n = 42\n    const id = x => x;\n    const toString = x => x.toString();\n    const const = x => y => x;\n    const hard  = f(res.value[0])(res.value[1])\n\n    return 3;\n}\n",
                                    "offset": 261,
                                    "data": "Cycle(root.value[1].data.$cache[260].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "261": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_punct",
                                    "value": ")",
                                    "start": 261,
                                    "end": 262
                                },
                                {
                                    "source": "\n{{\n    {}\n    function innerFunction(arg) {\n    }\n}}\n\nif (true) {\n    const x = 10;\n}\n\nif (false) {\n    const y = 1;\n} else {\n    const y = 2;\n}\n\nconst lambda1 = (x) => x;\nconst flip1 = f => (x,y) => f(y,x);\n\nfunction lambda2(x){return x;}function flip2(f, x,y){return f(y,x)}\n\n\nfunction main() {\n    const s = 'hello world\\'\\n :D';\n    const n = 42\n    const id = x => x;\n    const toString = x => x.toString();\n    const const = x => y => x;\n    const hard  = f(res.value[0])(res.value[1])\n\n    return 3;\n}\n",
                                    "offset": 262,
                                    "data": "Cycle(root.value[1].data.$cache[261].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "262": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_punct",
                                    "value": "{",
                                    "start": 262,
                                    "end": 263
                                },
                                {
                                    "source": "\n{{\n    {}\n    function innerFunction(arg) {\n    }\n}}\n\nif (true) {\n    const x = 10;\n}\n\nif (false) {\n    const y = 1;\n} else {\n    const y = 2;\n}\n\nconst lambda1 = (x) => x;\nconst flip1 = f => (x,y) => f(y,x);\n\nfunction lambda2(x){return x;}function flip2(f, x,y){return f(y,x)}\n\n\nfunction main() {\n    const s = 'hello world\\'\\n :D';\n    const n = 42\n    const id = x => x;\n    const toString = x => x.toString();\n    const const = x => y => x;\n    const hard  = f(res.value[0])(res.value[1])\n\n    return 3;\n}\n",
                                    "offset": 263,
                                    "data": "Cycle(root.value[1].data.$cache[262].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "263": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_id",
                                    "value": "return",
                                    "start": 263,
                                    "end": 269
                                },
                                {
                                    "source": "\n{{\n    {}\n    function innerFunction(arg) {\n    }\n}}\n\nif (true) {\n    const x = 10;\n}\n\nif (false) {\n    const y = 1;\n} else {\n    const y = 2;\n}\n\nconst lambda1 = (x) => x;\nconst flip1 = f => (x,y) => f(y,x);\n\nfunction lambda2(x){return x;}function flip2(f, x,y){return f(y,x)}\n\n\nfunction main() {\n    const s = 'hello world\\'\\n :D';\n    const n = 42\n    const id = x => x;\n    const toString = x => x.toString();\n    const const = x => y => x;\n    const hard  = f(res.value[0])(res.value[1])\n\n    return 3;\n}\n",
                                    "offset": 270,
                                    "data": "Cycle(root.value[1].data.$cache[263].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "270": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_id",
                                    "value": "f",
                                    "start": 270,
                                    "end": 271
                                },
                                {
                                    "source": "\n{{\n    {}\n    function innerFunction(arg) {\n    }\n}}\n\nif (true) {\n    const x = 10;\n}\n\nif (false) {\n    const y = 1;\n} else {\n    const y = 2;\n}\n\nconst lambda1 = (x) => x;\nconst flip1 = f => (x,y) => f(y,x);\n\nfunction lambda2(x){return x;}function flip2(f, x,y){return f(y,x)}\n\n\nfunction main() {\n    const s = 'hello world\\'\\n :D';\n    const n = 42\n    const id = x => x;\n    const toString = x => x.toString();\n    const const = x => y => x;\n    const hard  = f(res.value[0])(res.value[1])\n\n    return 3;\n}\n",
                                    "offset": 271,
                                    "data": "Cycle(root.value[1].data.$cache[270].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "271": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_punct",
                                    "value": "(",
                                    "start": 271,
                                    "end": 272
                                },
                                {
                                    "source": "\n{{\n    {}\n    function innerFunction(arg) {\n    }\n}}\n\nif (true) {\n    const x = 10;\n}\n\nif (false) {\n    const y = 1;\n} else {\n    const y = 2;\n}\n\nconst lambda1 = (x) => x;\nconst flip1 = f => (x,y) => f(y,x);\n\nfunction lambda2(x){return x;}function flip2(f, x,y){return f(y,x)}\n\n\nfunction main() {\n    const s = 'hello world\\'\\n :D';\n    const n = 42\n    const id = x => x;\n    const toString = x => x.toString();\n    const const = x => y => x;\n    const hard  = f(res.value[0])(res.value[1])\n\n    return 3;\n}\n",
                                    "offset": 272,
                                    "data": "Cycle(root.value[1].data.$cache[271].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "272": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_id",
                                    "value": "y",
                                    "start": 272,
                                    "end": 273
                                },
                                {
                                    "source": "\n{{\n    {}\n    function innerFunction(arg) {\n    }\n}}\n\nif (true) {\n    const x = 10;\n}\n\nif (false) {\n    const y = 1;\n} else {\n    const y = 2;\n}\n\nconst lambda1 = (x) => x;\nconst flip1 = f => (x,y) => f(y,x);\n\nfunction lambda2(x){return x;}function flip2(f, x,y){return f(y,x)}\n\n\nfunction main() {\n    const s = 'hello world\\'\\n :D';\n    const n = 42\n    const id = x => x;\n    const toString = x => x.toString();\n    const const = x => y => x;\n    const hard  = f(res.value[0])(res.value[1])\n\n    return 3;\n}\n",
                                    "offset": 273,
                                    "data": "Cycle(root.value[1].data.$cache[272].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "273": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_punct",
                                    "value": ",",
                                    "start": 273,
                                    "end": 274
                                },
                                {
                                    "source": "\n{{\n    {}\n    function innerFunction(arg) {\n    }\n}}\n\nif (true) {\n    const x = 10;\n}\n\nif (false) {\n    const y = 1;\n} else {\n    const y = 2;\n}\n\nconst lambda1 = (x) => x;\nconst flip1 = f => (x,y) => f(y,x);\n\nfunction lambda2(x){return x;}function flip2(f, x,y){return f(y,x)}\n\n\nfunction main() {\n    const s = 'hello world\\'\\n :D';\n    const n = 42\n    const id = x => x;\n    const toString = x => x.toString();\n    const const = x => y => x;\n    const hard  = f(res.value[0])(res.value[1])\n\n    return 3;\n}\n",
                                    "offset": 274,
                                    "data": "Cycle(root.value[1].data.$cache[273].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "274": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_id",
                                    "value": "x",
                                    "start": 274,
                                    "end": 275
                                },
                                {
                                    "source": "\n{{\n    {}\n    function innerFunction(arg) {\n    }\n}}\n\nif (true) {\n    const x = 10;\n}\n\nif (false) {\n    const y = 1;\n} else {\n    const y = 2;\n}\n\nconst lambda1 = (x) => x;\nconst flip1 = f => (x,y) => f(y,x);\n\nfunction lambda2(x){return x;}function flip2(f, x,y){return f(y,x)}\n\n\nfunction main() {\n    const s = 'hello world\\'\\n :D';\n    const n = 42\n    const id = x => x;\n    const toString = x => x.toString();\n    const const = x => y => x;\n    const hard  = f(res.value[0])(res.value[1])\n\n    return 3;\n}\n",
                                    "offset": 275,
                                    "data": "Cycle(root.value[1].data.$cache[274].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "275": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_punct",
                                    "value": ")",
                                    "start": 275,
                                    "end": 276
                                },
                                {
                                    "source": "\n{{\n    {}\n    function innerFunction(arg) {\n    }\n}}\n\nif (true) {\n    const x = 10;\n}\n\nif (false) {\n    const y = 1;\n} else {\n    const y = 2;\n}\n\nconst lambda1 = (x) => x;\nconst flip1 = f => (x,y) => f(y,x);\n\nfunction lambda2(x){return x;}function flip2(f, x,y){return f(y,x)}\n\n\nfunction main() {\n    const s = 'hello world\\'\\n :D';\n    const n = 42\n    const id = x => x;\n    const toString = x => x.toString();\n    const const = x => y => x;\n    const hard  = f(res.value[0])(res.value[1])\n\n    return 3;\n}\n",
                                    "offset": 276,
                                    "data": "Cycle(root.value[1].data.$cache[275].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "276": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_punct",
                                    "value": "}",
                                    "start": 276,
                                    "end": 277
                                },
                                {
                                    "source": "\n{{\n    {}\n    function innerFunction(arg) {\n    }\n}}\n\nif (true) {\n    const x = 10;\n}\n\nif (false) {\n    const y = 1;\n} else {\n    const y = 2;\n}\n\nconst lambda1 = (x) => x;\nconst flip1 = f => (x,y) => f(y,x);\n\nfunction lambda2(x){return x;}function flip2(f, x,y){return f(y,x)}\n\n\nfunction main() {\n    const s = 'hello world\\'\\n :D';\n    const n = 42\n    const id = x => x;\n    const toString = x => x.toString();\n    const const = x => y => x;\n    const hard  = f(res.value[0])(res.value[1])\n\n    return 3;\n}\n",
                                    "offset": 280,
                                    "data": "Cycle(root.value[1].data.$cache[276].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "280": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_id",
                                    "value": "function",
                                    "start": 280,
                                    "end": 288
                                },
                                {
                                    "source": "\n{{\n    {}\n    function innerFunction(arg) {\n    }\n}}\n\nif (true) {\n    const x = 10;\n}\n\nif (false) {\n    const y = 1;\n} else {\n    const y = 2;\n}\n\nconst lambda1 = (x) => x;\nconst flip1 = f => (x,y) => f(y,x);\n\nfunction lambda2(x){return x;}function flip2(f, x,y){return f(y,x)}\n\n\nfunction main() {\n    const s = 'hello world\\'\\n :D';\n    const n = 42\n    const id = x => x;\n    const toString = x => x.toString();\n    const const = x => y => x;\n    const hard  = f(res.value[0])(res.value[1])\n\n    return 3;\n}\n",
                                    "offset": 289,
                                    "data": "Cycle(root.value[1].data.$cache[280].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "289": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_id",
                                    "value": "main",
                                    "start": 289,
                                    "end": 293
                                },
                                {
                                    "source": "\n{{\n    {}\n    function innerFunction(arg) {\n    }\n}}\n\nif (true) {\n    const x = 10;\n}\n\nif (false) {\n    const y = 1;\n} else {\n    const y = 2;\n}\n\nconst lambda1 = (x) => x;\nconst flip1 = f => (x,y) => f(y,x);\n\nfunction lambda2(x){return x;}function flip2(f, x,y){return f(y,x)}\n\n\nfunction main() {\n    const s = 'hello world\\'\\n :D';\n    const n = 42\n    const id = x => x;\n    const toString = x => x.toString();\n    const const = x => y => x;\n    const hard  = f(res.value[0])(res.value[1])\n\n    return 3;\n}\n",
                                    "offset": 293,
                                    "data": "Cycle(root.value[1].data.$cache[289].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "293": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_punct",
                                    "value": "(",
                                    "start": 293,
                                    "end": 294
                                },
                                {
                                    "source": "\n{{\n    {}\n    function innerFunction(arg) {\n    }\n}}\n\nif (true) {\n    const x = 10;\n}\n\nif (false) {\n    const y = 1;\n} else {\n    const y = 2;\n}\n\nconst lambda1 = (x) => x;\nconst flip1 = f => (x,y) => f(y,x);\n\nfunction lambda2(x){return x;}function flip2(f, x,y){return f(y,x)}\n\n\nfunction main() {\n    const s = 'hello world\\'\\n :D';\n    const n = 42\n    const id = x => x;\n    const toString = x => x.toString();\n    const const = x => y => x;\n    const hard  = f(res.value[0])(res.value[1])\n\n    return 3;\n}\n",
                                    "offset": 294,
                                    "data": "Cycle(root.value[1].data.$cache[293].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "294": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_punct",
                                    "value": ")",
                                    "start": 294,
                                    "end": 295
                                },
                                {
                                    "source": "\n{{\n    {}\n    function innerFunction(arg) {\n    }\n}}\n\nif (true) {\n    const x = 10;\n}\n\nif (false) {\n    const y = 1;\n} else {\n    const y = 2;\n}\n\nconst lambda1 = (x) => x;\nconst flip1 = f => (x,y) => f(y,x);\n\nfunction lambda2(x){return x;}function flip2(f, x,y){return f(y,x)}\n\n\nfunction main() {\n    const s = 'hello world\\'\\n :D';\n    const n = 42\n    const id = x => x;\n    const toString = x => x.toString();\n    const const = x => y => x;\n    const hard  = f(res.value[0])(res.value[1])\n\n    return 3;\n}\n",
                                    "offset": 296,
                                    "data": "Cycle(root.value[1].data.$cache[294].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "296": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_punct",
                                    "value": "{",
                                    "start": 296,
                                    "end": 297
                                },
                                {
                                    "source": "\n{{\n    {}\n    function innerFunction(arg) {\n    }\n}}\n\nif (true) {\n    const x = 10;\n}\n\nif (false) {\n    const y = 1;\n} else {\n    const y = 2;\n}\n\nconst lambda1 = (x) => x;\nconst flip1 = f => (x,y) => f(y,x);\n\nfunction lambda2(x){return x;}function flip2(f, x,y){return f(y,x)}\n\n\nfunction main() {\n    const s = 'hello world\\'\\n :D';\n    const n = 42\n    const id = x => x;\n    const toString = x => x.toString();\n    const const = x => y => x;\n    const hard  = f(res.value[0])(res.value[1])\n\n    return 3;\n}\n",
                                    "offset": 302,
                                    "data": "Cycle(root.value[1].data.$cache[296].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "302": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_id",
                                    "value": "const",
                                    "start": 302,
                                    "end": 307
                                },
                                {
                                    "source": "\n{{\n    {}\n    function innerFunction(arg) {\n    }\n}}\n\nif (true) {\n    const x = 10;\n}\n\nif (false) {\n    const y = 1;\n} else {\n    const y = 2;\n}\n\nconst lambda1 = (x) => x;\nconst flip1 = f => (x,y) => f(y,x);\n\nfunction lambda2(x){return x;}function flip2(f, x,y){return f(y,x)}\n\n\nfunction main() {\n    const s = 'hello world\\'\\n :D';\n    const n = 42\n    const id = x => x;\n    const toString = x => x.toString();\n    const const = x => y => x;\n    const hard  = f(res.value[0])(res.value[1])\n\n    return 3;\n}\n",
                                    "offset": 308,
                                    "data": "Cycle(root.value[1].data.$cache[302].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "308": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_id",
                                    "value": "s",
                                    "start": 308,
                                    "end": 309
                                },
                                {
                                    "source": "\n{{\n    {}\n    function innerFunction(arg) {\n    }\n}}\n\nif (true) {\n    const x = 10;\n}\n\nif (false) {\n    const y = 1;\n} else {\n    const y = 2;\n}\n\nconst lambda1 = (x) => x;\nconst flip1 = f => (x,y) => f(y,x);\n\nfunction lambda2(x){return x;}function flip2(f, x,y){return f(y,x)}\n\n\nfunction main() {\n    const s = 'hello world\\'\\n :D';\n    const n = 42\n    const id = x => x;\n    const toString = x => x.toString();\n    const const = x => y => x;\n    const hard  = f(res.value[0])(res.value[1])\n\n    return 3;\n}\n",
                                    "offset": 310,
                                    "data": "Cycle(root.value[1].data.$cache[308].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "310": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_operator",
                                    "value": "=",
                                    "start": 310,
                                    "end": 311
                                },
                                {
                                    "source": "\n{{\n    {}\n    function innerFunction(arg) {\n    }\n}}\n\nif (true) {\n    const x = 10;\n}\n\nif (false) {\n    const y = 1;\n} else {\n    const y = 2;\n}\n\nconst lambda1 = (x) => x;\nconst flip1 = f => (x,y) => f(y,x);\n\nfunction lambda2(x){return x;}function flip2(f, x,y){return f(y,x)}\n\n\nfunction main() {\n    const s = 'hello world\\'\\n :D';\n    const n = 42\n    const id = x => x;\n    const toString = x => x.toString();\n    const const = x => y => x;\n    const hard  = f(res.value[0])(res.value[1])\n\n    return 3;\n}\n",
                                    "offset": 312,
                                    "data": "Cycle(root.value[1].data.$cache[310].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "312": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_string",
                                    "value": "hello world'\n :D",
                                    "start": 312,
                                    "end": 332
                                },
                                {
                                    "source": "\n{{\n    {}\n    function innerFunction(arg) {\n    }\n}}\n\nif (true) {\n    const x = 10;\n}\n\nif (false) {\n    const y = 1;\n} else {\n    const y = 2;\n}\n\nconst lambda1 = (x) => x;\nconst flip1 = f => (x,y) => f(y,x);\n\nfunction lambda2(x){return x;}function flip2(f, x,y){return f(y,x)}\n\n\nfunction main() {\n    const s = 'hello world\\'\\n :D';\n    const n = 42\n    const id = x => x;\n    const toString = x => x.toString();\n    const const = x => y => x;\n    const hard  = f(res.value[0])(res.value[1])\n\n    return 3;\n}\n",
                                    "offset": 332,
                                    "data": "Cycle(root.value[1].data.$cache[312].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "332": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_punct",
                                    "value": ";",
                                    "start": 332,
                                    "end": 333
                                },
                                {
                                    "source": "\n{{\n    {}\n    function innerFunction(arg) {\n    }\n}}\n\nif (true) {\n    const x = 10;\n}\n\nif (false) {\n    const y = 1;\n} else {\n    const y = 2;\n}\n\nconst lambda1 = (x) => x;\nconst flip1 = f => (x,y) => f(y,x);\n\nfunction lambda2(x){return x;}function flip2(f, x,y){return f(y,x)}\n\n\nfunction main() {\n    const s = 'hello world\\'\\n :D';\n    const n = 42\n    const id = x => x;\n    const toString = x => x.toString();\n    const const = x => y => x;\n    const hard  = f(res.value[0])(res.value[1])\n\n    return 3;\n}\n",
                                    "offset": 338,
                                    "data": "Cycle(root.value[1].data.$cache[332].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "338": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_id",
                                    "value": "const",
                                    "start": 338,
                                    "end": 343
                                },
                                {
                                    "source": "\n{{\n    {}\n    function innerFunction(arg) {\n    }\n}}\n\nif (true) {\n    const x = 10;\n}\n\nif (false) {\n    const y = 1;\n} else {\n    const y = 2;\n}\n\nconst lambda1 = (x) => x;\nconst flip1 = f => (x,y) => f(y,x);\n\nfunction lambda2(x){return x;}function flip2(f, x,y){return f(y,x)}\n\n\nfunction main() {\n    const s = 'hello world\\'\\n :D';\n    const n = 42\n    const id = x => x;\n    const toString = x => x.toString();\n    const const = x => y => x;\n    const hard  = f(res.value[0])(res.value[1])\n\n    return 3;\n}\n",
                                    "offset": 344,
                                    "data": "Cycle(root.value[1].data.$cache[338].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "344": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_id",
                                    "value": "n",
                                    "start": 344,
                                    "end": 345
                                },
                                {
                                    "source": "\n{{\n    {}\n    function innerFunction(arg) {\n    }\n}}\n\nif (true) {\n    const x = 10;\n}\n\nif (false) {\n    const y = 1;\n} else {\n    const y = 2;\n}\n\nconst lambda1 = (x) => x;\nconst flip1 = f => (x,y) => f(y,x);\n\nfunction lambda2(x){return x;}function flip2(f, x,y){return f(y,x)}\n\n\nfunction main() {\n    const s = 'hello world\\'\\n :D';\n    const n = 42\n    const id = x => x;\n    const toString = x => x.toString();\n    const const = x => y => x;\n    const hard  = f(res.value[0])(res.value[1])\n\n    return 3;\n}\n",
                                    "offset": 346,
                                    "data": "Cycle(root.value[1].data.$cache[344].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "346": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_operator",
                                    "value": "=",
                                    "start": 346,
                                    "end": 347
                                },
                                {
                                    "source": "\n{{\n    {}\n    function innerFunction(arg) {\n    }\n}}\n\nif (true) {\n    const x = 10;\n}\n\nif (false) {\n    const y = 1;\n} else {\n    const y = 2;\n}\n\nconst lambda1 = (x) => x;\nconst flip1 = f => (x,y) => f(y,x);\n\nfunction lambda2(x){return x;}function flip2(f, x,y){return f(y,x)}\n\n\nfunction main() {\n    const s = 'hello world\\'\\n :D';\n    const n = 42\n    const id = x => x;\n    const toString = x => x.toString();\n    const const = x => y => x;\n    const hard  = f(res.value[0])(res.value[1])\n\n    return 3;\n}\n",
                                    "offset": 348,
                                    "data": "Cycle(root.value[1].data.$cache[346].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "348": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_number",
                                    "value": "42",
                                    "start": 348,
                                    "end": 350
                                },
                                {
                                    "source": "\n{{\n    {}\n    function innerFunction(arg) {\n    }\n}}\n\nif (true) {\n    const x = 10;\n}\n\nif (false) {\n    const y = 1;\n} else {\n    const y = 2;\n}\n\nconst lambda1 = (x) => x;\nconst flip1 = f => (x,y) => f(y,x);\n\nfunction lambda2(x){return x;}function flip2(f, x,y){return f(y,x)}\n\n\nfunction main() {\n    const s = 'hello world\\'\\n :D';\n    const n = 42\n    const id = x => x;\n    const toString = x => x.toString();\n    const const = x => y => x;\n    const hard  = f(res.value[0])(res.value[1])\n\n    return 3;\n}\n",
                                    "offset": 355,
                                    "data": "Cycle(root.value[1].data.$cache[348].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "355": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_id",
                                    "value": "const",
                                    "start": 355,
                                    "end": 360
                                },
                                {
                                    "source": "\n{{\n    {}\n    function innerFunction(arg) {\n    }\n}}\n\nif (true) {\n    const x = 10;\n}\n\nif (false) {\n    const y = 1;\n} else {\n    const y = 2;\n}\n\nconst lambda1 = (x) => x;\nconst flip1 = f => (x,y) => f(y,x);\n\nfunction lambda2(x){return x;}function flip2(f, x,y){return f(y,x)}\n\n\nfunction main() {\n    const s = 'hello world\\'\\n :D';\n    const n = 42\n    const id = x => x;\n    const toString = x => x.toString();\n    const const = x => y => x;\n    const hard  = f(res.value[0])(res.value[1])\n\n    return 3;\n}\n",
                                    "offset": 361,
                                    "data": "Cycle(root.value[1].data.$cache[355].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "361": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_id",
                                    "value": "id",
                                    "start": 361,
                                    "end": 363
                                },
                                {
                                    "source": "\n{{\n    {}\n    function innerFunction(arg) {\n    }\n}}\n\nif (true) {\n    const x = 10;\n}\n\nif (false) {\n    const y = 1;\n} else {\n    const y = 2;\n}\n\nconst lambda1 = (x) => x;\nconst flip1 = f => (x,y) => f(y,x);\n\nfunction lambda2(x){return x;}function flip2(f, x,y){return f(y,x)}\n\n\nfunction main() {\n    const s = 'hello world\\'\\n :D';\n    const n = 42\n    const id = x => x;\n    const toString = x => x.toString();\n    const const = x => y => x;\n    const hard  = f(res.value[0])(res.value[1])\n\n    return 3;\n}\n",
                                    "offset": 364,
                                    "data": "Cycle(root.value[1].data.$cache[361].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "364": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_operator",
                                    "value": "=",
                                    "start": 364,
                                    "end": 365
                                },
                                {
                                    "source": "\n{{\n    {}\n    function innerFunction(arg) {\n    }\n}}\n\nif (true) {\n    const x = 10;\n}\n\nif (false) {\n    const y = 1;\n} else {\n    const y = 2;\n}\n\nconst lambda1 = (x) => x;\nconst flip1 = f => (x,y) => f(y,x);\n\nfunction lambda2(x){return x;}function flip2(f, x,y){return f(y,x)}\n\n\nfunction main() {\n    const s = 'hello world\\'\\n :D';\n    const n = 42\n    const id = x => x;\n    const toString = x => x.toString();\n    const const = x => y => x;\n    const hard  = f(res.value[0])(res.value[1])\n\n    return 3;\n}\n",
                                    "offset": 366,
                                    "data": "Cycle(root.value[1].data.$cache[364].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "366": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_id",
                                    "value": "x",
                                    "start": 366,
                                    "end": 367
                                },
                                {
                                    "source": "\n{{\n    {}\n    function innerFunction(arg) {\n    }\n}}\n\nif (true) {\n    const x = 10;\n}\n\nif (false) {\n    const y = 1;\n} else {\n    const y = 2;\n}\n\nconst lambda1 = (x) => x;\nconst flip1 = f => (x,y) => f(y,x);\n\nfunction lambda2(x){return x;}function flip2(f, x,y){return f(y,x)}\n\n\nfunction main() {\n    const s = 'hello world\\'\\n :D';\n    const n = 42\n    const id = x => x;\n    const toString = x => x.toString();\n    const const = x => y => x;\n    const hard  = f(res.value[0])(res.value[1])\n\n    return 3;\n}\n",
                                    "offset": 368,
                                    "data": "Cycle(root.value[1].data.$cache[366].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "368": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_operator",
                                    "value": "=>",
                                    "start": 368,
                                    "end": 370
                                },
                                {
                                    "source": "\n{{\n    {}\n    function innerFunction(arg) {\n    }\n}}\n\nif (true) {\n    const x = 10;\n}\n\nif (false) {\n    const y = 1;\n} else {\n    const y = 2;\n}\n\nconst lambda1 = (x) => x;\nconst flip1 = f => (x,y) => f(y,x);\n\nfunction lambda2(x){return x;}function flip2(f, x,y){return f(y,x)}\n\n\nfunction main() {\n    const s = 'hello world\\'\\n :D';\n    const n = 42\n    const id = x => x;\n    const toString = x => x.toString();\n    const const = x => y => x;\n    const hard  = f(res.value[0])(res.value[1])\n\n    return 3;\n}\n",
                                    "offset": 371,
                                    "data": "Cycle(root.value[1].data.$cache[368].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "371": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_id",
                                    "value": "x",
                                    "start": 371,
                                    "end": 372
                                },
                                {
                                    "source": "\n{{\n    {}\n    function innerFunction(arg) {\n    }\n}}\n\nif (true) {\n    const x = 10;\n}\n\nif (false) {\n    const y = 1;\n} else {\n    const y = 2;\n}\n\nconst lambda1 = (x) => x;\nconst flip1 = f => (x,y) => f(y,x);\n\nfunction lambda2(x){return x;}function flip2(f, x,y){return f(y,x)}\n\n\nfunction main() {\n    const s = 'hello world\\'\\n :D';\n    const n = 42\n    const id = x => x;\n    const toString = x => x.toString();\n    const const = x => y => x;\n    const hard  = f(res.value[0])(res.value[1])\n\n    return 3;\n}\n",
                                    "offset": 372,
                                    "data": "Cycle(root.value[1].data.$cache[371].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "372": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_punct",
                                    "value": ";",
                                    "start": 372,
                                    "end": 373
                                },
                                {
                                    "source": "\n{{\n    {}\n    function innerFunction(arg) {\n    }\n}}\n\nif (true) {\n    const x = 10;\n}\n\nif (false) {\n    const y = 1;\n} else {\n    const y = 2;\n}\n\nconst lambda1 = (x) => x;\nconst flip1 = f => (x,y) => f(y,x);\n\nfunction lambda2(x){return x;}function flip2(f, x,y){return f(y,x)}\n\n\nfunction main() {\n    const s = 'hello world\\'\\n :D';\n    const n = 42\n    const id = x => x;\n    const toString = x => x.toString();\n    const const = x => y => x;\n    const hard  = f(res.value[0])(res.value[1])\n\n    return 3;\n}\n",
                                    "offset": 378,
                                    "data": "Cycle(root.value[1].data.$cache[372].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "378": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_id",
                                    "value": "const",
                                    "start": 378,
                                    "end": 383
                                },
                                {
                                    "source": "\n{{\n    {}\n    function innerFunction(arg) {\n    }\n}}\n\nif (true) {\n    const x = 10;\n}\n\nif (false) {\n    const y = 1;\n} else {\n    const y = 2;\n}\n\nconst lambda1 = (x) => x;\nconst flip1 = f => (x,y) => f(y,x);\n\nfunction lambda2(x){return x;}function flip2(f, x,y){return f(y,x)}\n\n\nfunction main() {\n    const s = 'hello world\\'\\n :D';\n    const n = 42\n    const id = x => x;\n    const toString = x => x.toString();\n    const const = x => y => x;\n    const hard  = f(res.value[0])(res.value[1])\n\n    return 3;\n}\n",
                                    "offset": 384,
                                    "data": "Cycle(root.value[1].data.$cache[378].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "384": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_id",
                                    "value": "toString",
                                    "start": 384,
                                    "end": 392
                                },
                                {
                                    "source": "\n{{\n    {}\n    function innerFunction(arg) {\n    }\n}}\n\nif (true) {\n    const x = 10;\n}\n\nif (false) {\n    const y = 1;\n} else {\n    const y = 2;\n}\n\nconst lambda1 = (x) => x;\nconst flip1 = f => (x,y) => f(y,x);\n\nfunction lambda2(x){return x;}function flip2(f, x,y){return f(y,x)}\n\n\nfunction main() {\n    const s = 'hello world\\'\\n :D';\n    const n = 42\n    const id = x => x;\n    const toString = x => x.toString();\n    const const = x => y => x;\n    const hard  = f(res.value[0])(res.value[1])\n\n    return 3;\n}\n",
                                    "offset": 393,
                                    "data": "Cycle(root.value[1].data.$cache[384].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "393": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_operator",
                                    "value": "=",
                                    "start": 393,
                                    "end": 394
                                },
                                {
                                    "source": "\n{{\n    {}\n    function innerFunction(arg) {\n    }\n}}\n\nif (true) {\n    const x = 10;\n}\n\nif (false) {\n    const y = 1;\n} else {\n    const y = 2;\n}\n\nconst lambda1 = (x) => x;\nconst flip1 = f => (x,y) => f(y,x);\n\nfunction lambda2(x){return x;}function flip2(f, x,y){return f(y,x)}\n\n\nfunction main() {\n    const s = 'hello world\\'\\n :D';\n    const n = 42\n    const id = x => x;\n    const toString = x => x.toString();\n    const const = x => y => x;\n    const hard  = f(res.value[0])(res.value[1])\n\n    return 3;\n}\n",
                                    "offset": 395,
                                    "data": "Cycle(root.value[1].data.$cache[393].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "395": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_id",
                                    "value": "x",
                                    "start": 395,
                                    "end": 396
                                },
                                {
                                    "source": "\n{{\n    {}\n    function innerFunction(arg) {\n    }\n}}\n\nif (true) {\n    const x = 10;\n}\n\nif (false) {\n    const y = 1;\n} else {\n    const y = 2;\n}\n\nconst lambda1 = (x) => x;\nconst flip1 = f => (x,y) => f(y,x);\n\nfunction lambda2(x){return x;}function flip2(f, x,y){return f(y,x)}\n\n\nfunction main() {\n    const s = 'hello world\\'\\n :D';\n    const n = 42\n    const id = x => x;\n    const toString = x => x.toString();\n    const const = x => y => x;\n    const hard  = f(res.value[0])(res.value[1])\n\n    return 3;\n}\n",
                                    "offset": 397,
                                    "data": "Cycle(root.value[1].data.$cache[395].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "397": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_operator",
                                    "value": "=>",
                                    "start": 397,
                                    "end": 399
                                },
                                {
                                    "source": "\n{{\n    {}\n    function innerFunction(arg) {\n    }\n}}\n\nif (true) {\n    const x = 10;\n}\n\nif (false) {\n    const y = 1;\n} else {\n    const y = 2;\n}\n\nconst lambda1 = (x) => x;\nconst flip1 = f => (x,y) => f(y,x);\n\nfunction lambda2(x){return x;}function flip2(f, x,y){return f(y,x)}\n\n\nfunction main() {\n    const s = 'hello world\\'\\n :D';\n    const n = 42\n    const id = x => x;\n    const toString = x => x.toString();\n    const const = x => y => x;\n    const hard  = f(res.value[0])(res.value[1])\n\n    return 3;\n}\n",
                                    "offset": 400,
                                    "data": "Cycle(root.value[1].data.$cache[397].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "400": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_id",
                                    "value": "x",
                                    "start": 400,
                                    "end": 401
                                },
                                {
                                    "source": "\n{{\n    {}\n    function innerFunction(arg) {\n    }\n}}\n\nif (true) {\n    const x = 10;\n}\n\nif (false) {\n    const y = 1;\n} else {\n    const y = 2;\n}\n\nconst lambda1 = (x) => x;\nconst flip1 = f => (x,y) => f(y,x);\n\nfunction lambda2(x){return x;}function flip2(f, x,y){return f(y,x)}\n\n\nfunction main() {\n    const s = 'hello world\\'\\n :D';\n    const n = 42\n    const id = x => x;\n    const toString = x => x.toString();\n    const const = x => y => x;\n    const hard  = f(res.value[0])(res.value[1])\n\n    return 3;\n}\n",
                                    "offset": 401,
                                    "data": "Cycle(root.value[1].data.$cache[400].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "401": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_operator",
                                    "value": ".",
                                    "start": 401,
                                    "end": 402
                                },
                                {
                                    "source": "\n{{\n    {}\n    function innerFunction(arg) {\n    }\n}}\n\nif (true) {\n    const x = 10;\n}\n\nif (false) {\n    const y = 1;\n} else {\n    const y = 2;\n}\n\nconst lambda1 = (x) => x;\nconst flip1 = f => (x,y) => f(y,x);\n\nfunction lambda2(x){return x;}function flip2(f, x,y){return f(y,x)}\n\n\nfunction main() {\n    const s = 'hello world\\'\\n :D';\n    const n = 42\n    const id = x => x;\n    const toString = x => x.toString();\n    const const = x => y => x;\n    const hard  = f(res.value[0])(res.value[1])\n\n    return 3;\n}\n",
                                    "offset": 402,
                                    "data": "Cycle(root.value[1].data.$cache[401].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "402": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_id",
                                    "value": "toString",
                                    "start": 402,
                                    "end": 410
                                },
                                {
                                    "source": "\n{{\n    {}\n    function innerFunction(arg) {\n    }\n}}\n\nif (true) {\n    const x = 10;\n}\n\nif (false) {\n    const y = 1;\n} else {\n    const y = 2;\n}\n\nconst lambda1 = (x) => x;\nconst flip1 = f => (x,y) => f(y,x);\n\nfunction lambda2(x){return x;}function flip2(f, x,y){return f(y,x)}\n\n\nfunction main() {\n    const s = 'hello world\\'\\n :D';\n    const n = 42\n    const id = x => x;\n    const toString = x => x.toString();\n    const const = x => y => x;\n    const hard  = f(res.value[0])(res.value[1])\n\n    return 3;\n}\n",
                                    "offset": 410,
                                    "data": "Cycle(root.value[1].data.$cache[402].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "410": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_punct",
                                    "value": "(",
                                    "start": 410,
                                    "end": 411
                                },
                                {
                                    "source": "\n{{\n    {}\n    function innerFunction(arg) {\n    }\n}}\n\nif (true) {\n    const x = 10;\n}\n\nif (false) {\n    const y = 1;\n} else {\n    const y = 2;\n}\n\nconst lambda1 = (x) => x;\nconst flip1 = f => (x,y) => f(y,x);\n\nfunction lambda2(x){return x;}function flip2(f, x,y){return f(y,x)}\n\n\nfunction main() {\n    const s = 'hello world\\'\\n :D';\n    const n = 42\n    const id = x => x;\n    const toString = x => x.toString();\n    const const = x => y => x;\n    const hard  = f(res.value[0])(res.value[1])\n\n    return 3;\n}\n",
                                    "offset": 411,
                                    "data": "Cycle(root.value[1].data.$cache[410].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "411": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_punct",
                                    "value": ")",
                                    "start": 411,
                                    "end": 412
                                },
                                {
                                    "source": "\n{{\n    {}\n    function innerFunction(arg) {\n    }\n}}\n\nif (true) {\n    const x = 10;\n}\n\nif (false) {\n    const y = 1;\n} else {\n    const y = 2;\n}\n\nconst lambda1 = (x) => x;\nconst flip1 = f => (x,y) => f(y,x);\n\nfunction lambda2(x){return x;}function flip2(f, x,y){return f(y,x)}\n\n\nfunction main() {\n    const s = 'hello world\\'\\n :D';\n    const n = 42\n    const id = x => x;\n    const toString = x => x.toString();\n    const const = x => y => x;\n    const hard  = f(res.value[0])(res.value[1])\n\n    return 3;\n}\n",
                                    "offset": 412,
                                    "data": "Cycle(root.value[1].data.$cache[411].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "412": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_punct",
                                    "value": ";",
                                    "start": 412,
                                    "end": 413
                                },
                                {
                                    "source": "\n{{\n    {}\n    function innerFunction(arg) {\n    }\n}}\n\nif (true) {\n    const x = 10;\n}\n\nif (false) {\n    const y = 1;\n} else {\n    const y = 2;\n}\n\nconst lambda1 = (x) => x;\nconst flip1 = f => (x,y) => f(y,x);\n\nfunction lambda2(x){return x;}function flip2(f, x,y){return f(y,x)}\n\n\nfunction main() {\n    const s = 'hello world\\'\\n :D';\n    const n = 42\n    const id = x => x;\n    const toString = x => x.toString();\n    const const = x => y => x;\n    const hard  = f(res.value[0])(res.value[1])\n\n    return 3;\n}\n",
                                    "offset": 418,
                                    "data": "Cycle(root.value[1].data.$cache[412].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "418": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_id",
                                    "value": "const",
                                    "start": 418,
                                    "end": 423
                                },
                                {
                                    "source": "\n{{\n    {}\n    function innerFunction(arg) {\n    }\n}}\n\nif (true) {\n    const x = 10;\n}\n\nif (false) {\n    const y = 1;\n} else {\n    const y = 2;\n}\n\nconst lambda1 = (x) => x;\nconst flip1 = f => (x,y) => f(y,x);\n\nfunction lambda2(x){return x;}function flip2(f, x,y){return f(y,x)}\n\n\nfunction main() {\n    const s = 'hello world\\'\\n :D';\n    const n = 42\n    const id = x => x;\n    const toString = x => x.toString();\n    const const = x => y => x;\n    const hard  = f(res.value[0])(res.value[1])\n\n    return 3;\n}\n",
                                    "offset": 424,
                                    "data": "Cycle(root.value[1].data.$cache[418].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "424": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_id",
                                    "value": "const",
                                    "start": 424,
                                    "end": 429
                                },
                                {
                                    "source": "\n{{\n    {}\n    function innerFunction(arg) {\n    }\n}}\n\nif (true) {\n    const x = 10;\n}\n\nif (false) {\n    const y = 1;\n} else {\n    const y = 2;\n}\n\nconst lambda1 = (x) => x;\nconst flip1 = f => (x,y) => f(y,x);\n\nfunction lambda2(x){return x;}function flip2(f, x,y){return f(y,x)}\n\n\nfunction main() {\n    const s = 'hello world\\'\\n :D';\n    const n = 42\n    const id = x => x;\n    const toString = x => x.toString();\n    const const = x => y => x;\n    const hard  = f(res.value[0])(res.value[1])\n\n    return 3;\n}\n",
                                    "offset": 430,
                                    "data": "Cycle(root.value[1].data.$cache[424].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "430": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_operator",
                                    "value": "=",
                                    "start": 430,
                                    "end": 431
                                },
                                {
                                    "source": "\n{{\n    {}\n    function innerFunction(arg) {\n    }\n}}\n\nif (true) {\n    const x = 10;\n}\n\nif (false) {\n    const y = 1;\n} else {\n    const y = 2;\n}\n\nconst lambda1 = (x) => x;\nconst flip1 = f => (x,y) => f(y,x);\n\nfunction lambda2(x){return x;}function flip2(f, x,y){return f(y,x)}\n\n\nfunction main() {\n    const s = 'hello world\\'\\n :D';\n    const n = 42\n    const id = x => x;\n    const toString = x => x.toString();\n    const const = x => y => x;\n    const hard  = f(res.value[0])(res.value[1])\n\n    return 3;\n}\n",
                                    "offset": 432,
                                    "data": "Cycle(root.value[1].data.$cache[430].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "432": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_id",
                                    "value": "x",
                                    "start": 432,
                                    "end": 433
                                },
                                {
                                    "source": "\n{{\n    {}\n    function innerFunction(arg) {\n    }\n}}\n\nif (true) {\n    const x = 10;\n}\n\nif (false) {\n    const y = 1;\n} else {\n    const y = 2;\n}\n\nconst lambda1 = (x) => x;\nconst flip1 = f => (x,y) => f(y,x);\n\nfunction lambda2(x){return x;}function flip2(f, x,y){return f(y,x)}\n\n\nfunction main() {\n    const s = 'hello world\\'\\n :D';\n    const n = 42\n    const id = x => x;\n    const toString = x => x.toString();\n    const const = x => y => x;\n    const hard  = f(res.value[0])(res.value[1])\n\n    return 3;\n}\n",
                                    "offset": 434,
                                    "data": "Cycle(root.value[1].data.$cache[432].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "434": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_operator",
                                    "value": "=>",
                                    "start": 434,
                                    "end": 436
                                },
                                {
                                    "source": "\n{{\n    {}\n    function innerFunction(arg) {\n    }\n}}\n\nif (true) {\n    const x = 10;\n}\n\nif (false) {\n    const y = 1;\n} else {\n    const y = 2;\n}\n\nconst lambda1 = (x) => x;\nconst flip1 = f => (x,y) => f(y,x);\n\nfunction lambda2(x){return x;}function flip2(f, x,y){return f(y,x)}\n\n\nfunction main() {\n    const s = 'hello world\\'\\n :D';\n    const n = 42\n    const id = x => x;\n    const toString = x => x.toString();\n    const const = x => y => x;\n    const hard  = f(res.value[0])(res.value[1])\n\n    return 3;\n}\n",
                                    "offset": 437,
                                    "data": "Cycle(root.value[1].data.$cache[434].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "437": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_id",
                                    "value": "y",
                                    "start": 437,
                                    "end": 438
                                },
                                {
                                    "source": "\n{{\n    {}\n    function innerFunction(arg) {\n    }\n}}\n\nif (true) {\n    const x = 10;\n}\n\nif (false) {\n    const y = 1;\n} else {\n    const y = 2;\n}\n\nconst lambda1 = (x) => x;\nconst flip1 = f => (x,y) => f(y,x);\n\nfunction lambda2(x){return x;}function flip2(f, x,y){return f(y,x)}\n\n\nfunction main() {\n    const s = 'hello world\\'\\n :D';\n    const n = 42\n    const id = x => x;\n    const toString = x => x.toString();\n    const const = x => y => x;\n    const hard  = f(res.value[0])(res.value[1])\n\n    return 3;\n}\n",
                                    "offset": 439,
                                    "data": "Cycle(root.value[1].data.$cache[437].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "439": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_operator",
                                    "value": "=>",
                                    "start": 439,
                                    "end": 441
                                },
                                {
                                    "source": "\n{{\n    {}\n    function innerFunction(arg) {\n    }\n}}\n\nif (true) {\n    const x = 10;\n}\n\nif (false) {\n    const y = 1;\n} else {\n    const y = 2;\n}\n\nconst lambda1 = (x) => x;\nconst flip1 = f => (x,y) => f(y,x);\n\nfunction lambda2(x){return x;}function flip2(f, x,y){return f(y,x)}\n\n\nfunction main() {\n    const s = 'hello world\\'\\n :D';\n    const n = 42\n    const id = x => x;\n    const toString = x => x.toString();\n    const const = x => y => x;\n    const hard  = f(res.value[0])(res.value[1])\n\n    return 3;\n}\n",
                                    "offset": 442,
                                    "data": "Cycle(root.value[1].data.$cache[439].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "442": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_id",
                                    "value": "x",
                                    "start": 442,
                                    "end": 443
                                },
                                {
                                    "source": "\n{{\n    {}\n    function innerFunction(arg) {\n    }\n}}\n\nif (true) {\n    const x = 10;\n}\n\nif (false) {\n    const y = 1;\n} else {\n    const y = 2;\n}\n\nconst lambda1 = (x) => x;\nconst flip1 = f => (x,y) => f(y,x);\n\nfunction lambda2(x){return x;}function flip2(f, x,y){return f(y,x)}\n\n\nfunction main() {\n    const s = 'hello world\\'\\n :D';\n    const n = 42\n    const id = x => x;\n    const toString = x => x.toString();\n    const const = x => y => x;\n    const hard  = f(res.value[0])(res.value[1])\n\n    return 3;\n}\n",
                                    "offset": 443,
                                    "data": "Cycle(root.value[1].data.$cache[442].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "443": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_punct",
                                    "value": ";",
                                    "start": 443,
                                    "end": 444
                                },
                                {
                                    "source": "\n{{\n    {}\n    function innerFunction(arg) {\n    }\n}}\n\nif (true) {\n    const x = 10;\n}\n\nif (false) {\n    const y = 1;\n} else {\n    const y = 2;\n}\n\nconst lambda1 = (x) => x;\nconst flip1 = f => (x,y) => f(y,x);\n\nfunction lambda2(x){return x;}function flip2(f, x,y){return f(y,x)}\n\n\nfunction main() {\n    const s = 'hello world\\'\\n :D';\n    const n = 42\n    const id = x => x;\n    const toString = x => x.toString();\n    const const = x => y => x;\n    const hard  = f(res.value[0])(res.value[1])\n\n    return 3;\n}\n",
                                    "offset": 449,
                                    "data": "Cycle(root.value[1].data.$cache[443].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "449": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_id",
                                    "value": "const",
                                    "start": 449,
                                    "end": 454
                                },
                                {
                                    "source": "\n{{\n    {}\n    function innerFunction(arg) {\n    }\n}}\n\nif (true) {\n    const x = 10;\n}\n\nif (false) {\n    const y = 1;\n} else {\n    const y = 2;\n}\n\nconst lambda1 = (x) => x;\nconst flip1 = f => (x,y) => f(y,x);\n\nfunction lambda2(x){return x;}function flip2(f, x,y){return f(y,x)}\n\n\nfunction main() {\n    const s = 'hello world\\'\\n :D';\n    const n = 42\n    const id = x => x;\n    const toString = x => x.toString();\n    const const = x => y => x;\n    const hard  = f(res.value[0])(res.value[1])\n\n    return 3;\n}\n",
                                    "offset": 455,
                                    "data": "Cycle(root.value[1].data.$cache[449].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "455": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_id",
                                    "value": "hard",
                                    "start": 455,
                                    "end": 459
                                },
                                {
                                    "source": "\n{{\n    {}\n    function innerFunction(arg) {\n    }\n}}\n\nif (true) {\n    const x = 10;\n}\n\nif (false) {\n    const y = 1;\n} else {\n    const y = 2;\n}\n\nconst lambda1 = (x) => x;\nconst flip1 = f => (x,y) => f(y,x);\n\nfunction lambda2(x){return x;}function flip2(f, x,y){return f(y,x)}\n\n\nfunction main() {\n    const s = 'hello world\\'\\n :D';\n    const n = 42\n    const id = x => x;\n    const toString = x => x.toString();\n    const const = x => y => x;\n    const hard  = f(res.value[0])(res.value[1])\n\n    return 3;\n}\n",
                                    "offset": 461,
                                    "data": "Cycle(root.value[1].data.$cache[455].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "461": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_operator",
                                    "value": "=",
                                    "start": 461,
                                    "end": 462
                                },
                                {
                                    "source": "\n{{\n    {}\n    function innerFunction(arg) {\n    }\n}}\n\nif (true) {\n    const x = 10;\n}\n\nif (false) {\n    const y = 1;\n} else {\n    const y = 2;\n}\n\nconst lambda1 = (x) => x;\nconst flip1 = f => (x,y) => f(y,x);\n\nfunction lambda2(x){return x;}function flip2(f, x,y){return f(y,x)}\n\n\nfunction main() {\n    const s = 'hello world\\'\\n :D';\n    const n = 42\n    const id = x => x;\n    const toString = x => x.toString();\n    const const = x => y => x;\n    const hard  = f(res.value[0])(res.value[1])\n\n    return 3;\n}\n",
                                    "offset": 463,
                                    "data": "Cycle(root.value[1].data.$cache[461].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "463": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_id",
                                    "value": "f",
                                    "start": 463,
                                    "end": 464
                                },
                                {
                                    "source": "\n{{\n    {}\n    function innerFunction(arg) {\n    }\n}}\n\nif (true) {\n    const x = 10;\n}\n\nif (false) {\n    const y = 1;\n} else {\n    const y = 2;\n}\n\nconst lambda1 = (x) => x;\nconst flip1 = f => (x,y) => f(y,x);\n\nfunction lambda2(x){return x;}function flip2(f, x,y){return f(y,x)}\n\n\nfunction main() {\n    const s = 'hello world\\'\\n :D';\n    const n = 42\n    const id = x => x;\n    const toString = x => x.toString();\n    const const = x => y => x;\n    const hard  = f(res.value[0])(res.value[1])\n\n    return 3;\n}\n",
                                    "offset": 464,
                                    "data": "Cycle(root.value[1].data.$cache[463].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "464": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_punct",
                                    "value": "(",
                                    "start": 464,
                                    "end": 465
                                },
                                {
                                    "source": "\n{{\n    {}\n    function innerFunction(arg) {\n    }\n}}\n\nif (true) {\n    const x = 10;\n}\n\nif (false) {\n    const y = 1;\n} else {\n    const y = 2;\n}\n\nconst lambda1 = (x) => x;\nconst flip1 = f => (x,y) => f(y,x);\n\nfunction lambda2(x){return x;}function flip2(f, x,y){return f(y,x)}\n\n\nfunction main() {\n    const s = 'hello world\\'\\n :D';\n    const n = 42\n    const id = x => x;\n    const toString = x => x.toString();\n    const const = x => y => x;\n    const hard  = f(res.value[0])(res.value[1])\n\n    return 3;\n}\n",
                                    "offset": 465,
                                    "data": "Cycle(root.value[1].data.$cache[464].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "465": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_id",
                                    "value": "res",
                                    "start": 465,
                                    "end": 468
                                },
                                {
                                    "source": "\n{{\n    {}\n    function innerFunction(arg) {\n    }\n}}\n\nif (true) {\n    const x = 10;\n}\n\nif (false) {\n    const y = 1;\n} else {\n    const y = 2;\n}\n\nconst lambda1 = (x) => x;\nconst flip1 = f => (x,y) => f(y,x);\n\nfunction lambda2(x){return x;}function flip2(f, x,y){return f(y,x)}\n\n\nfunction main() {\n    const s = 'hello world\\'\\n :D';\n    const n = 42\n    const id = x => x;\n    const toString = x => x.toString();\n    const const = x => y => x;\n    const hard  = f(res.value[0])(res.value[1])\n\n    return 3;\n}\n",
                                    "offset": 468,
                                    "data": "Cycle(root.value[1].data.$cache[465].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "468": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_operator",
                                    "value": ".",
                                    "start": 468,
                                    "end": 469
                                },
                                {
                                    "source": "\n{{\n    {}\n    function innerFunction(arg) {\n    }\n}}\n\nif (true) {\n    const x = 10;\n}\n\nif (false) {\n    const y = 1;\n} else {\n    const y = 2;\n}\n\nconst lambda1 = (x) => x;\nconst flip1 = f => (x,y) => f(y,x);\n\nfunction lambda2(x){return x;}function flip2(f, x,y){return f(y,x)}\n\n\nfunction main() {\n    const s = 'hello world\\'\\n :D';\n    const n = 42\n    const id = x => x;\n    const toString = x => x.toString();\n    const const = x => y => x;\n    const hard  = f(res.value[0])(res.value[1])\n\n    return 3;\n}\n",
                                    "offset": 469,
                                    "data": "Cycle(root.value[1].data.$cache[468].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "469": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_id",
                                    "value": "value",
                                    "start": 469,
                                    "end": 474
                                },
                                {
                                    "source": "\n{{\n    {}\n    function innerFunction(arg) {\n    }\n}}\n\nif (true) {\n    const x = 10;\n}\n\nif (false) {\n    const y = 1;\n} else {\n    const y = 2;\n}\n\nconst lambda1 = (x) => x;\nconst flip1 = f => (x,y) => f(y,x);\n\nfunction lambda2(x){return x;}function flip2(f, x,y){return f(y,x)}\n\n\nfunction main() {\n    const s = 'hello world\\'\\n :D';\n    const n = 42\n    const id = x => x;\n    const toString = x => x.toString();\n    const const = x => y => x;\n    const hard  = f(res.value[0])(res.value[1])\n\n    return 3;\n}\n",
                                    "offset": 474,
                                    "data": "Cycle(root.value[1].data.$cache[469].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "474": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_punct",
                                    "value": "[",
                                    "start": 474,
                                    "end": 475
                                },
                                {
                                    "source": "\n{{\n    {}\n    function innerFunction(arg) {\n    }\n}}\n\nif (true) {\n    const x = 10;\n}\n\nif (false) {\n    const y = 1;\n} else {\n    const y = 2;\n}\n\nconst lambda1 = (x) => x;\nconst flip1 = f => (x,y) => f(y,x);\n\nfunction lambda2(x){return x;}function flip2(f, x,y){return f(y,x)}\n\n\nfunction main() {\n    const s = 'hello world\\'\\n :D';\n    const n = 42\n    const id = x => x;\n    const toString = x => x.toString();\n    const const = x => y => x;\n    const hard  = f(res.value[0])(res.value[1])\n\n    return 3;\n}\n",
                                    "offset": 475,
                                    "data": "Cycle(root.value[1].data.$cache[474].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "475": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_number",
                                    "value": "0",
                                    "start": 475,
                                    "end": 476
                                },
                                {
                                    "source": "\n{{\n    {}\n    function innerFunction(arg) {\n    }\n}}\n\nif (true) {\n    const x = 10;\n}\n\nif (false) {\n    const y = 1;\n} else {\n    const y = 2;\n}\n\nconst lambda1 = (x) => x;\nconst flip1 = f => (x,y) => f(y,x);\n\nfunction lambda2(x){return x;}function flip2(f, x,y){return f(y,x)}\n\n\nfunction main() {\n    const s = 'hello world\\'\\n :D';\n    const n = 42\n    const id = x => x;\n    const toString = x => x.toString();\n    const const = x => y => x;\n    const hard  = f(res.value[0])(res.value[1])\n\n    return 3;\n}\n",
                                    "offset": 476,
                                    "data": "Cycle(root.value[1].data.$cache[475].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "476": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_punct",
                                    "value": "]",
                                    "start": 476,
                                    "end": 477
                                },
                                {
                                    "source": "\n{{\n    {}\n    function innerFunction(arg) {\n    }\n}}\n\nif (true) {\n    const x = 10;\n}\n\nif (false) {\n    const y = 1;\n} else {\n    const y = 2;\n}\n\nconst lambda1 = (x) => x;\nconst flip1 = f => (x,y) => f(y,x);\n\nfunction lambda2(x){return x;}function flip2(f, x,y){return f(y,x)}\n\n\nfunction main() {\n    const s = 'hello world\\'\\n :D';\n    const n = 42\n    const id = x => x;\n    const toString = x => x.toString();\n    const const = x => y => x;\n    const hard  = f(res.value[0])(res.value[1])\n\n    return 3;\n}\n",
                                    "offset": 477,
                                    "data": "Cycle(root.value[1].data.$cache[476].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "477": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_punct",
                                    "value": ")",
                                    "start": 477,
                                    "end": 478
                                },
                                {
                                    "source": "\n{{\n    {}\n    function innerFunction(arg) {\n    }\n}}\n\nif (true) {\n    const x = 10;\n}\n\nif (false) {\n    const y = 1;\n} else {\n    const y = 2;\n}\n\nconst lambda1 = (x) => x;\nconst flip1 = f => (x,y) => f(y,x);\n\nfunction lambda2(x){return x;}function flip2(f, x,y){return f(y,x)}\n\n\nfunction main() {\n    const s = 'hello world\\'\\n :D';\n    const n = 42\n    const id = x => x;\n    const toString = x => x.toString();\n    const const = x => y => x;\n    const hard  = f(res.value[0])(res.value[1])\n\n    return 3;\n}\n",
                                    "offset": 478,
                                    "data": "Cycle(root.value[1].data.$cache[477].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "478": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_punct",
                                    "value": "(",
                                    "start": 478,
                                    "end": 479
                                },
                                {
                                    "source": "\n{{\n    {}\n    function innerFunction(arg) {\n    }\n}}\n\nif (true) {\n    const x = 10;\n}\n\nif (false) {\n    const y = 1;\n} else {\n    const y = 2;\n}\n\nconst lambda1 = (x) => x;\nconst flip1 = f => (x,y) => f(y,x);\n\nfunction lambda2(x){return x;}function flip2(f, x,y){return f(y,x)}\n\n\nfunction main() {\n    const s = 'hello world\\'\\n :D';\n    const n = 42\n    const id = x => x;\n    const toString = x => x.toString();\n    const const = x => y => x;\n    const hard  = f(res.value[0])(res.value[1])\n\n    return 3;\n}\n",
                                    "offset": 479,
                                    "data": "Cycle(root.value[1].data.$cache[478].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "479": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_id",
                                    "value": "res",
                                    "start": 479,
                                    "end": 482
                                },
                                {
                                    "source": "\n{{\n    {}\n    function innerFunction(arg) {\n    }\n}}\n\nif (true) {\n    const x = 10;\n}\n\nif (false) {\n    const y = 1;\n} else {\n    const y = 2;\n}\n\nconst lambda1 = (x) => x;\nconst flip1 = f => (x,y) => f(y,x);\n\nfunction lambda2(x){return x;}function flip2(f, x,y){return f(y,x)}\n\n\nfunction main() {\n    const s = 'hello world\\'\\n :D';\n    const n = 42\n    const id = x => x;\n    const toString = x => x.toString();\n    const const = x => y => x;\n    const hard  = f(res.value[0])(res.value[1])\n\n    return 3;\n}\n",
                                    "offset": 482,
                                    "data": "Cycle(root.value[1].data.$cache[479].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "482": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_operator",
                                    "value": ".",
                                    "start": 482,
                                    "end": 483
                                },
                                {
                                    "source": "\n{{\n    {}\n    function innerFunction(arg) {\n    }\n}}\n\nif (true) {\n    const x = 10;\n}\n\nif (false) {\n    const y = 1;\n} else {\n    const y = 2;\n}\n\nconst lambda1 = (x) => x;\nconst flip1 = f => (x,y) => f(y,x);\n\nfunction lambda2(x){return x;}function flip2(f, x,y){return f(y,x)}\n\n\nfunction main() {\n    const s = 'hello world\\'\\n :D';\n    const n = 42\n    const id = x => x;\n    const toString = x => x.toString();\n    const const = x => y => x;\n    const hard  = f(res.value[0])(res.value[1])\n\n    return 3;\n}\n",
                                    "offset": 483,
                                    "data": "Cycle(root.value[1].data.$cache[482].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "483": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_id",
                                    "value": "value",
                                    "start": 483,
                                    "end": 488
                                },
                                {
                                    "source": "\n{{\n    {}\n    function innerFunction(arg) {\n    }\n}}\n\nif (true) {\n    const x = 10;\n}\n\nif (false) {\n    const y = 1;\n} else {\n    const y = 2;\n}\n\nconst lambda1 = (x) => x;\nconst flip1 = f => (x,y) => f(y,x);\n\nfunction lambda2(x){return x;}function flip2(f, x,y){return f(y,x)}\n\n\nfunction main() {\n    const s = 'hello world\\'\\n :D';\n    const n = 42\n    const id = x => x;\n    const toString = x => x.toString();\n    const const = x => y => x;\n    const hard  = f(res.value[0])(res.value[1])\n\n    return 3;\n}\n",
                                    "offset": 488,
                                    "data": "Cycle(root.value[1].data.$cache[483].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "488": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_punct",
                                    "value": "[",
                                    "start": 488,
                                    "end": 489
                                },
                                {
                                    "source": "\n{{\n    {}\n    function innerFunction(arg) {\n    }\n}}\n\nif (true) {\n    const x = 10;\n}\n\nif (false) {\n    const y = 1;\n} else {\n    const y = 2;\n}\n\nconst lambda1 = (x) => x;\nconst flip1 = f => (x,y) => f(y,x);\n\nfunction lambda2(x){return x;}function flip2(f, x,y){return f(y,x)}\n\n\nfunction main() {\n    const s = 'hello world\\'\\n :D';\n    const n = 42\n    const id = x => x;\n    const toString = x => x.toString();\n    const const = x => y => x;\n    const hard  = f(res.value[0])(res.value[1])\n\n    return 3;\n}\n",
                                    "offset": 489,
                                    "data": "Cycle(root.value[1].data.$cache[488].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "489": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_number",
                                    "value": "1",
                                    "start": 489,
                                    "end": 490
                                },
                                {
                                    "source": "\n{{\n    {}\n    function innerFunction(arg) {\n    }\n}}\n\nif (true) {\n    const x = 10;\n}\n\nif (false) {\n    const y = 1;\n} else {\n    const y = 2;\n}\n\nconst lambda1 = (x) => x;\nconst flip1 = f => (x,y) => f(y,x);\n\nfunction lambda2(x){return x;}function flip2(f, x,y){return f(y,x)}\n\n\nfunction main() {\n    const s = 'hello world\\'\\n :D';\n    const n = 42\n    const id = x => x;\n    const toString = x => x.toString();\n    const const = x => y => x;\n    const hard  = f(res.value[0])(res.value[1])\n\n    return 3;\n}\n",
                                    "offset": 490,
                                    "data": "Cycle(root.value[1].data.$cache[489].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "490": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_punct",
                                    "value": "]",
                                    "start": 490,
                                    "end": 491
                                },
                                {
                                    "source": "\n{{\n    {}\n    function innerFunction(arg) {\n    }\n}}\n\nif (true) {\n    const x = 10;\n}\n\nif (false) {\n    const y = 1;\n} else {\n    const y = 2;\n}\n\nconst lambda1 = (x) => x;\nconst flip1 = f => (x,y) => f(y,x);\n\nfunction lambda2(x){return x;}function flip2(f, x,y){return f(y,x)}\n\n\nfunction main() {\n    const s = 'hello world\\'\\n :D';\n    const n = 42\n    const id = x => x;\n    const toString = x => x.toString();\n    const const = x => y => x;\n    const hard  = f(res.value[0])(res.value[1])\n\n    return 3;\n}\n",
                                    "offset": 491,
                                    "data": "Cycle(root.value[1].data.$cache[490].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "491": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_punct",
                                    "value": ")",
                                    "start": 491,
                                    "end": 492
                                },
                                {
                                    "source": "\n{{\n    {}\n    function innerFunction(arg) {\n    }\n}}\n\nif (true) {\n    const x = 10;\n}\n\nif (false) {\n    const y = 1;\n} else {\n    const y = 2;\n}\n\nconst lambda1 = (x) => x;\nconst flip1 = f => (x,y) => f(y,x);\n\nfunction lambda2(x){return x;}function flip2(f, x,y){return f(y,x)}\n\n\nfunction main() {\n    const s = 'hello world\\'\\n :D';\n    const n = 42\n    const id = x => x;\n    const toString = x => x.toString();\n    const const = x => y => x;\n    const hard  = f(res.value[0])(res.value[1])\n\n    return 3;\n}\n",
                                    "offset": 498,
                                    "data": "Cycle(root.value[1].data.$cache[491].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "498": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_id",
                                    "value": "return",
                                    "start": 498,
                                    "end": 504
                                },
                                {
                                    "source": "\n{{\n    {}\n    function innerFunction(arg) {\n    }\n}}\n\nif (true) {\n    const x = 10;\n}\n\nif (false) {\n    const y = 1;\n} else {\n    const y = 2;\n}\n\nconst lambda1 = (x) => x;\nconst flip1 = f => (x,y) => f(y,x);\n\nfunction lambda2(x){return x;}function flip2(f, x,y){return f(y,x)}\n\n\nfunction main() {\n    const s = 'hello world\\'\\n :D';\n    const n = 42\n    const id = x => x;\n    const toString = x => x.toString();\n    const const = x => y => x;\n    const hard  = f(res.value[0])(res.value[1])\n\n    return 3;\n}\n",
                                    "offset": 505,
                                    "data": "Cycle(root.value[1].data.$cache[498].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "505": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_number",
                                    "value": "3",
                                    "start": 505,
                                    "end": 506
                                },
                                {
                                    "source": "\n{{\n    {}\n    function innerFunction(arg) {\n    }\n}}\n\nif (true) {\n    const x = 10;\n}\n\nif (false) {\n    const y = 1;\n} else {\n    const y = 2;\n}\n\nconst lambda1 = (x) => x;\nconst flip1 = f => (x,y) => f(y,x);\n\nfunction lambda2(x){return x;}function flip2(f, x,y){return f(y,x)}\n\n\nfunction main() {\n    const s = 'hello world\\'\\n :D';\n    const n = 42\n    const id = x => x;\n    const toString = x => x.toString();\n    const const = x => y => x;\n    const hard  = f(res.value[0])(res.value[1])\n\n    return 3;\n}\n",
                                    "offset": 506,
                                    "data": "Cycle(root.value[1].data.$cache[505].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "506": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_punct",
                                    "value": ";",
                                    "start": 506,
                                    "end": 507
                                },
                                {
                                    "source": "\n{{\n    {}\n    function innerFunction(arg) {\n    }\n}}\n\nif (true) {\n    const x = 10;\n}\n\nif (false) {\n    const y = 1;\n} else {\n    const y = 2;\n}\n\nconst lambda1 = (x) => x;\nconst flip1 = f => (x,y) => f(y,x);\n\nfunction lambda2(x){return x;}function flip2(f, x,y){return f(y,x)}\n\n\nfunction main() {\n    const s = 'hello world\\'\\n :D';\n    const n = 42\n    const id = x => x;\n    const toString = x => x.toString();\n    const const = x => y => x;\n    const hard  = f(res.value[0])(res.value[1])\n\n    return 3;\n}\n",
                                    "offset": 508,
                                    "data": "Cycle(root.value[1].data.$cache[506].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "508": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_punct",
                                    "value": "}",
                                    "start": 508,
                                    "end": 509
                                },
                                "Cycle(root.value[1].data.$cache[508].value.value[1])"
                            ]
                        }
                    },
                    "510": {
                        "value": {
                            "kind": "left",
                            "value": {
                                "kind": "lex_error",
                                "message": "eos_reached",
                                "position": 510
                            }
                        }
                    }
                }
            }
        }
    ]
}

{
    "kind": "right",
    "value": [
        [
            {
                "kind": "function_decl",
                "name": "name",
                "params": [
                    "a",
                    "_"
                ],
                "body": {
                    "kind": "block_statement",
                    "statements": [
                        {
                            "kind": "return_statement",
                            "expr": {
                                "kind": "var_expr",
                                "name": "a"
                            }
                        }
                    ]
                }
            }
        ],
        {
            "source": "\n// This is a very important program //\n/* It tests comments! */\nfunction /*id*/ name(\n    /* A */ a,\n    /* B */ _  // ignored\n) {\n    return /**/a; // same as \"const\" in Haskell\n}\n",
            "offset": 182,
            "data": {
                "lineOffsetTable": [
                    [
                        0,
                        ""
                    ],
                    [
                        1,
                        "// This is a very important program //"
                    ],
                    [
                        40,
                        "/* It tests comments! */"
                    ],
                    [
                        65,
                        "function /*id*/ name("
                    ],
                    [
                        87,
                        "    /* A */ a,"
                    ],
                    [
                        102,
                        "    /* B */ _  // ignored"
                    ],
                    [
                        128,
                        ") {"
                    ],
                    [
                        132,
                        "    return /**/a; // same as \"const\" in Haskell"
                    ],
                    [
                        180,
                        "}"
                    ],
                    [
                        182,
                        ""
                    ]
                ],
                "$cache": {
                    "65": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_id",
                                    "value": "function",
                                    "start": 65,
                                    "end": 73
                                },
                                {
                                    "source": "\n// This is a very important program //\n/* It tests comments! */\nfunction /*id*/ name(\n    /* A */ a,\n    /* B */ _  // ignored\n) {\n    return /**/a; // same as \"const\" in Haskell\n}\n",
                                    "offset": 81,
                                    "data": "Cycle(root.value[1].data.$cache[65].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "81": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_id",
                                    "value": "name",
                                    "start": 81,
                                    "end": 85
                                },
                                {
                                    "source": "\n// This is a very important program //\n/* It tests comments! */\nfunction /*id*/ name(\n    /* A */ a,\n    /* B */ _  // ignored\n) {\n    return /**/a; // same as \"const\" in Haskell\n}\n",
                                    "offset": 85,
                                    "data": "Cycle(root.value[1].data.$cache[81].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "85": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_punct",
                                    "value": "(",
                                    "start": 85,
                                    "end": 86
                                },
                                {
                                    "source": "\n// This is a very important program //\n/* It tests comments! */\nfunction /*id*/ name(\n    /* A */ a,\n    /* B */ _  // ignored\n) {\n    return /**/a; // same as \"const\" in Haskell\n}\n",
                                    "offset": 99,
                                    "data": "Cycle(root.value[1].data.$cache[85].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "99": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_id",
                                    "value": "a",
                                    "start": 99,
                                    "end": 100
                                },
                                {
                                    "source": "\n// This is a very important program //\n/* It tests comments! */\nfunction /*id*/ name(\n    /* A */ a,\n    /* B */ _  // ignored\n) {\n    return /**/a; // same as \"const\" in Haskell\n}\n",
                                    "offset": 100,
                                    "data": "Cycle(root.value[1].data.$cache[99].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "100": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_punct",
                                    "value": ",",
                                    "start": 100,
                                    "end": 101
                                },
                                {
                                    "source": "\n// This is a very important program //\n/* It tests comments! */\nfunction /*id*/ name(\n    /* A */ a,\n    /* B */ _  // ignored\n) {\n    return /**/a; // same as \"const\" in Haskell\n}\n",
                                    "offset": 114,
                                    "data": "Cycle(root.value[1].data.$cache[100].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "114": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_id",
                                    "value": "_",
                                    "start": 114,
                                    "end": 115
                                },
                                {
                                    "source": "\n// This is a very important program //\n/* It tests comments! */\nfunction /*id*/ name(\n    /* A */ a,\n    /* B */ _  // ignored\n) {\n    return /**/a; // same as \"const\" in Haskell\n}\n",
                                    "offset": 128,
                                    "data": "Cycle(root.value[1].data.$cache[114].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "128": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_punct",
                                    "value": ")",
                                    "start": 128,
                                    "end": 129
                                },
                                {
                                    "source": "\n// This is a very important program //\n/* It tests comments! */\nfunction /*id*/ name(\n    /* A */ a,\n    /* B */ _  // ignored\n) {\n    return /**/a; // same as \"const\" in Haskell\n}\n",
                                    "offset": 130,
                                    "data": "Cycle(root.value[1].data.$cache[128].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "130": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_punct",
                                    "value": "{",
                                    "start": 130,
                                    "end": 131
                                },
                                {
                                    "source": "\n// This is a very important program //\n/* It tests comments! */\nfunction /*id*/ name(\n    /* A */ a,\n    /* B */ _  // ignored\n) {\n    return /**/a; // same as \"const\" in Haskell\n}\n",
                                    "offset": 136,
                                    "data": "Cycle(root.value[1].data.$cache[130].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "136": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_id",
                                    "value": "return",
                                    "start": 136,
                                    "end": 142
                                },
                                {
                                    "source": "\n// This is a very important program //\n/* It tests comments! */\nfunction /*id*/ name(\n    /* A */ a,\n    /* B */ _  // ignored\n) {\n    return /**/a; // same as \"const\" in Haskell\n}\n",
                                    "offset": 147,
                                    "data": "Cycle(root.value[1].data.$cache[136].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "147": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_id",
                                    "value": "a",
                                    "start": 147,
                                    "end": 148
                                },
                                {
                                    "source": "\n// This is a very important program //\n/* It tests comments! */\nfunction /*id*/ name(\n    /* A */ a,\n    /* B */ _  // ignored\n) {\n    return /**/a; // same as \"const\" in Haskell\n}\n",
                                    "offset": 148,
                                    "data": "Cycle(root.value[1].data.$cache[147].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "148": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_punct",
                                    "value": ";",
                                    "start": 148,
                                    "end": 149
                                },
                                {
                                    "source": "\n// This is a very important program //\n/* It tests comments! */\nfunction /*id*/ name(\n    /* A */ a,\n    /* B */ _  // ignored\n) {\n    return /**/a; // same as \"const\" in Haskell\n}\n",
                                    "offset": 180,
                                    "data": "Cycle(root.value[1].data.$cache[148].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "180": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_punct",
                                    "value": "}",
                                    "start": 180,
                                    "end": 181
                                },
                                "Cycle(root.value[1].data.$cache[180].value.value[1])"
                            ]
                        }
                    },
                    "182": {
                        "value": {
                            "kind": "left",
                            "value": {
                                "kind": "lex_error",
                                "message": "eos_reached",
                                "position": 182
                            }
                        }
                    }
                }
            }
        }
    ]
}

{
    "kind": "left",
    "value": {
        "kind": "lex_error",
        "message": "number_expected",
        "position": 0
    }
}

{
    "kind": "right",
    "value": [
        [
            {
                "kind": "expr_statement",
                "expr": {
                    "kind": "call_expr",
                    "fn": {
                        "kind": "member_expr",
                        "obj": {
                            "kind": "num_expr",
                            "value": 1
                        },
                        "prop": "toString"
                    },
                    "args": []
                }
            }
        ],
        {
            "source": "(1).toString()",
            "offset": 14,
            "data": {
                "lineOffsetTable": [
                    [
                        0,
                        "(1).toString()"
                    ]
                ],
                "$cache": {
                    "0": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_punct",
                                    "value": "(",
                                    "start": 0,
                                    "end": 1
                                },
                                {
                                    "source": "(1).toString()",
                                    "offset": 1,
                                    "data": "Cycle(root.value[1].data.$cache[\"0\"].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "1": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_number",
                                    "value": "1",
                                    "start": 1,
                                    "end": 2
                                },
                                {
                                    "source": "(1).toString()",
                                    "offset": 2,
                                    "data": "Cycle(root.value[1].data.$cache[1].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "2": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_punct",
                                    "value": ")",
                                    "start": 2,
                                    "end": 3
                                },
                                {
                                    "source": "(1).toString()",
                                    "offset": 3,
                                    "data": "Cycle(root.value[1].data.$cache[2].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "3": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_operator",
                                    "value": ".",
                                    "start": 3,
                                    "end": 4
                                },
                                {
                                    "source": "(1).toString()",
                                    "offset": 4,
                                    "data": "Cycle(root.value[1].data.$cache[3].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "4": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_id",
                                    "value": "toString",
                                    "start": 4,
                                    "end": 12
                                },
                                {
                                    "source": "(1).toString()",
                                    "offset": 12,
                                    "data": "Cycle(root.value[1].data.$cache[4].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "12": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_punct",
                                    "value": "(",
                                    "start": 12,
                                    "end": 13
                                },
                                {
                                    "source": "(1).toString()",
                                    "offset": 13,
                                    "data": "Cycle(root.value[1].data.$cache[12].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "13": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_punct",
                                    "value": ")",
                                    "start": 13,
                                    "end": 14
                                },
                                "Cycle(root.value[1].data.$cache[13].value.value[1])"
                            ]
                        }
                    },
                    "14": {
                        "value": {
                            "kind": "left",
                            "value": {
                                "kind": "lex_error",
                                "message": "eos_reached",
                                "position": 14
                            }
                        }
                    }
                }
            }
        }
    ]
}

{
    "kind": "right",
    "value": [
        [
            {
                "kind": "expr_statement",
                "expr": {
                    "kind": "member_expr",
                    "obj": {
                        "kind": "str_expr",
                        "value": "hello"
                    },
                    "prop": "length"
                }
            }
        ],
        {
            "source": "'hello'.length",
            "offset": 14,
            "data": {
                "lineOffsetTable": [
                    [
                        0,
                        "'hello'.length"
                    ]
                ],
                "$cache": {
                    "0": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_string",
                                    "value": "hello",
                                    "start": 0,
                                    "end": 7
                                },
                                {
                                    "source": "'hello'.length",
                                    "offset": 7,
                                    "data": "Cycle(root.value[1].data.$cache[\"0\"].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "7": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_operator",
                                    "value": ".",
                                    "start": 7,
                                    "end": 8
                                },
                                {
                                    "source": "'hello'.length",
                                    "offset": 8,
                                    "data": "Cycle(root.value[1].data.$cache[7].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "8": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_id",
                                    "value": "length",
                                    "start": 8,
                                    "end": 14
                                },
                                "Cycle(root.value[1].data.$cache[8].value.value[1])"
                            ]
                        }
                    },
                    "14": {
                        "value": {
                            "kind": "left",
                            "value": {
                                "kind": "lex_error",
                                "message": "eos_reached",
                                "position": 14
                            }
                        }
                    }
                }
            }
        }
    ]
}

{
    "kind": "right",
    "value": [
        [
            {
                "kind": "expr_statement",
                "expr": {
                    "kind": "call_expr",
                    "fn": {
                        "kind": "member_expr",
                        "obj": {
                            "kind": "array_expr",
                            "value": [
                                {
                                    "kind": "num_expr",
                                    "value": 1
                                },
                                {
                                    "kind": "num_expr",
                                    "value": 2
                                },
                                {
                                    "kind": "num_expr",
                                    "value": 3
                                }
                            ]
                        },
                        "prop": "map"
                    },
                    "args": [
                        {
                            "kind": "lambda_expr",
                            "params": [
                                "_"
                            ],
                            "body": {
                                "kind": "bool_expr",
                                "value": true
                            }
                        }
                    ]
                }
            }
        ],
        {
            "source": "[1, 2, 3].map(_ => true)",
            "offset": 24,
            "data": {
                "lineOffsetTable": [
                    [
                        0,
                        "[1, 2, 3].map(_ => true)"
                    ]
                ],
                "$cache": {
                    "0": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_punct",
                                    "value": "[",
                                    "start": 0,
                                    "end": 1
                                },
                                {
                                    "source": "[1, 2, 3].map(_ => true)",
                                    "offset": 1,
                                    "data": "Cycle(root.value[1].data.$cache[\"0\"].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "1": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_number",
                                    "value": "1",
                                    "start": 1,
                                    "end": 2
                                },
                                {
                                    "source": "[1, 2, 3].map(_ => true)",
                                    "offset": 2,
                                    "data": "Cycle(root.value[1].data.$cache[1].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "2": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_punct",
                                    "value": ",",
                                    "start": 2,
                                    "end": 3
                                },
                                {
                                    "source": "[1, 2, 3].map(_ => true)",
                                    "offset": 4,
                                    "data": "Cycle(root.value[1].data.$cache[2].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "4": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_number",
                                    "value": "2",
                                    "start": 4,
                                    "end": 5
                                },
                                {
                                    "source": "[1, 2, 3].map(_ => true)",
                                    "offset": 5,
                                    "data": "Cycle(root.value[1].data.$cache[4].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "5": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_punct",
                                    "value": ",",
                                    "start": 5,
                                    "end": 6
                                },
                                {
                                    "source": "[1, 2, 3].map(_ => true)",
                                    "offset": 7,
                                    "data": "Cycle(root.value[1].data.$cache[5].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "7": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_number",
                                    "value": "3",
                                    "start": 7,
                                    "end": 8
                                },
                                {
                                    "source": "[1, 2, 3].map(_ => true)",
                                    "offset": 8,
                                    "data": "Cycle(root.value[1].data.$cache[7].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "8": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_punct",
                                    "value": "]",
                                    "start": 8,
                                    "end": 9
                                },
                                {
                                    "source": "[1, 2, 3].map(_ => true)",
                                    "offset": 9,
                                    "data": "Cycle(root.value[1].data.$cache[8].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "9": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_operator",
                                    "value": ".",
                                    "start": 9,
                                    "end": 10
                                },
                                {
                                    "source": "[1, 2, 3].map(_ => true)",
                                    "offset": 10,
                                    "data": "Cycle(root.value[1].data.$cache[9].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "10": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_id",
                                    "value": "map",
                                    "start": 10,
                                    "end": 13
                                },
                                {
                                    "source": "[1, 2, 3].map(_ => true)",
                                    "offset": 13,
                                    "data": "Cycle(root.value[1].data.$cache[10].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "13": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_punct",
                                    "value": "(",
                                    "start": 13,
                                    "end": 14
                                },
                                {
                                    "source": "[1, 2, 3].map(_ => true)",
                                    "offset": 14,
                                    "data": "Cycle(root.value[1].data.$cache[13].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "14": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_id",
                                    "value": "_",
                                    "start": 14,
                                    "end": 15
                                },
                                {
                                    "source": "[1, 2, 3].map(_ => true)",
                                    "offset": 16,
                                    "data": "Cycle(root.value[1].data.$cache[14].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "16": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_operator",
                                    "value": "=>",
                                    "start": 16,
                                    "end": 18
                                },
                                {
                                    "source": "[1, 2, 3].map(_ => true)",
                                    "offset": 19,
                                    "data": "Cycle(root.value[1].data.$cache[16].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "19": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_id",
                                    "value": "true",
                                    "start": 19,
                                    "end": 23
                                },
                                {
                                    "source": "[1, 2, 3].map(_ => true)",
                                    "offset": 23,
                                    "data": "Cycle(root.value[1].data.$cache[19].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "23": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_punct",
                                    "value": ")",
                                    "start": 23,
                                    "end": 24
                                },
                                "Cycle(root.value[1].data.$cache[23].value.value[1])"
                            ]
                        }
                    },
                    "24": {
                        "value": {
                            "kind": "left",
                            "value": {
                                "kind": "lex_error",
                                "message": "eos_reached",
                                "position": 24
                            }
                        }
                    }
                }
            }
        }
    ]
}

{
    "kind": "right",
    "value": [
        [
            {
                "kind": "expr_statement",
                "expr": {
                    "kind": "object_expr",
                    "value": [
                        [
                            "key",
                            {
                                "kind": "str_expr",
                                "value": "value"
                            }
                        ],
                        [
                            "prop",
                            {
                                "kind": "num_expr",
                                "value": 5
                            }
                        ]
                    ]
                }
            }
        ],
        {
            "source": "({ key: 'value', 'prop': 5 })",
            "offset": 29,
            "data": {
                "lineOffsetTable": [
                    [
                        0,
                        "({ key: 'value', 'prop': 5 })"
                    ]
                ],
                "$cache": {
                    "0": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_punct",
                                    "value": "(",
                                    "start": 0,
                                    "end": 1
                                },
                                {
                                    "source": "({ key: 'value', 'prop': 5 })",
                                    "offset": 1,
                                    "data": "Cycle(root.value[1].data.$cache[\"0\"].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "1": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_punct",
                                    "value": "{",
                                    "start": 1,
                                    "end": 2
                                },
                                {
                                    "source": "({ key: 'value', 'prop': 5 })",
                                    "offset": 3,
                                    "data": "Cycle(root.value[1].data.$cache[1].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "3": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_id",
                                    "value": "key",
                                    "start": 3,
                                    "end": 6
                                },
                                {
                                    "source": "({ key: 'value', 'prop': 5 })",
                                    "offset": 6,
                                    "data": "Cycle(root.value[1].data.$cache[3].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "6": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_operator",
                                    "value": ":",
                                    "start": 6,
                                    "end": 7
                                },
                                {
                                    "source": "({ key: 'value', 'prop': 5 })",
                                    "offset": 8,
                                    "data": "Cycle(root.value[1].data.$cache[6].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "8": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_string",
                                    "value": "value",
                                    "start": 8,
                                    "end": 15
                                },
                                {
                                    "source": "({ key: 'value', 'prop': 5 })",
                                    "offset": 15,
                                    "data": "Cycle(root.value[1].data.$cache[8].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "15": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_punct",
                                    "value": ",",
                                    "start": 15,
                                    "end": 16
                                },
                                {
                                    "source": "({ key: 'value', 'prop': 5 })",
                                    "offset": 17,
                                    "data": "Cycle(root.value[1].data.$cache[15].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "17": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_string",
                                    "value": "prop",
                                    "start": 17,
                                    "end": 23
                                },
                                {
                                    "source": "({ key: 'value', 'prop': 5 })",
                                    "offset": 23,
                                    "data": "Cycle(root.value[1].data.$cache[17].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "23": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_operator",
                                    "value": ":",
                                    "start": 23,
                                    "end": 24
                                },
                                {
                                    "source": "({ key: 'value', 'prop': 5 })",
                                    "offset": 25,
                                    "data": "Cycle(root.value[1].data.$cache[23].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "25": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_number",
                                    "value": "5",
                                    "start": 25,
                                    "end": 26
                                },
                                {
                                    "source": "({ key: 'value', 'prop': 5 })",
                                    "offset": 27,
                                    "data": "Cycle(root.value[1].data.$cache[25].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "27": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_punct",
                                    "value": "}",
                                    "start": 27,
                                    "end": 28
                                },
                                {
                                    "source": "({ key: 'value', 'prop': 5 })",
                                    "offset": 28,
                                    "data": "Cycle(root.value[1].data.$cache[27].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "28": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_punct",
                                    "value": ")",
                                    "start": 28,
                                    "end": 29
                                },
                                "Cycle(root.value[1].data.$cache[28].value.value[1])"
                            ]
                        }
                    },
                    "29": {
                        "value": {
                            "kind": "left",
                            "value": {
                                "kind": "lex_error",
                                "message": "eos_reached",
                                "position": 29
                            }
                        }
                    }
                }
            }
        }
    ]
}

{
    "kind": "right",
    "value": [
        [
            {
                "kind": "const_decl",
                "name": "x",
                "expr": {
                    "kind": "array_expr",
                    "value": [
                        {
                            "kind": "num_expr",
                            "value": 1
                        },
                        {
                            "kind": "num_expr",
                            "value": 2
                        },
                        {
                            "kind": "num_expr",
                            "value": 3
                        }
                    ]
                }
            },
            {
                "kind": "expr_statement",
                "expr": {
                    "kind": "index_expr",
                    "obj": {
                        "kind": "var_expr",
                        "name": "x"
                    },
                    "index": {
                        "kind": "num_expr",
                        "value": 5
                    }
                }
            }
        ],
        {
            "source": "const x = [1, 2, 3]; x[5];",
            "offset": 26,
            "data": {
                "lineOffsetTable": [
                    [
                        0,
                        "const x = [1, 2, 3]; x[5];"
                    ]
                ],
                "$cache": {
                    "0": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_id",
                                    "value": "const",
                                    "start": 0,
                                    "end": 5
                                },
                                {
                                    "source": "const x = [1, 2, 3]; x[5];",
                                    "offset": 6,
                                    "data": "Cycle(root.value[1].data.$cache[\"0\"].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "6": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_id",
                                    "value": "x",
                                    "start": 6,
                                    "end": 7
                                },
                                {
                                    "source": "const x = [1, 2, 3]; x[5];",
                                    "offset": 8,
                                    "data": "Cycle(root.value[1].data.$cache[6].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "8": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_operator",
                                    "value": "=",
                                    "start": 8,
                                    "end": 9
                                },
                                {
                                    "source": "const x = [1, 2, 3]; x[5];",
                                    "offset": 10,
                                    "data": "Cycle(root.value[1].data.$cache[8].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "10": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_punct",
                                    "value": "[",
                                    "start": 10,
                                    "end": 11
                                },
                                {
                                    "source": "const x = [1, 2, 3]; x[5];",
                                    "offset": 11,
                                    "data": "Cycle(root.value[1].data.$cache[10].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "11": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_number",
                                    "value": "1",
                                    "start": 11,
                                    "end": 12
                                },
                                {
                                    "source": "const x = [1, 2, 3]; x[5];",
                                    "offset": 12,
                                    "data": "Cycle(root.value[1].data.$cache[11].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "12": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_punct",
                                    "value": ",",
                                    "start": 12,
                                    "end": 13
                                },
                                {
                                    "source": "const x = [1, 2, 3]; x[5];",
                                    "offset": 14,
                                    "data": "Cycle(root.value[1].data.$cache[12].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "14": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_number",
                                    "value": "2",
                                    "start": 14,
                                    "end": 15
                                },
                                {
                                    "source": "const x = [1, 2, 3]; x[5];",
                                    "offset": 15,
                                    "data": "Cycle(root.value[1].data.$cache[14].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "15": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_punct",
                                    "value": ",",
                                    "start": 15,
                                    "end": 16
                                },
                                {
                                    "source": "const x = [1, 2, 3]; x[5];",
                                    "offset": 17,
                                    "data": "Cycle(root.value[1].data.$cache[15].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "17": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_number",
                                    "value": "3",
                                    "start": 17,
                                    "end": 18
                                },
                                {
                                    "source": "const x = [1, 2, 3]; x[5];",
                                    "offset": 18,
                                    "data": "Cycle(root.value[1].data.$cache[17].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "18": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_punct",
                                    "value": "]",
                                    "start": 18,
                                    "end": 19
                                },
                                {
                                    "source": "const x = [1, 2, 3]; x[5];",
                                    "offset": 19,
                                    "data": "Cycle(root.value[1].data.$cache[18].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "19": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_punct",
                                    "value": ";",
                                    "start": 19,
                                    "end": 20
                                },
                                {
                                    "source": "const x = [1, 2, 3]; x[5];",
                                    "offset": 21,
                                    "data": "Cycle(root.value[1].data.$cache[19].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "21": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_id",
                                    "value": "x",
                                    "start": 21,
                                    "end": 22
                                },
                                {
                                    "source": "const x = [1, 2, 3]; x[5];",
                                    "offset": 22,
                                    "data": "Cycle(root.value[1].data.$cache[21].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "22": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_punct",
                                    "value": "[",
                                    "start": 22,
                                    "end": 23
                                },
                                {
                                    "source": "const x = [1, 2, 3]; x[5];",
                                    "offset": 23,
                                    "data": "Cycle(root.value[1].data.$cache[22].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "23": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_number",
                                    "value": "5",
                                    "start": 23,
                                    "end": 24
                                },
                                {
                                    "source": "const x = [1, 2, 3]; x[5];",
                                    "offset": 24,
                                    "data": "Cycle(root.value[1].data.$cache[23].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "24": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_punct",
                                    "value": "]",
                                    "start": 24,
                                    "end": 25
                                },
                                {
                                    "source": "const x = [1, 2, 3]; x[5];",
                                    "offset": 25,
                                    "data": "Cycle(root.value[1].data.$cache[24].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "25": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_punct",
                                    "value": ";",
                                    "start": 25,
                                    "end": 26
                                },
                                "Cycle(root.value[1].data.$cache[25].value.value[1])"
                            ]
                        }
                    }
                }
            }
        }
    ]
}

{
    "kind": "right",
    "value": [
        [
            {
                "kind": "expr_statement",
                "expr": {
                    "kind": "binary_expr",
                    "op": "+",
                    "left": {
                        "kind": "binary_expr",
                        "op": "+",
                        "left": {
                            "kind": "num_expr",
                            "value": 1
                        },
                        "right": {
                            "kind": "num_expr",
                            "value": 2
                        }
                    },
                    "right": {
                        "kind": "binary_expr",
                        "op": "*",
                        "left": {
                            "kind": "num_expr",
                            "value": 3
                        },
                        "right": {
                            "kind": "num_expr",
                            "value": 4
                        }
                    }
                }
            }
        ],
        {
            "source": "1 + 2 + 3 * 4;",
            "offset": 14,
            "data": {
                "lineOffsetTable": [
                    [
                        0,
                        "1 + 2 + 3 * 4;"
                    ]
                ],
                "$cache": {
                    "0": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_number",
                                    "value": "1",
                                    "start": 0,
                                    "end": 1
                                },
                                {
                                    "source": "1 + 2 + 3 * 4;",
                                    "offset": 2,
                                    "data": "Cycle(root.value[1].data.$cache[\"0\"].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "2": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_operator",
                                    "value": "+",
                                    "start": 2,
                                    "end": 3
                                },
                                {
                                    "source": "1 + 2 + 3 * 4;",
                                    "offset": 4,
                                    "data": "Cycle(root.value[1].data.$cache[2].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "4": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_number",
                                    "value": "2",
                                    "start": 4,
                                    "end": 5
                                },
                                {
                                    "source": "1 + 2 + 3 * 4;",
                                    "offset": 6,
                                    "data": "Cycle(root.value[1].data.$cache[4].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "6": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_operator",
                                    "value": "+",
                                    "start": 6,
                                    "end": 7
                                },
                                {
                                    "source": "1 + 2 + 3 * 4;",
                                    "offset": 8,
                                    "data": "Cycle(root.value[1].data.$cache[6].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "8": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_number",
                                    "value": "3",
                                    "start": 8,
                                    "end": 9
                                },
                                {
                                    "source": "1 + 2 + 3 * 4;",
                                    "offset": 10,
                                    "data": "Cycle(root.value[1].data.$cache[8].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "10": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_operator",
                                    "value": "*",
                                    "start": 10,
                                    "end": 11
                                },
                                {
                                    "source": "1 + 2 + 3 * 4;",
                                    "offset": 12,
                                    "data": "Cycle(root.value[1].data.$cache[10].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "12": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_number",
                                    "value": "4",
                                    "start": 12,
                                    "end": 13
                                },
                                {
                                    "source": "1 + 2 + 3 * 4;",
                                    "offset": 13,
                                    "data": "Cycle(root.value[1].data.$cache[12].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "13": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_punct",
                                    "value": ";",
                                    "start": 13,
                                    "end": 14
                                },
                                "Cycle(root.value[1].data.$cache[13].value.value[1])"
                            ]
                        }
                    }
                }
            }
        }
    ]
}

{
    "kind": "right",
    "value": [
        [
            {
                "kind": "expr_statement",
                "expr": {
                    "kind": "binary_expr",
                    "op": "||",
                    "left": {
                        "kind": "unary_expr",
                        "op": "-",
                        "expr": {
                            "kind": "unary_expr",
                            "op": "!",
                            "expr": {
                                "kind": "unary_expr",
                                "op": "-",
                                "expr": {
                                    "kind": "num_expr",
                                    "value": 1
                                }
                            }
                        }
                    },
                    "right": {
                        "kind": "binary_expr",
                        "op": "&&",
                        "left": {
                            "kind": "num_expr",
                            "value": 3
                        },
                        "right": {
                            "kind": "binary_expr",
                            "op": "+",
                            "left": {
                                "kind": "num_expr",
                                "value": 1
                            },
                            "right": {
                                "kind": "num_expr",
                                "value": 2
                            }
                        }
                    }
                }
            }
        ],
        {
            "source": "- !-1 || 3 && 1 + 2",
            "offset": 19,
            "data": {
                "lineOffsetTable": [
                    [
                        0,
                        "- !-1 || 3 && 1 + 2"
                    ]
                ],
                "$cache": {
                    "0": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_operator",
                                    "value": "-",
                                    "start": 0,
                                    "end": 1
                                },
                                {
                                    "source": "- !-1 || 3 && 1 + 2",
                                    "offset": 2,
                                    "data": "Cycle(root.value[1].data.$cache[\"0\"].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "2": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_operator",
                                    "value": "!",
                                    "start": 2,
                                    "end": 3
                                },
                                {
                                    "source": "- !-1 || 3 && 1 + 2",
                                    "offset": 3,
                                    "data": "Cycle(root.value[1].data.$cache[2].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "3": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_operator",
                                    "value": "-",
                                    "start": 3,
                                    "end": 4
                                },
                                {
                                    "source": "- !-1 || 3 && 1 + 2",
                                    "offset": 4,
                                    "data": "Cycle(root.value[1].data.$cache[3].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "4": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_number",
                                    "value": "1",
                                    "start": 4,
                                    "end": 5
                                },
                                {
                                    "source": "- !-1 || 3 && 1 + 2",
                                    "offset": 6,
                                    "data": "Cycle(root.value[1].data.$cache[4].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "6": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_operator",
                                    "value": "||",
                                    "start": 6,
                                    "end": 8
                                },
                                {
                                    "source": "- !-1 || 3 && 1 + 2",
                                    "offset": 9,
                                    "data": "Cycle(root.value[1].data.$cache[6].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "9": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_number",
                                    "value": "3",
                                    "start": 9,
                                    "end": 10
                                },
                                {
                                    "source": "- !-1 || 3 && 1 + 2",
                                    "offset": 11,
                                    "data": "Cycle(root.value[1].data.$cache[9].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "11": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_operator",
                                    "value": "&&",
                                    "start": 11,
                                    "end": 13
                                },
                                {
                                    "source": "- !-1 || 3 && 1 + 2",
                                    "offset": 14,
                                    "data": "Cycle(root.value[1].data.$cache[11].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "14": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_number",
                                    "value": "1",
                                    "start": 14,
                                    "end": 15
                                },
                                {
                                    "source": "- !-1 || 3 && 1 + 2",
                                    "offset": 16,
                                    "data": "Cycle(root.value[1].data.$cache[14].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "16": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_operator",
                                    "value": "+",
                                    "start": 16,
                                    "end": 17
                                },
                                {
                                    "source": "- !-1 || 3 && 1 + 2",
                                    "offset": 18,
                                    "data": "Cycle(root.value[1].data.$cache[16].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "18": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_number",
                                    "value": "2",
                                    "start": 18,
                                    "end": 19
                                },
                                "Cycle(root.value[1].data.$cache[18].value.value[1])"
                            ]
                        }
                    },
                    "19": {
                        "value": {
                            "kind": "left",
                            "value": {
                                "kind": "lex_error",
                                "message": "eos_reached",
                                "position": 19
                            }
                        }
                    }
                }
            }
        }
    ]
}

{
    "kind": "right",
    "value": [
        [
            {
                "kind": "expr_statement",
                "expr": {
                    "kind": "ternary_expr",
                    "cond": {
                        "kind": "bool_expr",
                        "value": true
                    },
                    "ifTrue": {
                        "kind": "num_expr",
                        "value": 1
                    },
                    "ifFalse": {
                        "kind": "num_expr",
                        "value": 2
                    }
                }
            }
        ],
        {
            "source": "true ? 1 : 2",
            "offset": 12,
            "data": {
                "lineOffsetTable": [
                    [
                        0,
                        "true ? 1 : 2"
                    ]
                ],
                "$cache": {
                    "0": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_id",
                                    "value": "true",
                                    "start": 0,
                                    "end": 4
                                },
                                {
                                    "source": "true ? 1 : 2",
                                    "offset": 5,
                                    "data": "Cycle(root.value[1].data.$cache[\"0\"].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "5": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_operator",
                                    "value": "?",
                                    "start": 5,
                                    "end": 6
                                },
                                {
                                    "source": "true ? 1 : 2",
                                    "offset": 7,
                                    "data": "Cycle(root.value[1].data.$cache[5].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "7": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_number",
                                    "value": "1",
                                    "start": 7,
                                    "end": 8
                                },
                                {
                                    "source": "true ? 1 : 2",
                                    "offset": 9,
                                    "data": "Cycle(root.value[1].data.$cache[7].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "9": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_operator",
                                    "value": ":",
                                    "start": 9,
                                    "end": 10
                                },
                                {
                                    "source": "true ? 1 : 2",
                                    "offset": 11,
                                    "data": "Cycle(root.value[1].data.$cache[9].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "11": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_number",
                                    "value": "2",
                                    "start": 11,
                                    "end": 12
                                },
                                "Cycle(root.value[1].data.$cache[11].value.value[1])"
                            ]
                        }
                    },
                    "12": {
                        "value": {
                            "kind": "left",
                            "value": {
                                "kind": "lex_error",
                                "message": "eos_reached",
                                "position": 12
                            }
                        }
                    }
                }
            }
        }
    ]
}

{
    "kind": "right",
    "value": [
        [
            {
                "kind": "expr_statement",
                "expr": {
                    "kind": "ternary_expr",
                    "cond": {
                        "kind": "binary_expr",
                        "op": "||",
                        "left": {
                            "kind": "var_expr",
                            "name": "a"
                        },
                        "right": {
                            "kind": "var_expr",
                            "name": "b"
                        }
                    },
                    "ifTrue": {
                        "kind": "ternary_expr",
                        "cond": {
                            "kind": "var_expr",
                            "name": "a"
                        },
                        "ifTrue": {
                            "kind": "binary_expr",
                            "op": "*",
                            "left": {
                                "kind": "num_expr",
                                "value": 1
                            },
                            "right": {
                                "kind": "num_expr",
                                "value": 2
                            }
                        },
                        "ifFalse": {
                            "kind": "str_expr",
                            "value": "hello"
                        }
                    },
                    "ifFalse": {
                        "kind": "ternary_expr",
                        "cond": {
                            "kind": "var_expr",
                            "name": "b"
                        },
                        "ifTrue": {
                            "kind": "call_expr",
                            "fn": {
                                "kind": "var_expr",
                                "name": "f"
                            },
                            "args": [
                                {
                                    "kind": "num_expr",
                                    "value": 10
                                }
                            ]
                        },
                        "ifFalse": {
                            "kind": "member_expr",
                            "obj": {
                                "kind": "var_expr",
                                "name": "o"
                            },
                            "prop": "p"
                        }
                    }
                }
            }
        ],
        {
            "source": "a || b ? a ? 1 * 2 : 'hello' : b ? f(10) : o.p",
            "offset": 46,
            "data": {
                "lineOffsetTable": [
                    [
                        0,
                        "a || b ? a ? 1 * 2 : 'hello' : b ? f(10) : o.p"
                    ]
                ],
                "$cache": {
                    "0": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_id",
                                    "value": "a",
                                    "start": 0,
                                    "end": 1
                                },
                                {
                                    "source": "a || b ? a ? 1 * 2 : 'hello' : b ? f(10) : o.p",
                                    "offset": 2,
                                    "data": "Cycle(root.value[1].data.$cache[\"0\"].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "2": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_operator",
                                    "value": "||",
                                    "start": 2,
                                    "end": 4
                                },
                                {
                                    "source": "a || b ? a ? 1 * 2 : 'hello' : b ? f(10) : o.p",
                                    "offset": 5,
                                    "data": "Cycle(root.value[1].data.$cache[2].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "5": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_id",
                                    "value": "b",
                                    "start": 5,
                                    "end": 6
                                },
                                {
                                    "source": "a || b ? a ? 1 * 2 : 'hello' : b ? f(10) : o.p",
                                    "offset": 7,
                                    "data": "Cycle(root.value[1].data.$cache[5].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "7": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_operator",
                                    "value": "?",
                                    "start": 7,
                                    "end": 8
                                },
                                {
                                    "source": "a || b ? a ? 1 * 2 : 'hello' : b ? f(10) : o.p",
                                    "offset": 9,
                                    "data": "Cycle(root.value[1].data.$cache[7].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "9": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_id",
                                    "value": "a",
                                    "start": 9,
                                    "end": 10
                                },
                                {
                                    "source": "a || b ? a ? 1 * 2 : 'hello' : b ? f(10) : o.p",
                                    "offset": 11,
                                    "data": "Cycle(root.value[1].data.$cache[9].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "11": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_operator",
                                    "value": "?",
                                    "start": 11,
                                    "end": 12
                                },
                                {
                                    "source": "a || b ? a ? 1 * 2 : 'hello' : b ? f(10) : o.p",
                                    "offset": 13,
                                    "data": "Cycle(root.value[1].data.$cache[11].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "13": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_number",
                                    "value": "1",
                                    "start": 13,
                                    "end": 14
                                },
                                {
                                    "source": "a || b ? a ? 1 * 2 : 'hello' : b ? f(10) : o.p",
                                    "offset": 15,
                                    "data": "Cycle(root.value[1].data.$cache[13].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "15": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_operator",
                                    "value": "*",
                                    "start": 15,
                                    "end": 16
                                },
                                {
                                    "source": "a || b ? a ? 1 * 2 : 'hello' : b ? f(10) : o.p",
                                    "offset": 17,
                                    "data": "Cycle(root.value[1].data.$cache[15].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "17": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_number",
                                    "value": "2",
                                    "start": 17,
                                    "end": 18
                                },
                                {
                                    "source": "a || b ? a ? 1 * 2 : 'hello' : b ? f(10) : o.p",
                                    "offset": 19,
                                    "data": "Cycle(root.value[1].data.$cache[17].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "19": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_operator",
                                    "value": ":",
                                    "start": 19,
                                    "end": 20
                                },
                                {
                                    "source": "a || b ? a ? 1 * 2 : 'hello' : b ? f(10) : o.p",
                                    "offset": 21,
                                    "data": "Cycle(root.value[1].data.$cache[19].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "21": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_string",
                                    "value": "hello",
                                    "start": 21,
                                    "end": 28
                                },
                                {
                                    "source": "a || b ? a ? 1 * 2 : 'hello' : b ? f(10) : o.p",
                                    "offset": 29,
                                    "data": "Cycle(root.value[1].data.$cache[21].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "29": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_operator",
                                    "value": ":",
                                    "start": 29,
                                    "end": 30
                                },
                                {
                                    "source": "a || b ? a ? 1 * 2 : 'hello' : b ? f(10) : o.p",
                                    "offset": 31,
                                    "data": "Cycle(root.value[1].data.$cache[29].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "31": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_id",
                                    "value": "b",
                                    "start": 31,
                                    "end": 32
                                },
                                {
                                    "source": "a || b ? a ? 1 * 2 : 'hello' : b ? f(10) : o.p",
                                    "offset": 33,
                                    "data": "Cycle(root.value[1].data.$cache[31].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "33": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_operator",
                                    "value": "?",
                                    "start": 33,
                                    "end": 34
                                },
                                {
                                    "source": "a || b ? a ? 1 * 2 : 'hello' : b ? f(10) : o.p",
                                    "offset": 35,
                                    "data": "Cycle(root.value[1].data.$cache[33].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "35": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_id",
                                    "value": "f",
                                    "start": 35,
                                    "end": 36
                                },
                                {
                                    "source": "a || b ? a ? 1 * 2 : 'hello' : b ? f(10) : o.p",
                                    "offset": 36,
                                    "data": "Cycle(root.value[1].data.$cache[35].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "36": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_punct",
                                    "value": "(",
                                    "start": 36,
                                    "end": 37
                                },
                                {
                                    "source": "a || b ? a ? 1 * 2 : 'hello' : b ? f(10) : o.p",
                                    "offset": 37,
                                    "data": "Cycle(root.value[1].data.$cache[36].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "37": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_number",
                                    "value": "10",
                                    "start": 37,
                                    "end": 39
                                },
                                {
                                    "source": "a || b ? a ? 1 * 2 : 'hello' : b ? f(10) : o.p",
                                    "offset": 39,
                                    "data": "Cycle(root.value[1].data.$cache[37].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "39": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_punct",
                                    "value": ")",
                                    "start": 39,
                                    "end": 40
                                },
                                {
                                    "source": "a || b ? a ? 1 * 2 : 'hello' : b ? f(10) : o.p",
                                    "offset": 41,
                                    "data": "Cycle(root.value[1].data.$cache[39].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "41": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_operator",
                                    "value": ":",
                                    "start": 41,
                                    "end": 42
                                },
                                {
                                    "source": "a || b ? a ? 1 * 2 : 'hello' : b ? f(10) : o.p",
                                    "offset": 43,
                                    "data": "Cycle(root.value[1].data.$cache[41].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "43": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_id",
                                    "value": "o",
                                    "start": 43,
                                    "end": 44
                                },
                                {
                                    "source": "a || b ? a ? 1 * 2 : 'hello' : b ? f(10) : o.p",
                                    "offset": 44,
                                    "data": "Cycle(root.value[1].data.$cache[43].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "44": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_operator",
                                    "value": ".",
                                    "start": 44,
                                    "end": 45
                                },
                                {
                                    "source": "a || b ? a ? 1 * 2 : 'hello' : b ? f(10) : o.p",
                                    "offset": 45,
                                    "data": "Cycle(root.value[1].data.$cache[44].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "45": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_id",
                                    "value": "p",
                                    "start": 45,
                                    "end": 46
                                },
                                "Cycle(root.value[1].data.$cache[45].value.value[1])"
                            ]
                        }
                    },
                    "46": {
                        "value": {
                            "kind": "left",
                            "value": {
                                "kind": "lex_error",
                                "message": "eos_reached",
                                "position": 46
                            }
                        }
                    }
                }
            }
        }
    ]
}

{
    "kind": "right",
    "value": [
        [
            {
                "kind": "expr_statement",
                "expr": {
                    "kind": "ternary_expr",
                    "cond": {
                        "kind": "ternary_expr",
                        "cond": {
                            "kind": "bool_expr",
                            "value": true
                        },
                        "ifTrue": {
                            "kind": "bool_expr",
                            "value": false
                        },
                        "ifFalse": {
                            "kind": "bool_expr",
                            "value": true
                        }
                    },
                    "ifTrue": {
                        "kind": "str_expr",
                        "value": "no"
                    },
                    "ifFalse": {
                        "kind": "str_expr",
                        "value": "yes"
                    }
                }
            }
        ],
        {
            "source": "(true ? false : true) ? 'no' : 'yes'",
            "offset": 36,
            "data": {
                "lineOffsetTable": [
                    [
                        0,
                        "(true ? false : true) ? 'no' : 'yes'"
                    ]
                ],
                "$cache": {
                    "0": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_punct",
                                    "value": "(",
                                    "start": 0,
                                    "end": 1
                                },
                                {
                                    "source": "(true ? false : true) ? 'no' : 'yes'",
                                    "offset": 1,
                                    "data": "Cycle(root.value[1].data.$cache[\"0\"].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "1": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_id",
                                    "value": "true",
                                    "start": 1,
                                    "end": 5
                                },
                                {
                                    "source": "(true ? false : true) ? 'no' : 'yes'",
                                    "offset": 6,
                                    "data": "Cycle(root.value[1].data.$cache[1].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "6": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_operator",
                                    "value": "?",
                                    "start": 6,
                                    "end": 7
                                },
                                {
                                    "source": "(true ? false : true) ? 'no' : 'yes'",
                                    "offset": 8,
                                    "data": "Cycle(root.value[1].data.$cache[6].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "8": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_id",
                                    "value": "false",
                                    "start": 8,
                                    "end": 13
                                },
                                {
                                    "source": "(true ? false : true) ? 'no' : 'yes'",
                                    "offset": 14,
                                    "data": "Cycle(root.value[1].data.$cache[8].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "14": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_operator",
                                    "value": ":",
                                    "start": 14,
                                    "end": 15
                                },
                                {
                                    "source": "(true ? false : true) ? 'no' : 'yes'",
                                    "offset": 16,
                                    "data": "Cycle(root.value[1].data.$cache[14].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "16": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_id",
                                    "value": "true",
                                    "start": 16,
                                    "end": 20
                                },
                                {
                                    "source": "(true ? false : true) ? 'no' : 'yes'",
                                    "offset": 20,
                                    "data": "Cycle(root.value[1].data.$cache[16].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "20": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_punct",
                                    "value": ")",
                                    "start": 20,
                                    "end": 21
                                },
                                {
                                    "source": "(true ? false : true) ? 'no' : 'yes'",
                                    "offset": 22,
                                    "data": "Cycle(root.value[1].data.$cache[20].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "22": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_operator",
                                    "value": "?",
                                    "start": 22,
                                    "end": 23
                                },
                                {
                                    "source": "(true ? false : true) ? 'no' : 'yes'",
                                    "offset": 24,
                                    "data": "Cycle(root.value[1].data.$cache[22].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "24": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_string",
                                    "value": "no",
                                    "start": 24,
                                    "end": 28
                                },
                                {
                                    "source": "(true ? false : true) ? 'no' : 'yes'",
                                    "offset": 29,
                                    "data": "Cycle(root.value[1].data.$cache[24].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "29": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_operator",
                                    "value": ":",
                                    "start": 29,
                                    "end": 30
                                },
                                {
                                    "source": "(true ? false : true) ? 'no' : 'yes'",
                                    "offset": 31,
                                    "data": "Cycle(root.value[1].data.$cache[29].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "31": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_string",
                                    "value": "yes",
                                    "start": 31,
                                    "end": 36
                                },
                                "Cycle(root.value[1].data.$cache[31].value.value[1])"
                            ]
                        }
                    },
                    "36": {
                        "value": {
                            "kind": "left",
                            "value": {
                                "kind": "lex_error",
                                "message": "eos_reached",
                                "position": 36
                            }
                        }
                    }
                }
            }
        }
    ]
}

{
    "kind": "right",
    "value": [
        [
            {
                "kind": "expr_statement",
                "expr": {
                    "kind": "binary_expr",
                    "op": "%",
                    "left": {
                        "kind": "binary_expr",
                        "op": "/",
                        "left": {
                            "kind": "binary_expr",
                            "op": "*",
                            "left": {
                                "kind": "num_expr",
                                "value": 1
                            },
                            "right": {
                                "kind": "num_expr",
                                "value": 2
                            }
                        },
                        "right": {
                            "kind": "num_expr",
                            "value": 2
                        }
                    },
                    "right": {
                        "kind": "num_expr",
                        "value": 1
                    }
                }
            }
        ],
        {
            "source": "1 * 2 / 2 % 1",
            "offset": 13,
            "data": {
                "lineOffsetTable": [
                    [
                        0,
                        "1 * 2 / 2 % 1"
                    ]
                ],
                "$cache": {
                    "0": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_number",
                                    "value": "1",
                                    "start": 0,
                                    "end": 1
                                },
                                {
                                    "source": "1 * 2 / 2 % 1",
                                    "offset": 2,
                                    "data": "Cycle(root.value[1].data.$cache[\"0\"].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "2": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_operator",
                                    "value": "*",
                                    "start": 2,
                                    "end": 3
                                },
                                {
                                    "source": "1 * 2 / 2 % 1",
                                    "offset": 4,
                                    "data": "Cycle(root.value[1].data.$cache[2].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "4": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_number",
                                    "value": "2",
                                    "start": 4,
                                    "end": 5
                                },
                                {
                                    "source": "1 * 2 / 2 % 1",
                                    "offset": 6,
                                    "data": "Cycle(root.value[1].data.$cache[4].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "6": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_operator",
                                    "value": "/",
                                    "start": 6,
                                    "end": 7
                                },
                                {
                                    "source": "1 * 2 / 2 % 1",
                                    "offset": 8,
                                    "data": "Cycle(root.value[1].data.$cache[6].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "8": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_number",
                                    "value": "2",
                                    "start": 8,
                                    "end": 9
                                },
                                {
                                    "source": "1 * 2 / 2 % 1",
                                    "offset": 10,
                                    "data": "Cycle(root.value[1].data.$cache[8].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "10": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_operator",
                                    "value": "%",
                                    "start": 10,
                                    "end": 11
                                },
                                {
                                    "source": "1 * 2 / 2 % 1",
                                    "offset": 12,
                                    "data": "Cycle(root.value[1].data.$cache[10].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "12": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_number",
                                    "value": "1",
                                    "start": 12,
                                    "end": 13
                                },
                                "Cycle(root.value[1].data.$cache[12].value.value[1])"
                            ]
                        }
                    },
                    "13": {
                        "value": {
                            "kind": "left",
                            "value": {
                                "kind": "lex_error",
                                "message": "eos_reached",
                                "position": 13
                            }
                        }
                    }
                }
            }
        }
    ]
}

{
    "kind": "right",
    "value": [
        [
            {
                "kind": "expr_statement",
                "expr": {
                    "kind": "call_expr",
                    "fn": {
                        "kind": "member_expr",
                        "obj": {
                            "kind": "reg_exp_expr",
                            "pattern": "^[a-zA-Z][a-zA-Z0-9]*$",
                            "flags": ""
                        },
                        "prop": "test"
                    },
                    "args": [
                        {
                            "kind": "var_expr",
                            "name": "id"
                        }
                    ]
                }
            }
        ],
        {
            "source": "/^[a-zA-Z][a-zA-Z0-9]*$/.test(id)",
            "offset": 33,
            "data": {
                "lineOffsetTable": [
                    [
                        0,
                        "/^[a-zA-Z][a-zA-Z0-9]*$/.test(id)"
                    ]
                ],
                "$cache": {
                    "0": [
                        {
                            "value": {
                                "kind": "right",
                                "value": [
                                    {
                                        "kind": "t_operator",
                                        "value": "/",
                                        "start": 0,
                                        "end": 1
                                    },
                                    {
                                        "source": "/^[a-zA-Z][a-zA-Z0-9]*$/.test(id)",
                                        "offset": 1,
                                        "data": "Cycle(root.value[1].data.$cache[\"0\"][0].value.value[1].data)"
                                    }
                                ]
                            }
                        },
                        {
                            "value": {
                                "kind": "right",
                                "value": [
                                    {
                                        "kind": "reg_exp_expr",
                                        "pattern": "^[a-zA-Z][a-zA-Z0-9]*$",
                                        "flags": ""
                                    },
                                    {
                                        "source": "/^[a-zA-Z][a-zA-Z0-9]*$/.test(id)",
                                        "offset": 24,
                                        "data": "Cycle(root.value[1].data.$cache[\"0\"][1].value.value[1].data)"
                                    }
                                ]
                            }
                        }
                    ],
                    "24": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_operator",
                                    "value": ".",
                                    "start": 24,
                                    "end": 25
                                },
                                {
                                    "source": "/^[a-zA-Z][a-zA-Z0-9]*$/.test(id)",
                                    "offset": 25,
                                    "data": "Cycle(root.value[1].data.$cache[24].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "25": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_id",
                                    "value": "test",
                                    "start": 25,
                                    "end": 29
                                },
                                {
                                    "source": "/^[a-zA-Z][a-zA-Z0-9]*$/.test(id)",
                                    "offset": 29,
                                    "data": "Cycle(root.value[1].data.$cache[25].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "29": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_punct",
                                    "value": "(",
                                    "start": 29,
                                    "end": 30
                                },
                                {
                                    "source": "/^[a-zA-Z][a-zA-Z0-9]*$/.test(id)",
                                    "offset": 30,
                                    "data": "Cycle(root.value[1].data.$cache[29].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "30": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_id",
                                    "value": "id",
                                    "start": 30,
                                    "end": 32
                                },
                                {
                                    "source": "/^[a-zA-Z][a-zA-Z0-9]*$/.test(id)",
                                    "offset": 32,
                                    "data": "Cycle(root.value[1].data.$cache[30].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "32": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_punct",
                                    "value": ")",
                                    "start": 32,
                                    "end": 33
                                },
                                "Cycle(root.value[1].data.$cache[32].value.value[1])"
                            ]
                        }
                    },
                    "33": {
                        "value": {
                            "kind": "left",
                            "value": {
                                "kind": "lex_error",
                                "message": "eos_reached",
                                "position": 33
                            }
                        }
                    }
                }
            }
        }
    ]
}

{
    "kind": "right",
    "value": [
        [
            {
                "kind": "expr_statement",
                "expr": {
                    "kind": "call_expr",
                    "fn": {
                        "kind": "member_expr",
                        "obj": {
                            "kind": "reg_exp_expr",
                            "pattern": "[/]",
                            "flags": ""
                        },
                        "prop": "test"
                    },
                    "args": [
                        {
                            "kind": "var_expr",
                            "name": "id"
                        }
                    ]
                }
            }
        ],
        {
            "source": "/[/]/.test(id)",
            "offset": 14,
            "data": {
                "lineOffsetTable": [
                    [
                        0,
                        "/[/]/.test(id)"
                    ]
                ],
                "$cache": {
                    "0": [
                        {
                            "value": {
                                "kind": "right",
                                "value": [
                                    {
                                        "kind": "t_operator",
                                        "value": "/",
                                        "start": 0,
                                        "end": 1
                                    },
                                    {
                                        "source": "/[/]/.test(id)",
                                        "offset": 1,
                                        "data": "Cycle(root.value[1].data.$cache[\"0\"][0].value.value[1].data)"
                                    }
                                ]
                            }
                        },
                        {
                            "value": {
                                "kind": "right",
                                "value": [
                                    {
                                        "kind": "reg_exp_expr",
                                        "pattern": "[/]",
                                        "flags": ""
                                    },
                                    {
                                        "source": "/[/]/.test(id)",
                                        "offset": 5,
                                        "data": "Cycle(root.value[1].data.$cache[\"0\"][1].value.value[1].data)"
                                    }
                                ]
                            }
                        }
                    ],
                    "5": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_operator",
                                    "value": ".",
                                    "start": 5,
                                    "end": 6
                                },
                                {
                                    "source": "/[/]/.test(id)",
                                    "offset": 6,
                                    "data": "Cycle(root.value[1].data.$cache[5].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "6": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_id",
                                    "value": "test",
                                    "start": 6,
                                    "end": 10
                                },
                                {
                                    "source": "/[/]/.test(id)",
                                    "offset": 10,
                                    "data": "Cycle(root.value[1].data.$cache[6].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "10": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_punct",
                                    "value": "(",
                                    "start": 10,
                                    "end": 11
                                },
                                {
                                    "source": "/[/]/.test(id)",
                                    "offset": 11,
                                    "data": "Cycle(root.value[1].data.$cache[10].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "11": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_id",
                                    "value": "id",
                                    "start": 11,
                                    "end": 13
                                },
                                {
                                    "source": "/[/]/.test(id)",
                                    "offset": 13,
                                    "data": "Cycle(root.value[1].data.$cache[11].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "13": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_punct",
                                    "value": ")",
                                    "start": 13,
                                    "end": 14
                                },
                                "Cycle(root.value[1].data.$cache[13].value.value[1])"
                            ]
                        }
                    },
                    "14": {
                        "value": {
                            "kind": "left",
                            "value": {
                                "kind": "lex_error",
                                "message": "eos_reached",
                                "position": 14
                            }
                        }
                    }
                }
            }
        }
    ]
}

{
    "kind": "right",
    "value": [
        [
            {
                "kind": "expr_statement",
                "expr": {
                    "kind": "reg_exp_expr",
                    "pattern": "'\\/'",
                    "flags": "img"
                }
            }
        ],
        {
            "source": "/'\\/'/img",
            "offset": 9,
            "data": {
                "lineOffsetTable": [
                    [
                        0,
                        "/'\\/'/img"
                    ]
                ],
                "$cache": {
                    "0": [
                        {
                            "value": {
                                "kind": "right",
                                "value": [
                                    {
                                        "kind": "t_operator",
                                        "value": "/",
                                        "start": 0,
                                        "end": 1
                                    },
                                    {
                                        "source": "/'\\/'/img",
                                        "offset": 1,
                                        "data": "Cycle(root.value[1].data.$cache[\"0\"][0].value.value[1].data)"
                                    }
                                ]
                            }
                        },
                        {
                            "value": {
                                "kind": "right",
                                "value": [
                                    {
                                        "kind": "reg_exp_expr",
                                        "pattern": "'\\/'",
                                        "flags": "img"
                                    },
                                    "Cycle(root.value[1].data.$cache[\"0\"][1].value.value[1])"
                                ]
                            }
                        }
                    ],
                    "9": {
                        "value": {
                            "kind": "left",
                            "value": {
                                "kind": "lex_error",
                                "message": "eos_reached",
                                "position": 9
                            }
                        }
                    }
                }
            }
        }
    ]
}

{
    "kind": "right",
    "value": [
        [
            {
                "kind": "expr_statement",
                "expr": {
                    "kind": "call_expr",
                    "fn": {
                        "kind": "member_expr",
                        "obj": {
                            "kind": "str_expr",
                            "value": "hello"
                        },
                        "prop": "replace"
                    },
                    "args": [
                        {
                            "kind": "reg_exp_expr",
                            "pattern": "l",
                            "flags": "g"
                        },
                        {
                            "kind": "str_expr",
                            "value": "r"
                        }
                    ]
                }
            }
        ],
        {
            "source": "'hello'.replace(/l/g, 'r')",
            "offset": 26,
            "data": {
                "lineOffsetTable": [
                    [
                        0,
                        "'hello'.replace(/l/g, 'r')"
                    ]
                ],
                "$cache": {
                    "0": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_string",
                                    "value": "hello",
                                    "start": 0,
                                    "end": 7
                                },
                                {
                                    "source": "'hello'.replace(/l/g, 'r')",
                                    "offset": 7,
                                    "data": "Cycle(root.value[1].data.$cache[\"0\"].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "7": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_operator",
                                    "value": ".",
                                    "start": 7,
                                    "end": 8
                                },
                                {
                                    "source": "'hello'.replace(/l/g, 'r')",
                                    "offset": 8,
                                    "data": "Cycle(root.value[1].data.$cache[7].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "8": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_id",
                                    "value": "replace",
                                    "start": 8,
                                    "end": 15
                                },
                                {
                                    "source": "'hello'.replace(/l/g, 'r')",
                                    "offset": 15,
                                    "data": "Cycle(root.value[1].data.$cache[8].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "15": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_punct",
                                    "value": "(",
                                    "start": 15,
                                    "end": 16
                                },
                                {
                                    "source": "'hello'.replace(/l/g, 'r')",
                                    "offset": 16,
                                    "data": "Cycle(root.value[1].data.$cache[15].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "16": [
                        {
                            "value": {
                                "kind": "right",
                                "value": [
                                    {
                                        "kind": "t_operator",
                                        "value": "/",
                                        "start": 16,
                                        "end": 17
                                    },
                                    {
                                        "source": "'hello'.replace(/l/g, 'r')",
                                        "offset": 17,
                                        "data": "Cycle(root.value[1].data.$cache[16][0].value.value[1].data)"
                                    }
                                ]
                            }
                        },
                        {
                            "value": {
                                "kind": "right",
                                "value": [
                                    {
                                        "kind": "reg_exp_expr",
                                        "pattern": "l",
                                        "flags": "g"
                                    },
                                    {
                                        "source": "'hello'.replace(/l/g, 'r')",
                                        "offset": 20,
                                        "data": "Cycle(root.value[1].data.$cache[16][1].value.value[1].data)"
                                    }
                                ]
                            }
                        }
                    ],
                    "20": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_punct",
                                    "value": ",",
                                    "start": 20,
                                    "end": 21
                                },
                                {
                                    "source": "'hello'.replace(/l/g, 'r')",
                                    "offset": 22,
                                    "data": "Cycle(root.value[1].data.$cache[20].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "22": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_string",
                                    "value": "r",
                                    "start": 22,
                                    "end": 25
                                },
                                {
                                    "source": "'hello'.replace(/l/g, 'r')",
                                    "offset": 25,
                                    "data": "Cycle(root.value[1].data.$cache[22].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "25": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_punct",
                                    "value": ")",
                                    "start": 25,
                                    "end": 26
                                },
                                "Cycle(root.value[1].data.$cache[25].value.value[1])"
                            ]
                        }
                    },
                    "26": {
                        "value": {
                            "kind": "left",
                            "value": {
                                "kind": "lex_error",
                                "message": "eos_reached",
                                "position": 26
                            }
                        }
                    }
                }
            }
        }
    ]
}

{
    "kind": "left",
    "value": {
        "kind": "lex_error",
        "message": "unexpected_character",
        "position": 0
    }
}

{
    "kind": "left",
    "value": {
        "kind": "lex_error",
        "message": "unterminated_regexp",
        "position": 0
    }
}

{
    "kind": "left",
    "value": {
        "kind": "lex_error",
        "message": "unterminated_string",
        "position": 0
    }
}

{
    "kind": "left",
    "value": {
        "kind": "lex_error",
        "message": "unterminated_comment",
        "position": 0
    }
}

{
    "kind": "left",
    "value": {
        "kind": "lex_error",
        "message": "unterminated_comment",
        "position": 7
    }
}

{
    "kind": "left",
    "value": {
        "kind": "lex_error",
        "message": "unterminated_comment",
        "position": 7
    }
}

{
    "kind": "left",
    "value": {
        "kind": "lex_error",
        "message": "unterminated_comment",
        "position": 5
    }
}

{
    "kind": "left",
    "value": {
        "kind": "lex_error",
        "message": "unterminated_comment",
        "position": 1
    }
}

{
    "kind": "right",
    "value": [
        [
            {
                "kind": "expr_statement",
                "expr": {
                    "kind": "var_expr",
                    "name": "ok"
                }
            }
        ],
        {
            "source": "ok//",
            "offset": 4,
            "data": {
                "lineOffsetTable": [
                    [
                        0,
                        "ok//"
                    ]
                ],
                "$cache": {
                    "0": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_id",
                                    "value": "ok",
                                    "start": 0,
                                    "end": 2
                                },
                                "Cycle(root.value[1].data.$cache[\"0\"].value.value[1])"
                            ]
                        }
                    },
                    "4": {
                        "value": {
                            "kind": "left",
                            "value": {
                                "kind": "lex_error",
                                "message": "eos_reached",
                                "position": 4
                            }
                        }
                    }
                }
            }
        }
    ]
}

{
    "kind": "left",
    "value": {
        "kind": "lex_error",
        "message": "unexpected_character",
        "position": 12
    }
}

{
    "kind": "left",
    "value": "1:6: Error: eos_reached"
}

{
    "kind": "left",
    "value": "1:7: Error: Expected: \"t_id\" found \"(\" (t_punct)"
}

{
    "kind": "left",
    "value": "1:11: Error: Expected: \"(\" found \"{\" (t_punct)"
}

{
    "kind": "right",
    "value": [
        [
            {
                "kind": "expr_statement",
                "expr": {
                    "kind": "binary_expr",
                    "op": ">>=",
                    "left": {
                        "kind": "binary_expr",
                        "op": ">>=",
                        "left": {
                            "kind": "var_expr",
                            "name": "f"
                        },
                        "right": {
                            "kind": "var_expr",
                            "name": "g"
                        }
                    },
                    "right": {
                        "kind": "lambda_expr",
                        "params": [
                            "x"
                        ],
                        "body": {
                            "kind": "num_expr",
                            "value": 5
                        }
                    }
                }
            }
        ],
        {
            "source": "f >>= g >>= x => 5",
            "offset": 18,
            "data": {
                "lineOffsetTable": [
                    [
                        0,
                        "f >>= g >>= x => 5"
                    ]
                ],
                "$cache": {
                    "0": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_id",
                                    "value": "f",
                                    "start": 0,
                                    "end": 1
                                },
                                {
                                    "source": "f >>= g >>= x => 5",
                                    "offset": 2,
                                    "data": "Cycle(root.value[1].data.$cache[\"0\"].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "2": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_operator",
                                    "value": ">>=",
                                    "start": 2,
                                    "end": 5
                                },
                                {
                                    "source": "f >>= g >>= x => 5",
                                    "offset": 6,
                                    "data": "Cycle(root.value[1].data.$cache[2].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "6": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_id",
                                    "value": "g",
                                    "start": 6,
                                    "end": 7
                                },
                                {
                                    "source": "f >>= g >>= x => 5",
                                    "offset": 8,
                                    "data": "Cycle(root.value[1].data.$cache[6].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "8": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_operator",
                                    "value": ">>=",
                                    "start": 8,
                                    "end": 11
                                },
                                {
                                    "source": "f >>= g >>= x => 5",
                                    "offset": 12,
                                    "data": "Cycle(root.value[1].data.$cache[8].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "12": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_id",
                                    "value": "x",
                                    "start": 12,
                                    "end": 13
                                },
                                {
                                    "source": "f >>= g >>= x => 5",
                                    "offset": 14,
                                    "data": "Cycle(root.value[1].data.$cache[12].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "14": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_operator",
                                    "value": "=>",
                                    "start": 14,
                                    "end": 16
                                },
                                {
                                    "source": "f >>= g >>= x => 5",
                                    "offset": 17,
                                    "data": "Cycle(root.value[1].data.$cache[14].value.value[1].data)"
                                }
                            ]
                        }
                    },
                    "17": {
                        "value": {
                            "kind": "right",
                            "value": [
                                {
                                    "kind": "t_number",
                                    "value": "5",
                                    "start": 17,
                                    "end": 18
                                },
                                "Cycle(root.value[1].data.$cache[17].value.value[1])"
                            ]
                        }
                    },
                    "18": {
                        "value": {
                            "kind": "left",
                            "value": {
                                "kind": "lex_error",
                                "message": "eos_reached",
                                "position": 18
                            }
                        }
                    }
                }
            }
        }
    ]
}
